// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AddUsersToWorkGroupAttachmentAddInfo struct {
	// User id set, matched with CAM side uin.
	UserIds []string `pulumi:"userIds"`
	// Work group id.
	WorkGroupId int `pulumi:"workGroupId"`
}

// AddUsersToWorkGroupAttachmentAddInfoInput is an input type that accepts AddUsersToWorkGroupAttachmentAddInfoArgs and AddUsersToWorkGroupAttachmentAddInfoOutput values.
// You can construct a concrete instance of `AddUsersToWorkGroupAttachmentAddInfoInput` via:
//
//	AddUsersToWorkGroupAttachmentAddInfoArgs{...}
type AddUsersToWorkGroupAttachmentAddInfoInput interface {
	pulumi.Input

	ToAddUsersToWorkGroupAttachmentAddInfoOutput() AddUsersToWorkGroupAttachmentAddInfoOutput
	ToAddUsersToWorkGroupAttachmentAddInfoOutputWithContext(context.Context) AddUsersToWorkGroupAttachmentAddInfoOutput
}

type AddUsersToWorkGroupAttachmentAddInfoArgs struct {
	// User id set, matched with CAM side uin.
	UserIds pulumi.StringArrayInput `pulumi:"userIds"`
	// Work group id.
	WorkGroupId pulumi.IntInput `pulumi:"workGroupId"`
}

func (AddUsersToWorkGroupAttachmentAddInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddUsersToWorkGroupAttachmentAddInfo)(nil)).Elem()
}

func (i AddUsersToWorkGroupAttachmentAddInfoArgs) ToAddUsersToWorkGroupAttachmentAddInfoOutput() AddUsersToWorkGroupAttachmentAddInfoOutput {
	return i.ToAddUsersToWorkGroupAttachmentAddInfoOutputWithContext(context.Background())
}

func (i AddUsersToWorkGroupAttachmentAddInfoArgs) ToAddUsersToWorkGroupAttachmentAddInfoOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentAddInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddUsersToWorkGroupAttachmentAddInfoOutput)
}

func (i AddUsersToWorkGroupAttachmentAddInfoArgs) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutput() AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return i.ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(context.Background())
}

func (i AddUsersToWorkGroupAttachmentAddInfoArgs) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddUsersToWorkGroupAttachmentAddInfoOutput).ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(ctx)
}

// AddUsersToWorkGroupAttachmentAddInfoPtrInput is an input type that accepts AddUsersToWorkGroupAttachmentAddInfoArgs, AddUsersToWorkGroupAttachmentAddInfoPtr and AddUsersToWorkGroupAttachmentAddInfoPtrOutput values.
// You can construct a concrete instance of `AddUsersToWorkGroupAttachmentAddInfoPtrInput` via:
//
//	        AddUsersToWorkGroupAttachmentAddInfoArgs{...}
//
//	or:
//
//	        nil
type AddUsersToWorkGroupAttachmentAddInfoPtrInput interface {
	pulumi.Input

	ToAddUsersToWorkGroupAttachmentAddInfoPtrOutput() AddUsersToWorkGroupAttachmentAddInfoPtrOutput
	ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(context.Context) AddUsersToWorkGroupAttachmentAddInfoPtrOutput
}

type addUsersToWorkGroupAttachmentAddInfoPtrType AddUsersToWorkGroupAttachmentAddInfoArgs

func AddUsersToWorkGroupAttachmentAddInfoPtr(v *AddUsersToWorkGroupAttachmentAddInfoArgs) AddUsersToWorkGroupAttachmentAddInfoPtrInput {
	return (*addUsersToWorkGroupAttachmentAddInfoPtrType)(v)
}

func (*addUsersToWorkGroupAttachmentAddInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddUsersToWorkGroupAttachmentAddInfo)(nil)).Elem()
}

func (i *addUsersToWorkGroupAttachmentAddInfoPtrType) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutput() AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return i.ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(context.Background())
}

func (i *addUsersToWorkGroupAttachmentAddInfoPtrType) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddUsersToWorkGroupAttachmentAddInfoPtrOutput)
}

type AddUsersToWorkGroupAttachmentAddInfoOutput struct{ *pulumi.OutputState }

func (AddUsersToWorkGroupAttachmentAddInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddUsersToWorkGroupAttachmentAddInfo)(nil)).Elem()
}

func (o AddUsersToWorkGroupAttachmentAddInfoOutput) ToAddUsersToWorkGroupAttachmentAddInfoOutput() AddUsersToWorkGroupAttachmentAddInfoOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentAddInfoOutput) ToAddUsersToWorkGroupAttachmentAddInfoOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentAddInfoOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentAddInfoOutput) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutput() AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return o.ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(context.Background())
}

func (o AddUsersToWorkGroupAttachmentAddInfoOutput) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AddUsersToWorkGroupAttachmentAddInfo) *AddUsersToWorkGroupAttachmentAddInfo {
		return &v
	}).(AddUsersToWorkGroupAttachmentAddInfoPtrOutput)
}

// User id set, matched with CAM side uin.
func (o AddUsersToWorkGroupAttachmentAddInfoOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddUsersToWorkGroupAttachmentAddInfo) []string { return v.UserIds }).(pulumi.StringArrayOutput)
}

// Work group id.
func (o AddUsersToWorkGroupAttachmentAddInfoOutput) WorkGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v AddUsersToWorkGroupAttachmentAddInfo) int { return v.WorkGroupId }).(pulumi.IntOutput)
}

type AddUsersToWorkGroupAttachmentAddInfoPtrOutput struct{ *pulumi.OutputState }

func (AddUsersToWorkGroupAttachmentAddInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddUsersToWorkGroupAttachmentAddInfo)(nil)).Elem()
}

func (o AddUsersToWorkGroupAttachmentAddInfoPtrOutput) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutput() AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentAddInfoPtrOutput) ToAddUsersToWorkGroupAttachmentAddInfoPtrOutputWithContext(ctx context.Context) AddUsersToWorkGroupAttachmentAddInfoPtrOutput {
	return o
}

func (o AddUsersToWorkGroupAttachmentAddInfoPtrOutput) Elem() AddUsersToWorkGroupAttachmentAddInfoOutput {
	return o.ApplyT(func(v *AddUsersToWorkGroupAttachmentAddInfo) AddUsersToWorkGroupAttachmentAddInfo {
		if v != nil {
			return *v
		}
		var ret AddUsersToWorkGroupAttachmentAddInfo
		return ret
	}).(AddUsersToWorkGroupAttachmentAddInfoOutput)
}

// User id set, matched with CAM side uin.
func (o AddUsersToWorkGroupAttachmentAddInfoPtrOutput) UserIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddUsersToWorkGroupAttachmentAddInfo) []string {
		if v == nil {
			return nil
		}
		return v.UserIds
	}).(pulumi.StringArrayOutput)
}

// Work group id.
func (o AddUsersToWorkGroupAttachmentAddInfoPtrOutput) WorkGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AddUsersToWorkGroupAttachmentAddInfo) *int {
		if v == nil {
			return nil
		}
		return &v.WorkGroupId
	}).(pulumi.IntPtrOutput)
}

type AttachUserPolicyOperationPolicySet struct {
	Catalog    string  `pulumi:"catalog"`
	Column     *string `pulumi:"column"`
	CreateTime *string `pulumi:"createTime"`
	DataEngine *string `pulumi:"dataEngine"`
	Database   string  `pulumi:"database"`
	Function   *string `pulumi:"function"`
	Id         *int    `pulumi:"id"`
	Mode       *string `pulumi:"mode"`
	Operation  string  `pulumi:"operation"`
	Operator   *string `pulumi:"operator"`
	PolicyType *string `pulumi:"policyType"`
	ReAuth     *bool   `pulumi:"reAuth"`
	Source     *string `pulumi:"source"`
	SourceId   *int    `pulumi:"sourceId"`
	SourceName *string `pulumi:"sourceName"`
	Table      string  `pulumi:"table"`
	View       *string `pulumi:"view"`
}

// AttachUserPolicyOperationPolicySetInput is an input type that accepts AttachUserPolicyOperationPolicySetArgs and AttachUserPolicyOperationPolicySetOutput values.
// You can construct a concrete instance of `AttachUserPolicyOperationPolicySetInput` via:
//
//	AttachUserPolicyOperationPolicySetArgs{...}
type AttachUserPolicyOperationPolicySetInput interface {
	pulumi.Input

	ToAttachUserPolicyOperationPolicySetOutput() AttachUserPolicyOperationPolicySetOutput
	ToAttachUserPolicyOperationPolicySetOutputWithContext(context.Context) AttachUserPolicyOperationPolicySetOutput
}

type AttachUserPolicyOperationPolicySetArgs struct {
	Catalog    pulumi.StringInput    `pulumi:"catalog"`
	Column     pulumi.StringPtrInput `pulumi:"column"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	DataEngine pulumi.StringPtrInput `pulumi:"dataEngine"`
	Database   pulumi.StringInput    `pulumi:"database"`
	Function   pulumi.StringPtrInput `pulumi:"function"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Mode       pulumi.StringPtrInput `pulumi:"mode"`
	Operation  pulumi.StringInput    `pulumi:"operation"`
	Operator   pulumi.StringPtrInput `pulumi:"operator"`
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	ReAuth     pulumi.BoolPtrInput   `pulumi:"reAuth"`
	Source     pulumi.StringPtrInput `pulumi:"source"`
	SourceId   pulumi.IntPtrInput    `pulumi:"sourceId"`
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	Table      pulumi.StringInput    `pulumi:"table"`
	View       pulumi.StringPtrInput `pulumi:"view"`
}

func (AttachUserPolicyOperationPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (i AttachUserPolicyOperationPolicySetArgs) ToAttachUserPolicyOperationPolicySetOutput() AttachUserPolicyOperationPolicySetOutput {
	return i.ToAttachUserPolicyOperationPolicySetOutputWithContext(context.Background())
}

func (i AttachUserPolicyOperationPolicySetArgs) ToAttachUserPolicyOperationPolicySetOutputWithContext(ctx context.Context) AttachUserPolicyOperationPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachUserPolicyOperationPolicySetOutput)
}

// AttachUserPolicyOperationPolicySetArrayInput is an input type that accepts AttachUserPolicyOperationPolicySetArray and AttachUserPolicyOperationPolicySetArrayOutput values.
// You can construct a concrete instance of `AttachUserPolicyOperationPolicySetArrayInput` via:
//
//	AttachUserPolicyOperationPolicySetArray{ AttachUserPolicyOperationPolicySetArgs{...} }
type AttachUserPolicyOperationPolicySetArrayInput interface {
	pulumi.Input

	ToAttachUserPolicyOperationPolicySetArrayOutput() AttachUserPolicyOperationPolicySetArrayOutput
	ToAttachUserPolicyOperationPolicySetArrayOutputWithContext(context.Context) AttachUserPolicyOperationPolicySetArrayOutput
}

type AttachUserPolicyOperationPolicySetArray []AttachUserPolicyOperationPolicySetInput

func (AttachUserPolicyOperationPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (i AttachUserPolicyOperationPolicySetArray) ToAttachUserPolicyOperationPolicySetArrayOutput() AttachUserPolicyOperationPolicySetArrayOutput {
	return i.ToAttachUserPolicyOperationPolicySetArrayOutputWithContext(context.Background())
}

func (i AttachUserPolicyOperationPolicySetArray) ToAttachUserPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) AttachUserPolicyOperationPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachUserPolicyOperationPolicySetArrayOutput)
}

type AttachUserPolicyOperationPolicySetOutput struct{ *pulumi.OutputState }

func (AttachUserPolicyOperationPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (o AttachUserPolicyOperationPolicySetOutput) ToAttachUserPolicyOperationPolicySetOutput() AttachUserPolicyOperationPolicySetOutput {
	return o
}

func (o AttachUserPolicyOperationPolicySetOutput) ToAttachUserPolicyOperationPolicySetOutputWithContext(ctx context.Context) AttachUserPolicyOperationPolicySetOutput {
	return o
}

func (o AttachUserPolicyOperationPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.Column }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) DataEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.DataEngine }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.Function }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) ReAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *bool { return v.ReAuth }).(pulumi.BoolPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) SourceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *int { return v.SourceId }).(pulumi.IntPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

func (o AttachUserPolicyOperationPolicySetOutput) View() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachUserPolicyOperationPolicySet) *string { return v.View }).(pulumi.StringPtrOutput)
}

type AttachUserPolicyOperationPolicySetArrayOutput struct{ *pulumi.OutputState }

func (AttachUserPolicyOperationPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (o AttachUserPolicyOperationPolicySetArrayOutput) ToAttachUserPolicyOperationPolicySetArrayOutput() AttachUserPolicyOperationPolicySetArrayOutput {
	return o
}

func (o AttachUserPolicyOperationPolicySetArrayOutput) ToAttachUserPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) AttachUserPolicyOperationPolicySetArrayOutput {
	return o
}

func (o AttachUserPolicyOperationPolicySetArrayOutput) Index(i pulumi.IntInput) AttachUserPolicyOperationPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AttachUserPolicyOperationPolicySet {
		return vs[0].([]AttachUserPolicyOperationPolicySet)[vs[1].(int)]
	}).(AttachUserPolicyOperationPolicySetOutput)
}

type AttachWorkGroupPolicyOperationPolicySet struct {
	Catalog    string  `pulumi:"catalog"`
	Column     *string `pulumi:"column"`
	CreateTime *string `pulumi:"createTime"`
	DataEngine *string `pulumi:"dataEngine"`
	Database   string  `pulumi:"database"`
	Function   *string `pulumi:"function"`
	Id         *int    `pulumi:"id"`
	Mode       *string `pulumi:"mode"`
	Operation  string  `pulumi:"operation"`
	Operator   *string `pulumi:"operator"`
	PolicyType *string `pulumi:"policyType"`
	ReAuth     *bool   `pulumi:"reAuth"`
	Source     *string `pulumi:"source"`
	SourceId   *int    `pulumi:"sourceId"`
	SourceName *string `pulumi:"sourceName"`
	Table      string  `pulumi:"table"`
	View       *string `pulumi:"view"`
}

// AttachWorkGroupPolicyOperationPolicySetInput is an input type that accepts AttachWorkGroupPolicyOperationPolicySetArgs and AttachWorkGroupPolicyOperationPolicySetOutput values.
// You can construct a concrete instance of `AttachWorkGroupPolicyOperationPolicySetInput` via:
//
//	AttachWorkGroupPolicyOperationPolicySetArgs{...}
type AttachWorkGroupPolicyOperationPolicySetInput interface {
	pulumi.Input

	ToAttachWorkGroupPolicyOperationPolicySetOutput() AttachWorkGroupPolicyOperationPolicySetOutput
	ToAttachWorkGroupPolicyOperationPolicySetOutputWithContext(context.Context) AttachWorkGroupPolicyOperationPolicySetOutput
}

type AttachWorkGroupPolicyOperationPolicySetArgs struct {
	Catalog    pulumi.StringInput    `pulumi:"catalog"`
	Column     pulumi.StringPtrInput `pulumi:"column"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	DataEngine pulumi.StringPtrInput `pulumi:"dataEngine"`
	Database   pulumi.StringInput    `pulumi:"database"`
	Function   pulumi.StringPtrInput `pulumi:"function"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Mode       pulumi.StringPtrInput `pulumi:"mode"`
	Operation  pulumi.StringInput    `pulumi:"operation"`
	Operator   pulumi.StringPtrInput `pulumi:"operator"`
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	ReAuth     pulumi.BoolPtrInput   `pulumi:"reAuth"`
	Source     pulumi.StringPtrInput `pulumi:"source"`
	SourceId   pulumi.IntPtrInput    `pulumi:"sourceId"`
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	Table      pulumi.StringInput    `pulumi:"table"`
	View       pulumi.StringPtrInput `pulumi:"view"`
}

func (AttachWorkGroupPolicyOperationPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (i AttachWorkGroupPolicyOperationPolicySetArgs) ToAttachWorkGroupPolicyOperationPolicySetOutput() AttachWorkGroupPolicyOperationPolicySetOutput {
	return i.ToAttachWorkGroupPolicyOperationPolicySetOutputWithContext(context.Background())
}

func (i AttachWorkGroupPolicyOperationPolicySetArgs) ToAttachWorkGroupPolicyOperationPolicySetOutputWithContext(ctx context.Context) AttachWorkGroupPolicyOperationPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachWorkGroupPolicyOperationPolicySetOutput)
}

// AttachWorkGroupPolicyOperationPolicySetArrayInput is an input type that accepts AttachWorkGroupPolicyOperationPolicySetArray and AttachWorkGroupPolicyOperationPolicySetArrayOutput values.
// You can construct a concrete instance of `AttachWorkGroupPolicyOperationPolicySetArrayInput` via:
//
//	AttachWorkGroupPolicyOperationPolicySetArray{ AttachWorkGroupPolicyOperationPolicySetArgs{...} }
type AttachWorkGroupPolicyOperationPolicySetArrayInput interface {
	pulumi.Input

	ToAttachWorkGroupPolicyOperationPolicySetArrayOutput() AttachWorkGroupPolicyOperationPolicySetArrayOutput
	ToAttachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(context.Context) AttachWorkGroupPolicyOperationPolicySetArrayOutput
}

type AttachWorkGroupPolicyOperationPolicySetArray []AttachWorkGroupPolicyOperationPolicySetInput

func (AttachWorkGroupPolicyOperationPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (i AttachWorkGroupPolicyOperationPolicySetArray) ToAttachWorkGroupPolicyOperationPolicySetArrayOutput() AttachWorkGroupPolicyOperationPolicySetArrayOutput {
	return i.ToAttachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(context.Background())
}

func (i AttachWorkGroupPolicyOperationPolicySetArray) ToAttachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) AttachWorkGroupPolicyOperationPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttachWorkGroupPolicyOperationPolicySetArrayOutput)
}

type AttachWorkGroupPolicyOperationPolicySetOutput struct{ *pulumi.OutputState }

func (AttachWorkGroupPolicyOperationPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) ToAttachWorkGroupPolicyOperationPolicySetOutput() AttachWorkGroupPolicyOperationPolicySetOutput {
	return o
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) ToAttachWorkGroupPolicyOperationPolicySetOutputWithContext(ctx context.Context) AttachWorkGroupPolicyOperationPolicySetOutput {
	return o
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.Column }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) DataEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.DataEngine }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.Function }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) ReAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *bool { return v.ReAuth }).(pulumi.BoolPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) SourceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *int { return v.SourceId }).(pulumi.IntPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

func (o AttachWorkGroupPolicyOperationPolicySetOutput) View() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttachWorkGroupPolicyOperationPolicySet) *string { return v.View }).(pulumi.StringPtrOutput)
}

type AttachWorkGroupPolicyOperationPolicySetArrayOutput struct{ *pulumi.OutputState }

func (AttachWorkGroupPolicyOperationPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AttachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (o AttachWorkGroupPolicyOperationPolicySetArrayOutput) ToAttachWorkGroupPolicyOperationPolicySetArrayOutput() AttachWorkGroupPolicyOperationPolicySetArrayOutput {
	return o
}

func (o AttachWorkGroupPolicyOperationPolicySetArrayOutput) ToAttachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) AttachWorkGroupPolicyOperationPolicySetArrayOutput {
	return o
}

func (o AttachWorkGroupPolicyOperationPolicySetArrayOutput) Index(i pulumi.IntInput) AttachWorkGroupPolicyOperationPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AttachWorkGroupPolicyOperationPolicySet {
		return vs[0].([]AttachWorkGroupPolicyOperationPolicySet)[vs[1].(int)]
	}).(AttachWorkGroupPolicyOperationPolicySetOutput)
}

type BindWorkGroupsToUserAttachmentAddInfo struct {
	// User id, matched with CAM side uin.
	UserId string `pulumi:"userId"`
	// Work group id set.
	WorkGroupIds []int `pulumi:"workGroupIds"`
}

// BindWorkGroupsToUserAttachmentAddInfoInput is an input type that accepts BindWorkGroupsToUserAttachmentAddInfoArgs and BindWorkGroupsToUserAttachmentAddInfoOutput values.
// You can construct a concrete instance of `BindWorkGroupsToUserAttachmentAddInfoInput` via:
//
//	BindWorkGroupsToUserAttachmentAddInfoArgs{...}
type BindWorkGroupsToUserAttachmentAddInfoInput interface {
	pulumi.Input

	ToBindWorkGroupsToUserAttachmentAddInfoOutput() BindWorkGroupsToUserAttachmentAddInfoOutput
	ToBindWorkGroupsToUserAttachmentAddInfoOutputWithContext(context.Context) BindWorkGroupsToUserAttachmentAddInfoOutput
}

type BindWorkGroupsToUserAttachmentAddInfoArgs struct {
	// User id, matched with CAM side uin.
	UserId pulumi.StringInput `pulumi:"userId"`
	// Work group id set.
	WorkGroupIds pulumi.IntArrayInput `pulumi:"workGroupIds"`
}

func (BindWorkGroupsToUserAttachmentAddInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindWorkGroupsToUserAttachmentAddInfo)(nil)).Elem()
}

func (i BindWorkGroupsToUserAttachmentAddInfoArgs) ToBindWorkGroupsToUserAttachmentAddInfoOutput() BindWorkGroupsToUserAttachmentAddInfoOutput {
	return i.ToBindWorkGroupsToUserAttachmentAddInfoOutputWithContext(context.Background())
}

func (i BindWorkGroupsToUserAttachmentAddInfoArgs) ToBindWorkGroupsToUserAttachmentAddInfoOutputWithContext(ctx context.Context) BindWorkGroupsToUserAttachmentAddInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindWorkGroupsToUserAttachmentAddInfoOutput)
}

func (i BindWorkGroupsToUserAttachmentAddInfoArgs) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutput() BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return i.ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(context.Background())
}

func (i BindWorkGroupsToUserAttachmentAddInfoArgs) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(ctx context.Context) BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindWorkGroupsToUserAttachmentAddInfoOutput).ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(ctx)
}

// BindWorkGroupsToUserAttachmentAddInfoPtrInput is an input type that accepts BindWorkGroupsToUserAttachmentAddInfoArgs, BindWorkGroupsToUserAttachmentAddInfoPtr and BindWorkGroupsToUserAttachmentAddInfoPtrOutput values.
// You can construct a concrete instance of `BindWorkGroupsToUserAttachmentAddInfoPtrInput` via:
//
//	        BindWorkGroupsToUserAttachmentAddInfoArgs{...}
//
//	or:
//
//	        nil
type BindWorkGroupsToUserAttachmentAddInfoPtrInput interface {
	pulumi.Input

	ToBindWorkGroupsToUserAttachmentAddInfoPtrOutput() BindWorkGroupsToUserAttachmentAddInfoPtrOutput
	ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(context.Context) BindWorkGroupsToUserAttachmentAddInfoPtrOutput
}

type bindWorkGroupsToUserAttachmentAddInfoPtrType BindWorkGroupsToUserAttachmentAddInfoArgs

func BindWorkGroupsToUserAttachmentAddInfoPtr(v *BindWorkGroupsToUserAttachmentAddInfoArgs) BindWorkGroupsToUserAttachmentAddInfoPtrInput {
	return (*bindWorkGroupsToUserAttachmentAddInfoPtrType)(v)
}

func (*bindWorkGroupsToUserAttachmentAddInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BindWorkGroupsToUserAttachmentAddInfo)(nil)).Elem()
}

func (i *bindWorkGroupsToUserAttachmentAddInfoPtrType) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutput() BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return i.ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(context.Background())
}

func (i *bindWorkGroupsToUserAttachmentAddInfoPtrType) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(ctx context.Context) BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindWorkGroupsToUserAttachmentAddInfoPtrOutput)
}

type BindWorkGroupsToUserAttachmentAddInfoOutput struct{ *pulumi.OutputState }

func (BindWorkGroupsToUserAttachmentAddInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindWorkGroupsToUserAttachmentAddInfo)(nil)).Elem()
}

func (o BindWorkGroupsToUserAttachmentAddInfoOutput) ToBindWorkGroupsToUserAttachmentAddInfoOutput() BindWorkGroupsToUserAttachmentAddInfoOutput {
	return o
}

func (o BindWorkGroupsToUserAttachmentAddInfoOutput) ToBindWorkGroupsToUserAttachmentAddInfoOutputWithContext(ctx context.Context) BindWorkGroupsToUserAttachmentAddInfoOutput {
	return o
}

func (o BindWorkGroupsToUserAttachmentAddInfoOutput) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutput() BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return o.ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(context.Background())
}

func (o BindWorkGroupsToUserAttachmentAddInfoOutput) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(ctx context.Context) BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BindWorkGroupsToUserAttachmentAddInfo) *BindWorkGroupsToUserAttachmentAddInfo {
		return &v
	}).(BindWorkGroupsToUserAttachmentAddInfoPtrOutput)
}

// User id, matched with CAM side uin.
func (o BindWorkGroupsToUserAttachmentAddInfoOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v BindWorkGroupsToUserAttachmentAddInfo) string { return v.UserId }).(pulumi.StringOutput)
}

// Work group id set.
func (o BindWorkGroupsToUserAttachmentAddInfoOutput) WorkGroupIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v BindWorkGroupsToUserAttachmentAddInfo) []int { return v.WorkGroupIds }).(pulumi.IntArrayOutput)
}

type BindWorkGroupsToUserAttachmentAddInfoPtrOutput struct{ *pulumi.OutputState }

func (BindWorkGroupsToUserAttachmentAddInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BindWorkGroupsToUserAttachmentAddInfo)(nil)).Elem()
}

func (o BindWorkGroupsToUserAttachmentAddInfoPtrOutput) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutput() BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return o
}

func (o BindWorkGroupsToUserAttachmentAddInfoPtrOutput) ToBindWorkGroupsToUserAttachmentAddInfoPtrOutputWithContext(ctx context.Context) BindWorkGroupsToUserAttachmentAddInfoPtrOutput {
	return o
}

func (o BindWorkGroupsToUserAttachmentAddInfoPtrOutput) Elem() BindWorkGroupsToUserAttachmentAddInfoOutput {
	return o.ApplyT(func(v *BindWorkGroupsToUserAttachmentAddInfo) BindWorkGroupsToUserAttachmentAddInfo {
		if v != nil {
			return *v
		}
		var ret BindWorkGroupsToUserAttachmentAddInfo
		return ret
	}).(BindWorkGroupsToUserAttachmentAddInfoOutput)
}

// User id, matched with CAM side uin.
func (o BindWorkGroupsToUserAttachmentAddInfoPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BindWorkGroupsToUserAttachmentAddInfo) *string {
		if v == nil {
			return nil
		}
		return &v.UserId
	}).(pulumi.StringPtrOutput)
}

// Work group id set.
func (o BindWorkGroupsToUserAttachmentAddInfoPtrOutput) WorkGroupIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *BindWorkGroupsToUserAttachmentAddInfo) []int {
		if v == nil {
			return nil
		}
		return v.WorkGroupIds
	}).(pulumi.IntArrayOutput)
}

type DataEngineCrontabResumeSuspendStrategy struct {
	// Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
	ResumeTime *string `pulumi:"resumeTime"`
	// Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
	SuspendStrategy *int `pulumi:"suspendStrategy"`
	// Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
	SuspendTime *string `pulumi:"suspendTime"`
}

// DataEngineCrontabResumeSuspendStrategyInput is an input type that accepts DataEngineCrontabResumeSuspendStrategyArgs and DataEngineCrontabResumeSuspendStrategyOutput values.
// You can construct a concrete instance of `DataEngineCrontabResumeSuspendStrategyInput` via:
//
//	DataEngineCrontabResumeSuspendStrategyArgs{...}
type DataEngineCrontabResumeSuspendStrategyInput interface {
	pulumi.Input

	ToDataEngineCrontabResumeSuspendStrategyOutput() DataEngineCrontabResumeSuspendStrategyOutput
	ToDataEngineCrontabResumeSuspendStrategyOutputWithContext(context.Context) DataEngineCrontabResumeSuspendStrategyOutput
}

type DataEngineCrontabResumeSuspendStrategyArgs struct {
	// Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
	ResumeTime pulumi.StringPtrInput `pulumi:"resumeTime"`
	// Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
	SuspendStrategy pulumi.IntPtrInput `pulumi:"suspendStrategy"`
	// Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
	SuspendTime pulumi.StringPtrInput `pulumi:"suspendTime"`
}

func (DataEngineCrontabResumeSuspendStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (i DataEngineCrontabResumeSuspendStrategyArgs) ToDataEngineCrontabResumeSuspendStrategyOutput() DataEngineCrontabResumeSuspendStrategyOutput {
	return i.ToDataEngineCrontabResumeSuspendStrategyOutputWithContext(context.Background())
}

func (i DataEngineCrontabResumeSuspendStrategyArgs) ToDataEngineCrontabResumeSuspendStrategyOutputWithContext(ctx context.Context) DataEngineCrontabResumeSuspendStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineCrontabResumeSuspendStrategyOutput)
}

func (i DataEngineCrontabResumeSuspendStrategyArgs) ToDataEngineCrontabResumeSuspendStrategyPtrOutput() DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return i.ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(context.Background())
}

func (i DataEngineCrontabResumeSuspendStrategyArgs) ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(ctx context.Context) DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineCrontabResumeSuspendStrategyOutput).ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(ctx)
}

// DataEngineCrontabResumeSuspendStrategyPtrInput is an input type that accepts DataEngineCrontabResumeSuspendStrategyArgs, DataEngineCrontabResumeSuspendStrategyPtr and DataEngineCrontabResumeSuspendStrategyPtrOutput values.
// You can construct a concrete instance of `DataEngineCrontabResumeSuspendStrategyPtrInput` via:
//
//	        DataEngineCrontabResumeSuspendStrategyArgs{...}
//
//	or:
//
//	        nil
type DataEngineCrontabResumeSuspendStrategyPtrInput interface {
	pulumi.Input

	ToDataEngineCrontabResumeSuspendStrategyPtrOutput() DataEngineCrontabResumeSuspendStrategyPtrOutput
	ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(context.Context) DataEngineCrontabResumeSuspendStrategyPtrOutput
}

type dataEngineCrontabResumeSuspendStrategyPtrType DataEngineCrontabResumeSuspendStrategyArgs

func DataEngineCrontabResumeSuspendStrategyPtr(v *DataEngineCrontabResumeSuspendStrategyArgs) DataEngineCrontabResumeSuspendStrategyPtrInput {
	return (*dataEngineCrontabResumeSuspendStrategyPtrType)(v)
}

func (*dataEngineCrontabResumeSuspendStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (i *dataEngineCrontabResumeSuspendStrategyPtrType) ToDataEngineCrontabResumeSuspendStrategyPtrOutput() DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return i.ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(context.Background())
}

func (i *dataEngineCrontabResumeSuspendStrategyPtrType) ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(ctx context.Context) DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineCrontabResumeSuspendStrategyPtrOutput)
}

type DataEngineCrontabResumeSuspendStrategyOutput struct{ *pulumi.OutputState }

func (DataEngineCrontabResumeSuspendStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (o DataEngineCrontabResumeSuspendStrategyOutput) ToDataEngineCrontabResumeSuspendStrategyOutput() DataEngineCrontabResumeSuspendStrategyOutput {
	return o
}

func (o DataEngineCrontabResumeSuspendStrategyOutput) ToDataEngineCrontabResumeSuspendStrategyOutputWithContext(ctx context.Context) DataEngineCrontabResumeSuspendStrategyOutput {
	return o
}

func (o DataEngineCrontabResumeSuspendStrategyOutput) ToDataEngineCrontabResumeSuspendStrategyPtrOutput() DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return o.ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(context.Background())
}

func (o DataEngineCrontabResumeSuspendStrategyOutput) ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(ctx context.Context) DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataEngineCrontabResumeSuspendStrategy) *DataEngineCrontabResumeSuspendStrategy {
		return &v
	}).(DataEngineCrontabResumeSuspendStrategyPtrOutput)
}

// Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
func (o DataEngineCrontabResumeSuspendStrategyOutput) ResumeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEngineCrontabResumeSuspendStrategy) *string { return v.ResumeTime }).(pulumi.StringPtrOutput)
}

// Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
func (o DataEngineCrontabResumeSuspendStrategyOutput) SuspendStrategy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataEngineCrontabResumeSuspendStrategy) *int { return v.SuspendStrategy }).(pulumi.IntPtrOutput)
}

// Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
func (o DataEngineCrontabResumeSuspendStrategyOutput) SuspendTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEngineCrontabResumeSuspendStrategy) *string { return v.SuspendTime }).(pulumi.StringPtrOutput)
}

type DataEngineCrontabResumeSuspendStrategyPtrOutput struct{ *pulumi.OutputState }

func (DataEngineCrontabResumeSuspendStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (o DataEngineCrontabResumeSuspendStrategyPtrOutput) ToDataEngineCrontabResumeSuspendStrategyPtrOutput() DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return o
}

func (o DataEngineCrontabResumeSuspendStrategyPtrOutput) ToDataEngineCrontabResumeSuspendStrategyPtrOutputWithContext(ctx context.Context) DataEngineCrontabResumeSuspendStrategyPtrOutput {
	return o
}

func (o DataEngineCrontabResumeSuspendStrategyPtrOutput) Elem() DataEngineCrontabResumeSuspendStrategyOutput {
	return o.ApplyT(func(v *DataEngineCrontabResumeSuspendStrategy) DataEngineCrontabResumeSuspendStrategy {
		if v != nil {
			return *v
		}
		var ret DataEngineCrontabResumeSuspendStrategy
		return ret
	}).(DataEngineCrontabResumeSuspendStrategyOutput)
}

// Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
func (o DataEngineCrontabResumeSuspendStrategyPtrOutput) ResumeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEngineCrontabResumeSuspendStrategy) *string {
		if v == nil {
			return nil
		}
		return v.ResumeTime
	}).(pulumi.StringPtrOutput)
}

// Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
func (o DataEngineCrontabResumeSuspendStrategyPtrOutput) SuspendStrategy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataEngineCrontabResumeSuspendStrategy) *int {
		if v == nil {
			return nil
		}
		return v.SuspendStrategy
	}).(pulumi.IntPtrOutput)
}

// Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
func (o DataEngineCrontabResumeSuspendStrategyPtrOutput) SuspendTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEngineCrontabResumeSuspendStrategy) *string {
		if v == nil {
			return nil
		}
		return v.SuspendTime
	}).(pulumi.StringPtrOutput)
}

type DataEngineDataEngineConfigPair struct {
	// Configuration items.
	ConfigItem string `pulumi:"configItem"`
	// Configuration value.
	ConfigValue string `pulumi:"configValue"`
}

// DataEngineDataEngineConfigPairInput is an input type that accepts DataEngineDataEngineConfigPairArgs and DataEngineDataEngineConfigPairOutput values.
// You can construct a concrete instance of `DataEngineDataEngineConfigPairInput` via:
//
//	DataEngineDataEngineConfigPairArgs{...}
type DataEngineDataEngineConfigPairInput interface {
	pulumi.Input

	ToDataEngineDataEngineConfigPairOutput() DataEngineDataEngineConfigPairOutput
	ToDataEngineDataEngineConfigPairOutputWithContext(context.Context) DataEngineDataEngineConfigPairOutput
}

type DataEngineDataEngineConfigPairArgs struct {
	// Configuration items.
	ConfigItem pulumi.StringInput `pulumi:"configItem"`
	// Configuration value.
	ConfigValue pulumi.StringInput `pulumi:"configValue"`
}

func (DataEngineDataEngineConfigPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEngineDataEngineConfigPair)(nil)).Elem()
}

func (i DataEngineDataEngineConfigPairArgs) ToDataEngineDataEngineConfigPairOutput() DataEngineDataEngineConfigPairOutput {
	return i.ToDataEngineDataEngineConfigPairOutputWithContext(context.Background())
}

func (i DataEngineDataEngineConfigPairArgs) ToDataEngineDataEngineConfigPairOutputWithContext(ctx context.Context) DataEngineDataEngineConfigPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineDataEngineConfigPairOutput)
}

// DataEngineDataEngineConfigPairArrayInput is an input type that accepts DataEngineDataEngineConfigPairArray and DataEngineDataEngineConfigPairArrayOutput values.
// You can construct a concrete instance of `DataEngineDataEngineConfigPairArrayInput` via:
//
//	DataEngineDataEngineConfigPairArray{ DataEngineDataEngineConfigPairArgs{...} }
type DataEngineDataEngineConfigPairArrayInput interface {
	pulumi.Input

	ToDataEngineDataEngineConfigPairArrayOutput() DataEngineDataEngineConfigPairArrayOutput
	ToDataEngineDataEngineConfigPairArrayOutputWithContext(context.Context) DataEngineDataEngineConfigPairArrayOutput
}

type DataEngineDataEngineConfigPairArray []DataEngineDataEngineConfigPairInput

func (DataEngineDataEngineConfigPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataEngineDataEngineConfigPair)(nil)).Elem()
}

func (i DataEngineDataEngineConfigPairArray) ToDataEngineDataEngineConfigPairArrayOutput() DataEngineDataEngineConfigPairArrayOutput {
	return i.ToDataEngineDataEngineConfigPairArrayOutputWithContext(context.Background())
}

func (i DataEngineDataEngineConfigPairArray) ToDataEngineDataEngineConfigPairArrayOutputWithContext(ctx context.Context) DataEngineDataEngineConfigPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineDataEngineConfigPairArrayOutput)
}

type DataEngineDataEngineConfigPairOutput struct{ *pulumi.OutputState }

func (DataEngineDataEngineConfigPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEngineDataEngineConfigPair)(nil)).Elem()
}

func (o DataEngineDataEngineConfigPairOutput) ToDataEngineDataEngineConfigPairOutput() DataEngineDataEngineConfigPairOutput {
	return o
}

func (o DataEngineDataEngineConfigPairOutput) ToDataEngineDataEngineConfigPairOutputWithContext(ctx context.Context) DataEngineDataEngineConfigPairOutput {
	return o
}

// Configuration items.
func (o DataEngineDataEngineConfigPairOutput) ConfigItem() pulumi.StringOutput {
	return o.ApplyT(func(v DataEngineDataEngineConfigPair) string { return v.ConfigItem }).(pulumi.StringOutput)
}

// Configuration value.
func (o DataEngineDataEngineConfigPairOutput) ConfigValue() pulumi.StringOutput {
	return o.ApplyT(func(v DataEngineDataEngineConfigPair) string { return v.ConfigValue }).(pulumi.StringOutput)
}

type DataEngineDataEngineConfigPairArrayOutput struct{ *pulumi.OutputState }

func (DataEngineDataEngineConfigPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataEngineDataEngineConfigPair)(nil)).Elem()
}

func (o DataEngineDataEngineConfigPairArrayOutput) ToDataEngineDataEngineConfigPairArrayOutput() DataEngineDataEngineConfigPairArrayOutput {
	return o
}

func (o DataEngineDataEngineConfigPairArrayOutput) ToDataEngineDataEngineConfigPairArrayOutputWithContext(ctx context.Context) DataEngineDataEngineConfigPairArrayOutput {
	return o
}

func (o DataEngineDataEngineConfigPairArrayOutput) Index(i pulumi.IntInput) DataEngineDataEngineConfigPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataEngineDataEngineConfigPair {
		return vs[0].([]DataEngineDataEngineConfigPair)[vs[1].(int)]
	}).(DataEngineDataEngineConfigPairOutput)
}

type DataEngineSessionResourceTemplate struct {
	// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	DriverSize *string `pulumi:"driverSize"`
	// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
	ExecutorMaxNumbers *int `pulumi:"executorMaxNumbers"`
	// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
	ExecutorNums *int `pulumi:"executorNums"`
	// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	ExecutorSize *string `pulumi:"executorSize"`
}

// DataEngineSessionResourceTemplateInput is an input type that accepts DataEngineSessionResourceTemplateArgs and DataEngineSessionResourceTemplateOutput values.
// You can construct a concrete instance of `DataEngineSessionResourceTemplateInput` via:
//
//	DataEngineSessionResourceTemplateArgs{...}
type DataEngineSessionResourceTemplateInput interface {
	pulumi.Input

	ToDataEngineSessionResourceTemplateOutput() DataEngineSessionResourceTemplateOutput
	ToDataEngineSessionResourceTemplateOutputWithContext(context.Context) DataEngineSessionResourceTemplateOutput
}

type DataEngineSessionResourceTemplateArgs struct {
	// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	DriverSize pulumi.StringPtrInput `pulumi:"driverSize"`
	// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
	ExecutorMaxNumbers pulumi.IntPtrInput `pulumi:"executorMaxNumbers"`
	// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
	ExecutorNums pulumi.IntPtrInput `pulumi:"executorNums"`
	// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	ExecutorSize pulumi.StringPtrInput `pulumi:"executorSize"`
}

func (DataEngineSessionResourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEngineSessionResourceTemplate)(nil)).Elem()
}

func (i DataEngineSessionResourceTemplateArgs) ToDataEngineSessionResourceTemplateOutput() DataEngineSessionResourceTemplateOutput {
	return i.ToDataEngineSessionResourceTemplateOutputWithContext(context.Background())
}

func (i DataEngineSessionResourceTemplateArgs) ToDataEngineSessionResourceTemplateOutputWithContext(ctx context.Context) DataEngineSessionResourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineSessionResourceTemplateOutput)
}

func (i DataEngineSessionResourceTemplateArgs) ToDataEngineSessionResourceTemplatePtrOutput() DataEngineSessionResourceTemplatePtrOutput {
	return i.ToDataEngineSessionResourceTemplatePtrOutputWithContext(context.Background())
}

func (i DataEngineSessionResourceTemplateArgs) ToDataEngineSessionResourceTemplatePtrOutputWithContext(ctx context.Context) DataEngineSessionResourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineSessionResourceTemplateOutput).ToDataEngineSessionResourceTemplatePtrOutputWithContext(ctx)
}

// DataEngineSessionResourceTemplatePtrInput is an input type that accepts DataEngineSessionResourceTemplateArgs, DataEngineSessionResourceTemplatePtr and DataEngineSessionResourceTemplatePtrOutput values.
// You can construct a concrete instance of `DataEngineSessionResourceTemplatePtrInput` via:
//
//	        DataEngineSessionResourceTemplateArgs{...}
//
//	or:
//
//	        nil
type DataEngineSessionResourceTemplatePtrInput interface {
	pulumi.Input

	ToDataEngineSessionResourceTemplatePtrOutput() DataEngineSessionResourceTemplatePtrOutput
	ToDataEngineSessionResourceTemplatePtrOutputWithContext(context.Context) DataEngineSessionResourceTemplatePtrOutput
}

type dataEngineSessionResourceTemplatePtrType DataEngineSessionResourceTemplateArgs

func DataEngineSessionResourceTemplatePtr(v *DataEngineSessionResourceTemplateArgs) DataEngineSessionResourceTemplatePtrInput {
	return (*dataEngineSessionResourceTemplatePtrType)(v)
}

func (*dataEngineSessionResourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEngineSessionResourceTemplate)(nil)).Elem()
}

func (i *dataEngineSessionResourceTemplatePtrType) ToDataEngineSessionResourceTemplatePtrOutput() DataEngineSessionResourceTemplatePtrOutput {
	return i.ToDataEngineSessionResourceTemplatePtrOutputWithContext(context.Background())
}

func (i *dataEngineSessionResourceTemplatePtrType) ToDataEngineSessionResourceTemplatePtrOutputWithContext(ctx context.Context) DataEngineSessionResourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataEngineSessionResourceTemplatePtrOutput)
}

type DataEngineSessionResourceTemplateOutput struct{ *pulumi.OutputState }

func (DataEngineSessionResourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataEngineSessionResourceTemplate)(nil)).Elem()
}

func (o DataEngineSessionResourceTemplateOutput) ToDataEngineSessionResourceTemplateOutput() DataEngineSessionResourceTemplateOutput {
	return o
}

func (o DataEngineSessionResourceTemplateOutput) ToDataEngineSessionResourceTemplateOutputWithContext(ctx context.Context) DataEngineSessionResourceTemplateOutput {
	return o
}

func (o DataEngineSessionResourceTemplateOutput) ToDataEngineSessionResourceTemplatePtrOutput() DataEngineSessionResourceTemplatePtrOutput {
	return o.ToDataEngineSessionResourceTemplatePtrOutputWithContext(context.Background())
}

func (o DataEngineSessionResourceTemplateOutput) ToDataEngineSessionResourceTemplatePtrOutputWithContext(ctx context.Context) DataEngineSessionResourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataEngineSessionResourceTemplate) *DataEngineSessionResourceTemplate {
		return &v
	}).(DataEngineSessionResourceTemplatePtrOutput)
}

// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o DataEngineSessionResourceTemplateOutput) DriverSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEngineSessionResourceTemplate) *string { return v.DriverSize }).(pulumi.StringPtrOutput)
}

// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
func (o DataEngineSessionResourceTemplateOutput) ExecutorMaxNumbers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataEngineSessionResourceTemplate) *int { return v.ExecutorMaxNumbers }).(pulumi.IntPtrOutput)
}

// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
func (o DataEngineSessionResourceTemplateOutput) ExecutorNums() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataEngineSessionResourceTemplate) *int { return v.ExecutorNums }).(pulumi.IntPtrOutput)
}

// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o DataEngineSessionResourceTemplateOutput) ExecutorSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataEngineSessionResourceTemplate) *string { return v.ExecutorSize }).(pulumi.StringPtrOutput)
}

type DataEngineSessionResourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (DataEngineSessionResourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataEngineSessionResourceTemplate)(nil)).Elem()
}

func (o DataEngineSessionResourceTemplatePtrOutput) ToDataEngineSessionResourceTemplatePtrOutput() DataEngineSessionResourceTemplatePtrOutput {
	return o
}

func (o DataEngineSessionResourceTemplatePtrOutput) ToDataEngineSessionResourceTemplatePtrOutputWithContext(ctx context.Context) DataEngineSessionResourceTemplatePtrOutput {
	return o
}

func (o DataEngineSessionResourceTemplatePtrOutput) Elem() DataEngineSessionResourceTemplateOutput {
	return o.ApplyT(func(v *DataEngineSessionResourceTemplate) DataEngineSessionResourceTemplate {
		if v != nil {
			return *v
		}
		var ret DataEngineSessionResourceTemplate
		return ret
	}).(DataEngineSessionResourceTemplateOutput)
}

// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o DataEngineSessionResourceTemplatePtrOutput) DriverSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEngineSessionResourceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.DriverSize
	}).(pulumi.StringPtrOutput)
}

// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
func (o DataEngineSessionResourceTemplatePtrOutput) ExecutorMaxNumbers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataEngineSessionResourceTemplate) *int {
		if v == nil {
			return nil
		}
		return v.ExecutorMaxNumbers
	}).(pulumi.IntPtrOutput)
}

// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
func (o DataEngineSessionResourceTemplatePtrOutput) ExecutorNums() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataEngineSessionResourceTemplate) *int {
		if v == nil {
			return nil
		}
		return v.ExecutorNums
	}).(pulumi.IntPtrOutput)
}

// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o DataEngineSessionResourceTemplatePtrOutput) ExecutorSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataEngineSessionResourceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ExecutorSize
	}).(pulumi.StringPtrOutput)
}

type DetachUserPolicyOperationPolicySet struct {
	Catalog    string  `pulumi:"catalog"`
	Column     *string `pulumi:"column"`
	CreateTime *string `pulumi:"createTime"`
	DataEngine *string `pulumi:"dataEngine"`
	Database   string  `pulumi:"database"`
	Function   *string `pulumi:"function"`
	Id         *int    `pulumi:"id"`
	Mode       *string `pulumi:"mode"`
	Operation  string  `pulumi:"operation"`
	Operator   *string `pulumi:"operator"`
	PolicyType *string `pulumi:"policyType"`
	ReAuth     *bool   `pulumi:"reAuth"`
	Source     *string `pulumi:"source"`
	SourceId   *int    `pulumi:"sourceId"`
	SourceName *string `pulumi:"sourceName"`
	Table      string  `pulumi:"table"`
	View       *string `pulumi:"view"`
}

// DetachUserPolicyOperationPolicySetInput is an input type that accepts DetachUserPolicyOperationPolicySetArgs and DetachUserPolicyOperationPolicySetOutput values.
// You can construct a concrete instance of `DetachUserPolicyOperationPolicySetInput` via:
//
//	DetachUserPolicyOperationPolicySetArgs{...}
type DetachUserPolicyOperationPolicySetInput interface {
	pulumi.Input

	ToDetachUserPolicyOperationPolicySetOutput() DetachUserPolicyOperationPolicySetOutput
	ToDetachUserPolicyOperationPolicySetOutputWithContext(context.Context) DetachUserPolicyOperationPolicySetOutput
}

type DetachUserPolicyOperationPolicySetArgs struct {
	Catalog    pulumi.StringInput    `pulumi:"catalog"`
	Column     pulumi.StringPtrInput `pulumi:"column"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	DataEngine pulumi.StringPtrInput `pulumi:"dataEngine"`
	Database   pulumi.StringInput    `pulumi:"database"`
	Function   pulumi.StringPtrInput `pulumi:"function"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Mode       pulumi.StringPtrInput `pulumi:"mode"`
	Operation  pulumi.StringInput    `pulumi:"operation"`
	Operator   pulumi.StringPtrInput `pulumi:"operator"`
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	ReAuth     pulumi.BoolPtrInput   `pulumi:"reAuth"`
	Source     pulumi.StringPtrInput `pulumi:"source"`
	SourceId   pulumi.IntPtrInput    `pulumi:"sourceId"`
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	Table      pulumi.StringInput    `pulumi:"table"`
	View       pulumi.StringPtrInput `pulumi:"view"`
}

func (DetachUserPolicyOperationPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (i DetachUserPolicyOperationPolicySetArgs) ToDetachUserPolicyOperationPolicySetOutput() DetachUserPolicyOperationPolicySetOutput {
	return i.ToDetachUserPolicyOperationPolicySetOutputWithContext(context.Background())
}

func (i DetachUserPolicyOperationPolicySetArgs) ToDetachUserPolicyOperationPolicySetOutputWithContext(ctx context.Context) DetachUserPolicyOperationPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetachUserPolicyOperationPolicySetOutput)
}

// DetachUserPolicyOperationPolicySetArrayInput is an input type that accepts DetachUserPolicyOperationPolicySetArray and DetachUserPolicyOperationPolicySetArrayOutput values.
// You can construct a concrete instance of `DetachUserPolicyOperationPolicySetArrayInput` via:
//
//	DetachUserPolicyOperationPolicySetArray{ DetachUserPolicyOperationPolicySetArgs{...} }
type DetachUserPolicyOperationPolicySetArrayInput interface {
	pulumi.Input

	ToDetachUserPolicyOperationPolicySetArrayOutput() DetachUserPolicyOperationPolicySetArrayOutput
	ToDetachUserPolicyOperationPolicySetArrayOutputWithContext(context.Context) DetachUserPolicyOperationPolicySetArrayOutput
}

type DetachUserPolicyOperationPolicySetArray []DetachUserPolicyOperationPolicySetInput

func (DetachUserPolicyOperationPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (i DetachUserPolicyOperationPolicySetArray) ToDetachUserPolicyOperationPolicySetArrayOutput() DetachUserPolicyOperationPolicySetArrayOutput {
	return i.ToDetachUserPolicyOperationPolicySetArrayOutputWithContext(context.Background())
}

func (i DetachUserPolicyOperationPolicySetArray) ToDetachUserPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) DetachUserPolicyOperationPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetachUserPolicyOperationPolicySetArrayOutput)
}

type DetachUserPolicyOperationPolicySetOutput struct{ *pulumi.OutputState }

func (DetachUserPolicyOperationPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (o DetachUserPolicyOperationPolicySetOutput) ToDetachUserPolicyOperationPolicySetOutput() DetachUserPolicyOperationPolicySetOutput {
	return o
}

func (o DetachUserPolicyOperationPolicySetOutput) ToDetachUserPolicyOperationPolicySetOutputWithContext(ctx context.Context) DetachUserPolicyOperationPolicySetOutput {
	return o
}

func (o DetachUserPolicyOperationPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.Column }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) DataEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.DataEngine }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.Function }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) ReAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *bool { return v.ReAuth }).(pulumi.BoolPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) SourceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *int { return v.SourceId }).(pulumi.IntPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

func (o DetachUserPolicyOperationPolicySetOutput) View() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachUserPolicyOperationPolicySet) *string { return v.View }).(pulumi.StringPtrOutput)
}

type DetachUserPolicyOperationPolicySetArrayOutput struct{ *pulumi.OutputState }

func (DetachUserPolicyOperationPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetachUserPolicyOperationPolicySet)(nil)).Elem()
}

func (o DetachUserPolicyOperationPolicySetArrayOutput) ToDetachUserPolicyOperationPolicySetArrayOutput() DetachUserPolicyOperationPolicySetArrayOutput {
	return o
}

func (o DetachUserPolicyOperationPolicySetArrayOutput) ToDetachUserPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) DetachUserPolicyOperationPolicySetArrayOutput {
	return o
}

func (o DetachUserPolicyOperationPolicySetArrayOutput) Index(i pulumi.IntInput) DetachUserPolicyOperationPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetachUserPolicyOperationPolicySet {
		return vs[0].([]DetachUserPolicyOperationPolicySet)[vs[1].(int)]
	}).(DetachUserPolicyOperationPolicySetOutput)
}

type DetachWorkGroupPolicyOperationPolicySet struct {
	Catalog    string  `pulumi:"catalog"`
	Column     *string `pulumi:"column"`
	CreateTime *string `pulumi:"createTime"`
	DataEngine *string `pulumi:"dataEngine"`
	Database   string  `pulumi:"database"`
	Function   *string `pulumi:"function"`
	Id         *int    `pulumi:"id"`
	Mode       *string `pulumi:"mode"`
	Operation  string  `pulumi:"operation"`
	Operator   *string `pulumi:"operator"`
	PolicyType *string `pulumi:"policyType"`
	ReAuth     *bool   `pulumi:"reAuth"`
	Source     *string `pulumi:"source"`
	SourceId   *int    `pulumi:"sourceId"`
	SourceName *string `pulumi:"sourceName"`
	Table      string  `pulumi:"table"`
	View       *string `pulumi:"view"`
}

// DetachWorkGroupPolicyOperationPolicySetInput is an input type that accepts DetachWorkGroupPolicyOperationPolicySetArgs and DetachWorkGroupPolicyOperationPolicySetOutput values.
// You can construct a concrete instance of `DetachWorkGroupPolicyOperationPolicySetInput` via:
//
//	DetachWorkGroupPolicyOperationPolicySetArgs{...}
type DetachWorkGroupPolicyOperationPolicySetInput interface {
	pulumi.Input

	ToDetachWorkGroupPolicyOperationPolicySetOutput() DetachWorkGroupPolicyOperationPolicySetOutput
	ToDetachWorkGroupPolicyOperationPolicySetOutputWithContext(context.Context) DetachWorkGroupPolicyOperationPolicySetOutput
}

type DetachWorkGroupPolicyOperationPolicySetArgs struct {
	Catalog    pulumi.StringInput    `pulumi:"catalog"`
	Column     pulumi.StringPtrInput `pulumi:"column"`
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	DataEngine pulumi.StringPtrInput `pulumi:"dataEngine"`
	Database   pulumi.StringInput    `pulumi:"database"`
	Function   pulumi.StringPtrInput `pulumi:"function"`
	Id         pulumi.IntPtrInput    `pulumi:"id"`
	Mode       pulumi.StringPtrInput `pulumi:"mode"`
	Operation  pulumi.StringInput    `pulumi:"operation"`
	Operator   pulumi.StringPtrInput `pulumi:"operator"`
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	ReAuth     pulumi.BoolPtrInput   `pulumi:"reAuth"`
	Source     pulumi.StringPtrInput `pulumi:"source"`
	SourceId   pulumi.IntPtrInput    `pulumi:"sourceId"`
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	Table      pulumi.StringInput    `pulumi:"table"`
	View       pulumi.StringPtrInput `pulumi:"view"`
}

func (DetachWorkGroupPolicyOperationPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DetachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (i DetachWorkGroupPolicyOperationPolicySetArgs) ToDetachWorkGroupPolicyOperationPolicySetOutput() DetachWorkGroupPolicyOperationPolicySetOutput {
	return i.ToDetachWorkGroupPolicyOperationPolicySetOutputWithContext(context.Background())
}

func (i DetachWorkGroupPolicyOperationPolicySetArgs) ToDetachWorkGroupPolicyOperationPolicySetOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetachWorkGroupPolicyOperationPolicySetOutput)
}

// DetachWorkGroupPolicyOperationPolicySetArrayInput is an input type that accepts DetachWorkGroupPolicyOperationPolicySetArray and DetachWorkGroupPolicyOperationPolicySetArrayOutput values.
// You can construct a concrete instance of `DetachWorkGroupPolicyOperationPolicySetArrayInput` via:
//
//	DetachWorkGroupPolicyOperationPolicySetArray{ DetachWorkGroupPolicyOperationPolicySetArgs{...} }
type DetachWorkGroupPolicyOperationPolicySetArrayInput interface {
	pulumi.Input

	ToDetachWorkGroupPolicyOperationPolicySetArrayOutput() DetachWorkGroupPolicyOperationPolicySetArrayOutput
	ToDetachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(context.Context) DetachWorkGroupPolicyOperationPolicySetArrayOutput
}

type DetachWorkGroupPolicyOperationPolicySetArray []DetachWorkGroupPolicyOperationPolicySetInput

func (DetachWorkGroupPolicyOperationPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (i DetachWorkGroupPolicyOperationPolicySetArray) ToDetachWorkGroupPolicyOperationPolicySetArrayOutput() DetachWorkGroupPolicyOperationPolicySetArrayOutput {
	return i.ToDetachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(context.Background())
}

func (i DetachWorkGroupPolicyOperationPolicySetArray) ToDetachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetachWorkGroupPolicyOperationPolicySetArrayOutput)
}

type DetachWorkGroupPolicyOperationPolicySetOutput struct{ *pulumi.OutputState }

func (DetachWorkGroupPolicyOperationPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DetachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) ToDetachWorkGroupPolicyOperationPolicySetOutput() DetachWorkGroupPolicyOperationPolicySetOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) ToDetachWorkGroupPolicyOperationPolicySetOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationPolicySetOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.Column }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) DataEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.DataEngine }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.Function }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) ReAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *bool { return v.ReAuth }).(pulumi.BoolPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) SourceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *int { return v.SourceId }).(pulumi.IntPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

func (o DetachWorkGroupPolicyOperationPolicySetOutput) View() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DetachWorkGroupPolicyOperationPolicySet) *string { return v.View }).(pulumi.StringPtrOutput)
}

type DetachWorkGroupPolicyOperationPolicySetArrayOutput struct{ *pulumi.OutputState }

func (DetachWorkGroupPolicyOperationPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DetachWorkGroupPolicyOperationPolicySet)(nil)).Elem()
}

func (o DetachWorkGroupPolicyOperationPolicySetArrayOutput) ToDetachWorkGroupPolicyOperationPolicySetArrayOutput() DetachWorkGroupPolicyOperationPolicySetArrayOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationPolicySetArrayOutput) ToDetachWorkGroupPolicyOperationPolicySetArrayOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationPolicySetArrayOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationPolicySetArrayOutput) Index(i pulumi.IntInput) DetachWorkGroupPolicyOperationPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DetachWorkGroupPolicyOperationPolicySet {
		return vs[0].([]DetachWorkGroupPolicyOperationPolicySet)[vs[1].(int)]
	}).(DetachWorkGroupPolicyOperationPolicySetOutput)
}

type UpdateRowFilterOperationPolicy struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog string `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column *string `pulumi:"column"`
	// The time when the permission was created. Leave the input parameter blank.
	CreateTime *string `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine *string `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database string `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function *string `pulumi:"function"`
	// Policy id.
	Id *int `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode *string `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation string `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator *string `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType *string `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth *bool `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source *string `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId *int `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName *string `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table string `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View *string `pulumi:"view"`
}

// UpdateRowFilterOperationPolicyInput is an input type that accepts UpdateRowFilterOperationPolicyArgs and UpdateRowFilterOperationPolicyOutput values.
// You can construct a concrete instance of `UpdateRowFilterOperationPolicyInput` via:
//
//	UpdateRowFilterOperationPolicyArgs{...}
type UpdateRowFilterOperationPolicyInput interface {
	pulumi.Input

	ToUpdateRowFilterOperationPolicyOutput() UpdateRowFilterOperationPolicyOutput
	ToUpdateRowFilterOperationPolicyOutputWithContext(context.Context) UpdateRowFilterOperationPolicyOutput
}

type UpdateRowFilterOperationPolicyArgs struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column pulumi.StringPtrInput `pulumi:"column"`
	// The time when the permission was created. Leave the input parameter blank.
	CreateTime pulumi.StringPtrInput `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine pulumi.StringPtrInput `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database pulumi.StringInput `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function pulumi.StringPtrInput `pulumi:"function"`
	// Policy id.
	Id pulumi.IntPtrInput `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth pulumi.BoolPtrInput `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId pulumi.IntPtrInput `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table pulumi.StringInput `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View pulumi.StringPtrInput `pulumi:"view"`
}

func (UpdateRowFilterOperationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateRowFilterOperationPolicy)(nil)).Elem()
}

func (i UpdateRowFilterOperationPolicyArgs) ToUpdateRowFilterOperationPolicyOutput() UpdateRowFilterOperationPolicyOutput {
	return i.ToUpdateRowFilterOperationPolicyOutputWithContext(context.Background())
}

func (i UpdateRowFilterOperationPolicyArgs) ToUpdateRowFilterOperationPolicyOutputWithContext(ctx context.Context) UpdateRowFilterOperationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateRowFilterOperationPolicyOutput)
}

func (i UpdateRowFilterOperationPolicyArgs) ToUpdateRowFilterOperationPolicyPtrOutput() UpdateRowFilterOperationPolicyPtrOutput {
	return i.ToUpdateRowFilterOperationPolicyPtrOutputWithContext(context.Background())
}

func (i UpdateRowFilterOperationPolicyArgs) ToUpdateRowFilterOperationPolicyPtrOutputWithContext(ctx context.Context) UpdateRowFilterOperationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateRowFilterOperationPolicyOutput).ToUpdateRowFilterOperationPolicyPtrOutputWithContext(ctx)
}

// UpdateRowFilterOperationPolicyPtrInput is an input type that accepts UpdateRowFilterOperationPolicyArgs, UpdateRowFilterOperationPolicyPtr and UpdateRowFilterOperationPolicyPtrOutput values.
// You can construct a concrete instance of `UpdateRowFilterOperationPolicyPtrInput` via:
//
//	        UpdateRowFilterOperationPolicyArgs{...}
//
//	or:
//
//	        nil
type UpdateRowFilterOperationPolicyPtrInput interface {
	pulumi.Input

	ToUpdateRowFilterOperationPolicyPtrOutput() UpdateRowFilterOperationPolicyPtrOutput
	ToUpdateRowFilterOperationPolicyPtrOutputWithContext(context.Context) UpdateRowFilterOperationPolicyPtrOutput
}

type updateRowFilterOperationPolicyPtrType UpdateRowFilterOperationPolicyArgs

func UpdateRowFilterOperationPolicyPtr(v *UpdateRowFilterOperationPolicyArgs) UpdateRowFilterOperationPolicyPtrInput {
	return (*updateRowFilterOperationPolicyPtrType)(v)
}

func (*updateRowFilterOperationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateRowFilterOperationPolicy)(nil)).Elem()
}

func (i *updateRowFilterOperationPolicyPtrType) ToUpdateRowFilterOperationPolicyPtrOutput() UpdateRowFilterOperationPolicyPtrOutput {
	return i.ToUpdateRowFilterOperationPolicyPtrOutputWithContext(context.Background())
}

func (i *updateRowFilterOperationPolicyPtrType) ToUpdateRowFilterOperationPolicyPtrOutputWithContext(ctx context.Context) UpdateRowFilterOperationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateRowFilterOperationPolicyPtrOutput)
}

type UpdateRowFilterOperationPolicyOutput struct{ *pulumi.OutputState }

func (UpdateRowFilterOperationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateRowFilterOperationPolicy)(nil)).Elem()
}

func (o UpdateRowFilterOperationPolicyOutput) ToUpdateRowFilterOperationPolicyOutput() UpdateRowFilterOperationPolicyOutput {
	return o
}

func (o UpdateRowFilterOperationPolicyOutput) ToUpdateRowFilterOperationPolicyOutputWithContext(ctx context.Context) UpdateRowFilterOperationPolicyOutput {
	return o
}

func (o UpdateRowFilterOperationPolicyOutput) ToUpdateRowFilterOperationPolicyPtrOutput() UpdateRowFilterOperationPolicyPtrOutput {
	return o.ToUpdateRowFilterOperationPolicyPtrOutputWithContext(context.Background())
}

func (o UpdateRowFilterOperationPolicyOutput) ToUpdateRowFilterOperationPolicyPtrOutputWithContext(ctx context.Context) UpdateRowFilterOperationPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateRowFilterOperationPolicy) *UpdateRowFilterOperationPolicy {
		return &v
	}).(UpdateRowFilterOperationPolicyPtrOutput)
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o UpdateRowFilterOperationPolicyOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) string { return v.Catalog }).(pulumi.StringOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o UpdateRowFilterOperationPolicyOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.Column }).(pulumi.StringPtrOutput)
}

// The time when the permission was created. Leave the input parameter blank.
func (o UpdateRowFilterOperationPolicyOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o UpdateRowFilterOperationPolicyOutput) DataEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.DataEngine }).(pulumi.StringPtrOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) string { return v.Database }).(pulumi.StringOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.Function }).(pulumi.StringPtrOutput)
}

// Policy id.
func (o UpdateRowFilterOperationPolicyOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o UpdateRowFilterOperationPolicyOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o UpdateRowFilterOperationPolicyOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) string { return v.Operation }).(pulumi.StringOutput)
}

// Operator, do not fill in the input parameters.
func (o UpdateRowFilterOperationPolicyOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o UpdateRowFilterOperationPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o UpdateRowFilterOperationPolicyOutput) ReAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *bool { return v.ReAuth }).(pulumi.BoolPtrOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o UpdateRowFilterOperationPolicyOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o UpdateRowFilterOperationPolicyOutput) SourceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *int { return v.SourceId }).(pulumi.IntPtrOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o UpdateRowFilterOperationPolicyOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) string { return v.Table }).(pulumi.StringOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyOutput) View() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpdateRowFilterOperationPolicy) *string { return v.View }).(pulumi.StringPtrOutput)
}

type UpdateRowFilterOperationPolicyPtrOutput struct{ *pulumi.OutputState }

func (UpdateRowFilterOperationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateRowFilterOperationPolicy)(nil)).Elem()
}

func (o UpdateRowFilterOperationPolicyPtrOutput) ToUpdateRowFilterOperationPolicyPtrOutput() UpdateRowFilterOperationPolicyPtrOutput {
	return o
}

func (o UpdateRowFilterOperationPolicyPtrOutput) ToUpdateRowFilterOperationPolicyPtrOutputWithContext(ctx context.Context) UpdateRowFilterOperationPolicyPtrOutput {
	return o
}

func (o UpdateRowFilterOperationPolicyPtrOutput) Elem() UpdateRowFilterOperationPolicyOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) UpdateRowFilterOperationPolicy {
		if v != nil {
			return *v
		}
		var ret UpdateRowFilterOperationPolicy
		return ret
	}).(UpdateRowFilterOperationPolicyOutput)
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o UpdateRowFilterOperationPolicyPtrOutput) Catalog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Catalog
	}).(pulumi.StringPtrOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o UpdateRowFilterOperationPolicyPtrOutput) Column() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Column
	}).(pulumi.StringPtrOutput)
}

// The time when the permission was created. Leave the input parameter blank.
func (o UpdateRowFilterOperationPolicyPtrOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.CreateTime
	}).(pulumi.StringPtrOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o UpdateRowFilterOperationPolicyPtrOutput) DataEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.DataEngine
	}).(pulumi.StringPtrOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Function
	}).(pulumi.StringPtrOutput)
}

// Policy id.
func (o UpdateRowFilterOperationPolicyPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o UpdateRowFilterOperationPolicyPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o UpdateRowFilterOperationPolicyPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Operation
	}).(pulumi.StringPtrOutput)
}

// Operator, do not fill in the input parameters.
func (o UpdateRowFilterOperationPolicyPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o UpdateRowFilterOperationPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o UpdateRowFilterOperationPolicyPtrOutput) ReAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.ReAuth
	}).(pulumi.BoolPtrOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o UpdateRowFilterOperationPolicyPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Source
	}).(pulumi.StringPtrOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o UpdateRowFilterOperationPolicyPtrOutput) SourceId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *int {
		if v == nil {
			return nil
		}
		return v.SourceId
	}).(pulumi.IntPtrOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o UpdateRowFilterOperationPolicyPtrOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.SourceName
	}).(pulumi.StringPtrOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o UpdateRowFilterOperationPolicyPtrOutput) View() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperationPolicy) *string {
		if v == nil {
			return nil
		}
		return v.View
	}).(pulumi.StringPtrOutput)
}

type UserDataEngineConfigDataEngineConfigPair struct {
	// Config key.
	ConfigItem string `pulumi:"configItem"`
	// Config value.
	ConfigValue string `pulumi:"configValue"`
}

// UserDataEngineConfigDataEngineConfigPairInput is an input type that accepts UserDataEngineConfigDataEngineConfigPairArgs and UserDataEngineConfigDataEngineConfigPairOutput values.
// You can construct a concrete instance of `UserDataEngineConfigDataEngineConfigPairInput` via:
//
//	UserDataEngineConfigDataEngineConfigPairArgs{...}
type UserDataEngineConfigDataEngineConfigPairInput interface {
	pulumi.Input

	ToUserDataEngineConfigDataEngineConfigPairOutput() UserDataEngineConfigDataEngineConfigPairOutput
	ToUserDataEngineConfigDataEngineConfigPairOutputWithContext(context.Context) UserDataEngineConfigDataEngineConfigPairOutput
}

type UserDataEngineConfigDataEngineConfigPairArgs struct {
	// Config key.
	ConfigItem pulumi.StringInput `pulumi:"configItem"`
	// Config value.
	ConfigValue pulumi.StringInput `pulumi:"configValue"`
}

func (UserDataEngineConfigDataEngineConfigPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDataEngineConfigDataEngineConfigPair)(nil)).Elem()
}

func (i UserDataEngineConfigDataEngineConfigPairArgs) ToUserDataEngineConfigDataEngineConfigPairOutput() UserDataEngineConfigDataEngineConfigPairOutput {
	return i.ToUserDataEngineConfigDataEngineConfigPairOutputWithContext(context.Background())
}

func (i UserDataEngineConfigDataEngineConfigPairArgs) ToUserDataEngineConfigDataEngineConfigPairOutputWithContext(ctx context.Context) UserDataEngineConfigDataEngineConfigPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDataEngineConfigDataEngineConfigPairOutput)
}

// UserDataEngineConfigDataEngineConfigPairArrayInput is an input type that accepts UserDataEngineConfigDataEngineConfigPairArray and UserDataEngineConfigDataEngineConfigPairArrayOutput values.
// You can construct a concrete instance of `UserDataEngineConfigDataEngineConfigPairArrayInput` via:
//
//	UserDataEngineConfigDataEngineConfigPairArray{ UserDataEngineConfigDataEngineConfigPairArgs{...} }
type UserDataEngineConfigDataEngineConfigPairArrayInput interface {
	pulumi.Input

	ToUserDataEngineConfigDataEngineConfigPairArrayOutput() UserDataEngineConfigDataEngineConfigPairArrayOutput
	ToUserDataEngineConfigDataEngineConfigPairArrayOutputWithContext(context.Context) UserDataEngineConfigDataEngineConfigPairArrayOutput
}

type UserDataEngineConfigDataEngineConfigPairArray []UserDataEngineConfigDataEngineConfigPairInput

func (UserDataEngineConfigDataEngineConfigPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDataEngineConfigDataEngineConfigPair)(nil)).Elem()
}

func (i UserDataEngineConfigDataEngineConfigPairArray) ToUserDataEngineConfigDataEngineConfigPairArrayOutput() UserDataEngineConfigDataEngineConfigPairArrayOutput {
	return i.ToUserDataEngineConfigDataEngineConfigPairArrayOutputWithContext(context.Background())
}

func (i UserDataEngineConfigDataEngineConfigPairArray) ToUserDataEngineConfigDataEngineConfigPairArrayOutputWithContext(ctx context.Context) UserDataEngineConfigDataEngineConfigPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDataEngineConfigDataEngineConfigPairArrayOutput)
}

type UserDataEngineConfigDataEngineConfigPairOutput struct{ *pulumi.OutputState }

func (UserDataEngineConfigDataEngineConfigPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDataEngineConfigDataEngineConfigPair)(nil)).Elem()
}

func (o UserDataEngineConfigDataEngineConfigPairOutput) ToUserDataEngineConfigDataEngineConfigPairOutput() UserDataEngineConfigDataEngineConfigPairOutput {
	return o
}

func (o UserDataEngineConfigDataEngineConfigPairOutput) ToUserDataEngineConfigDataEngineConfigPairOutputWithContext(ctx context.Context) UserDataEngineConfigDataEngineConfigPairOutput {
	return o
}

// Config key.
func (o UserDataEngineConfigDataEngineConfigPairOutput) ConfigItem() pulumi.StringOutput {
	return o.ApplyT(func(v UserDataEngineConfigDataEngineConfigPair) string { return v.ConfigItem }).(pulumi.StringOutput)
}

// Config value.
func (o UserDataEngineConfigDataEngineConfigPairOutput) ConfigValue() pulumi.StringOutput {
	return o.ApplyT(func(v UserDataEngineConfigDataEngineConfigPair) string { return v.ConfigValue }).(pulumi.StringOutput)
}

type UserDataEngineConfigDataEngineConfigPairArrayOutput struct{ *pulumi.OutputState }

func (UserDataEngineConfigDataEngineConfigPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserDataEngineConfigDataEngineConfigPair)(nil)).Elem()
}

func (o UserDataEngineConfigDataEngineConfigPairArrayOutput) ToUserDataEngineConfigDataEngineConfigPairArrayOutput() UserDataEngineConfigDataEngineConfigPairArrayOutput {
	return o
}

func (o UserDataEngineConfigDataEngineConfigPairArrayOutput) ToUserDataEngineConfigDataEngineConfigPairArrayOutputWithContext(ctx context.Context) UserDataEngineConfigDataEngineConfigPairArrayOutput {
	return o
}

func (o UserDataEngineConfigDataEngineConfigPairArrayOutput) Index(i pulumi.IntInput) UserDataEngineConfigDataEngineConfigPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserDataEngineConfigDataEngineConfigPair {
		return vs[0].([]UserDataEngineConfigDataEngineConfigPair)[vs[1].(int)]
	}).(UserDataEngineConfigDataEngineConfigPairOutput)
}

type UserDataEngineConfigSessionResourceTemplate struct {
	// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	DriverSize *string `pulumi:"driverSize"`
	// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
	ExecutorMaxNumbers *int `pulumi:"executorMaxNumbers"`
	// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
	ExecutorNums *int `pulumi:"executorNums"`
	// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	ExecutorSize *string `pulumi:"executorSize"`
}

// UserDataEngineConfigSessionResourceTemplateInput is an input type that accepts UserDataEngineConfigSessionResourceTemplateArgs and UserDataEngineConfigSessionResourceTemplateOutput values.
// You can construct a concrete instance of `UserDataEngineConfigSessionResourceTemplateInput` via:
//
//	UserDataEngineConfigSessionResourceTemplateArgs{...}
type UserDataEngineConfigSessionResourceTemplateInput interface {
	pulumi.Input

	ToUserDataEngineConfigSessionResourceTemplateOutput() UserDataEngineConfigSessionResourceTemplateOutput
	ToUserDataEngineConfigSessionResourceTemplateOutputWithContext(context.Context) UserDataEngineConfigSessionResourceTemplateOutput
}

type UserDataEngineConfigSessionResourceTemplateArgs struct {
	// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	DriverSize pulumi.StringPtrInput `pulumi:"driverSize"`
	// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
	ExecutorMaxNumbers pulumi.IntPtrInput `pulumi:"executorMaxNumbers"`
	// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
	ExecutorNums pulumi.IntPtrInput `pulumi:"executorNums"`
	// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	ExecutorSize pulumi.StringPtrInput `pulumi:"executorSize"`
}

func (UserDataEngineConfigSessionResourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDataEngineConfigSessionResourceTemplate)(nil)).Elem()
}

func (i UserDataEngineConfigSessionResourceTemplateArgs) ToUserDataEngineConfigSessionResourceTemplateOutput() UserDataEngineConfigSessionResourceTemplateOutput {
	return i.ToUserDataEngineConfigSessionResourceTemplateOutputWithContext(context.Background())
}

func (i UserDataEngineConfigSessionResourceTemplateArgs) ToUserDataEngineConfigSessionResourceTemplateOutputWithContext(ctx context.Context) UserDataEngineConfigSessionResourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDataEngineConfigSessionResourceTemplateOutput)
}

func (i UserDataEngineConfigSessionResourceTemplateArgs) ToUserDataEngineConfigSessionResourceTemplatePtrOutput() UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return i.ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(context.Background())
}

func (i UserDataEngineConfigSessionResourceTemplateArgs) ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(ctx context.Context) UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDataEngineConfigSessionResourceTemplateOutput).ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(ctx)
}

// UserDataEngineConfigSessionResourceTemplatePtrInput is an input type that accepts UserDataEngineConfigSessionResourceTemplateArgs, UserDataEngineConfigSessionResourceTemplatePtr and UserDataEngineConfigSessionResourceTemplatePtrOutput values.
// You can construct a concrete instance of `UserDataEngineConfigSessionResourceTemplatePtrInput` via:
//
//	        UserDataEngineConfigSessionResourceTemplateArgs{...}
//
//	or:
//
//	        nil
type UserDataEngineConfigSessionResourceTemplatePtrInput interface {
	pulumi.Input

	ToUserDataEngineConfigSessionResourceTemplatePtrOutput() UserDataEngineConfigSessionResourceTemplatePtrOutput
	ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(context.Context) UserDataEngineConfigSessionResourceTemplatePtrOutput
}

type userDataEngineConfigSessionResourceTemplatePtrType UserDataEngineConfigSessionResourceTemplateArgs

func UserDataEngineConfigSessionResourceTemplatePtr(v *UserDataEngineConfigSessionResourceTemplateArgs) UserDataEngineConfigSessionResourceTemplatePtrInput {
	return (*userDataEngineConfigSessionResourceTemplatePtrType)(v)
}

func (*userDataEngineConfigSessionResourceTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserDataEngineConfigSessionResourceTemplate)(nil)).Elem()
}

func (i *userDataEngineConfigSessionResourceTemplatePtrType) ToUserDataEngineConfigSessionResourceTemplatePtrOutput() UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return i.ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(context.Background())
}

func (i *userDataEngineConfigSessionResourceTemplatePtrType) ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(ctx context.Context) UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserDataEngineConfigSessionResourceTemplatePtrOutput)
}

type UserDataEngineConfigSessionResourceTemplateOutput struct{ *pulumi.OutputState }

func (UserDataEngineConfigSessionResourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserDataEngineConfigSessionResourceTemplate)(nil)).Elem()
}

func (o UserDataEngineConfigSessionResourceTemplateOutput) ToUserDataEngineConfigSessionResourceTemplateOutput() UserDataEngineConfigSessionResourceTemplateOutput {
	return o
}

func (o UserDataEngineConfigSessionResourceTemplateOutput) ToUserDataEngineConfigSessionResourceTemplateOutputWithContext(ctx context.Context) UserDataEngineConfigSessionResourceTemplateOutput {
	return o
}

func (o UserDataEngineConfigSessionResourceTemplateOutput) ToUserDataEngineConfigSessionResourceTemplatePtrOutput() UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return o.ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(context.Background())
}

func (o UserDataEngineConfigSessionResourceTemplateOutput) ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(ctx context.Context) UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserDataEngineConfigSessionResourceTemplate) *UserDataEngineConfigSessionResourceTemplate {
		return &v
	}).(UserDataEngineConfigSessionResourceTemplatePtrOutput)
}

// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o UserDataEngineConfigSessionResourceTemplateOutput) DriverSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDataEngineConfigSessionResourceTemplate) *string { return v.DriverSize }).(pulumi.StringPtrOutput)
}

// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
func (o UserDataEngineConfigSessionResourceTemplateOutput) ExecutorMaxNumbers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserDataEngineConfigSessionResourceTemplate) *int { return v.ExecutorMaxNumbers }).(pulumi.IntPtrOutput)
}

// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
func (o UserDataEngineConfigSessionResourceTemplateOutput) ExecutorNums() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserDataEngineConfigSessionResourceTemplate) *int { return v.ExecutorNums }).(pulumi.IntPtrOutput)
}

// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o UserDataEngineConfigSessionResourceTemplateOutput) ExecutorSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserDataEngineConfigSessionResourceTemplate) *string { return v.ExecutorSize }).(pulumi.StringPtrOutput)
}

type UserDataEngineConfigSessionResourceTemplatePtrOutput struct{ *pulumi.OutputState }

func (UserDataEngineConfigSessionResourceTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserDataEngineConfigSessionResourceTemplate)(nil)).Elem()
}

func (o UserDataEngineConfigSessionResourceTemplatePtrOutput) ToUserDataEngineConfigSessionResourceTemplatePtrOutput() UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return o
}

func (o UserDataEngineConfigSessionResourceTemplatePtrOutput) ToUserDataEngineConfigSessionResourceTemplatePtrOutputWithContext(ctx context.Context) UserDataEngineConfigSessionResourceTemplatePtrOutput {
	return o
}

func (o UserDataEngineConfigSessionResourceTemplatePtrOutput) Elem() UserDataEngineConfigSessionResourceTemplateOutput {
	return o.ApplyT(func(v *UserDataEngineConfigSessionResourceTemplate) UserDataEngineConfigSessionResourceTemplate {
		if v != nil {
			return *v
		}
		var ret UserDataEngineConfigSessionResourceTemplate
		return ret
	}).(UserDataEngineConfigSessionResourceTemplateOutput)
}

// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o UserDataEngineConfigSessionResourceTemplatePtrOutput) DriverSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDataEngineConfigSessionResourceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.DriverSize
	}).(pulumi.StringPtrOutput)
}

// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
func (o UserDataEngineConfigSessionResourceTemplatePtrOutput) ExecutorMaxNumbers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserDataEngineConfigSessionResourceTemplate) *int {
		if v == nil {
			return nil
		}
		return v.ExecutorMaxNumbers
	}).(pulumi.IntPtrOutput)
}

// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
func (o UserDataEngineConfigSessionResourceTemplatePtrOutput) ExecutorNums() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserDataEngineConfigSessionResourceTemplate) *int {
		if v == nil {
			return nil
		}
		return v.ExecutorNums
	}).(pulumi.IntPtrOutput)
}

// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o UserDataEngineConfigSessionResourceTemplatePtrOutput) ExecutorSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserDataEngineConfigSessionResourceTemplate) *string {
		if v == nil {
			return nil
		}
		return v.ExecutorSize
	}).(pulumi.StringPtrOutput)
}

type GetCheckDataEngineConfigPairsValidityDataEngineConfigPair struct {
	// Configuration item.
	ConfigItem string `pulumi:"configItem"`
	// Configuration value.
	ConfigValue string `pulumi:"configValue"`
}

// GetCheckDataEngineConfigPairsValidityDataEngineConfigPairInput is an input type that accepts GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs and GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput values.
// You can construct a concrete instance of `GetCheckDataEngineConfigPairsValidityDataEngineConfigPairInput` via:
//
//	GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs{...}
type GetCheckDataEngineConfigPairsValidityDataEngineConfigPairInput interface {
	pulumi.Input

	ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput() GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput
	ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutputWithContext(context.Context) GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput
}

type GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs struct {
	// Configuration item.
	ConfigItem pulumi.StringInput `pulumi:"configItem"`
	// Configuration value.
	ConfigValue pulumi.StringInput `pulumi:"configValue"`
}

func (GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCheckDataEngineConfigPairsValidityDataEngineConfigPair)(nil)).Elem()
}

func (i GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput() GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput {
	return i.ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutputWithContext(context.Background())
}

func (i GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutputWithContext(ctx context.Context) GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput)
}

// GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayInput is an input type that accepts GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArray and GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput values.
// You can construct a concrete instance of `GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayInput` via:
//
//	GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArray{ GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs{...} }
type GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayInput interface {
	pulumi.Input

	ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput() GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput
	ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutputWithContext(context.Context) GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput
}

type GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArray []GetCheckDataEngineConfigPairsValidityDataEngineConfigPairInput

func (GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCheckDataEngineConfigPairsValidityDataEngineConfigPair)(nil)).Elem()
}

func (i GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArray) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput() GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput {
	return i.ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutputWithContext(context.Background())
}

func (i GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArray) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutputWithContext(ctx context.Context) GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput)
}

type GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput struct{ *pulumi.OutputState }

func (GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCheckDataEngineConfigPairsValidityDataEngineConfigPair)(nil)).Elem()
}

func (o GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput() GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput {
	return o
}

func (o GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutputWithContext(ctx context.Context) GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput {
	return o
}

// Configuration item.
func (o GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput) ConfigItem() pulumi.StringOutput {
	return o.ApplyT(func(v GetCheckDataEngineConfigPairsValidityDataEngineConfigPair) string { return v.ConfigItem }).(pulumi.StringOutput)
}

// Configuration value.
func (o GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput) ConfigValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetCheckDataEngineConfigPairsValidityDataEngineConfigPair) string { return v.ConfigValue }).(pulumi.StringOutput)
}

type GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput struct{ *pulumi.OutputState }

func (GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCheckDataEngineConfigPairsValidityDataEngineConfigPair)(nil)).Elem()
}

func (o GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput() GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput {
	return o
}

func (o GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput) ToGetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutputWithContext(ctx context.Context) GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput {
	return o
}

func (o GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput) Index(i pulumi.IntInput) GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCheckDataEngineConfigPairsValidityDataEngineConfigPair {
		return vs[0].([]GetCheckDataEngineConfigPairsValidityDataEngineConfigPair)[vs[1].(int)]
	}).(GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput)
}

type GetDescribeDataEngineDataEngine struct {
	// Whether to automatically start the cluster, prepay not support.
	AutoResume bool `pulumi:"autoResume"`
	// Whether to automatically suspend the cluster, prepay not support.
	AutoSuspend bool `pulumi:"autoSuspend"`
	// Cluster automatic suspension time, default 10 minutes.
	AutoSuspendTime int `pulumi:"autoSuspendTime"`
	// Engine Image version id.
	ChildImageVersionId string `pulumi:"childImageVersionId"`
	// Engine VPC network segment, just like 192.0.2.1/24.
	CidrBlock string `pulumi:"cidrBlock"`
	// Engine cluster type, only support: spark_cu/presto_cu.
	ClusterType string `pulumi:"clusterType"`
	// Create time.
	CreateTime int `pulumi:"createTime"`
	// Engine crontab resume or suspend strategy, only support: 0: Wait(default), 1: Kill.
	CrontabResumeSuspend int `pulumi:"crontabResumeSuspend"`
	// Engine auto suspend strategy, when AutoSuspend is true, CrontabResumeSuspend must stop.
	CrontabResumeSuspendStrategies []GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy `pulumi:"crontabResumeSuspendStrategies"`
	// Engine unique id.
	DataEngineId string `pulumi:"dataEngineId"`
	// Engine name.
	DataEngineName string `pulumi:"dataEngineName"`
	// Whether it is the default virtual cluster.
	DefaultDataEngine bool `pulumi:"defaultDataEngine"`
	// Is it the default engine?.
	DefaultHouse bool `pulumi:"defaultHouse"`
	// For spark Batch ExecType, yearly and monthly cluster elastic limit.
	ElasticLimit int `pulumi:"elasticLimit"`
	// For spark Batch ExecType, yearly and monthly cluster whether to enable elasticity.
	ElasticSwitch bool `pulumi:"elasticSwitch"`
	// Engine exec type, only support SQL(default) or BATCH.
	EngineExecType string `pulumi:"engineExecType"`
	// Engine type, only support: spark/presto.
	EngineType string `pulumi:"engineType"`
	// Expire time.
	ExpireTime string `pulumi:"expireTime"`
	// Engine major version id.
	ImageVersionId string `pulumi:"imageVersionId"`
	// Engine image version name.
	ImageVersionName string `pulumi:"imageVersionName"`
	// Isolated time.
	IsolatedTime string `pulumi:"isolatedTime"`
	// Engine max cluster size,  MaxClusters less than or equal to 10 and MaxClusters bigger than MinClusters.
	MaxClusters int `pulumi:"maxClusters"`
	// Maximum number of concurrent tasks in a single cluster, default 5.
	MaxConcurrency int `pulumi:"maxConcurrency"`
	// Engine description information.
	Message string `pulumi:"message"`
	// Engine min size, greater than or equal to 1 and MaxClusters bigger than MinClusters.
	MinClusters int `pulumi:"minClusters"`
	// Engine mode, only support 1: ByAmount, 2: YearlyAndMonthly.
	Mode int `pulumi:"mode"`
	// Network connection configuration.
	NetworkConnectionSets []GetDescribeDataEngineDataEngineNetworkConnectionSet `pulumi:"networkConnectionSets"`
	// Engine permissions.
	Permissions []string `pulumi:"permissions"`
	// Reference ID.
	QuotaId string `pulumi:"quotaId"`
	// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. If the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: Make it clear that there will be no automatic renewal.
	RenewFlag int `pulumi:"renewFlag"`
	// Engine resource type not match, only support: Standard_CU/Memory_CU(only BATCH ExecType).
	ResourceType string `pulumi:"resourceType"`
	// Reversal time.
	ReversalTime string `pulumi:"reversalTime"`
	// For spark Batch ExecType, cluster session resource configuration template.
	SessionResourceTemplates []GetDescribeDataEngineDataEngineSessionResourceTemplate `pulumi:"sessionResourceTemplates"`
	// Engine size.
	Size int `pulumi:"size"`
	// Automatic recovery time, prepay not support.
	SpendAfter int `pulumi:"spendAfter"`
	// Whether to enable the backup cluster.
	StartStandbyCluster bool `pulumi:"startStandbyCluster"`
	// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
	State int `pulumi:"state"`
	// Operator.
	SubAccountUin string `pulumi:"subAccountUin"`
	// Tag list.
	TagLists []GetDescribeDataEngineDataEngineTagList `pulumi:"tagLists"`
	// Tolerable queuing time, default 0. scaling may be triggered when tasks are queued for longer than the tolerable time. if this parameter is 0, it means that capacity expansion may be triggered immediately once a task is queued.
	TolerableQueueTime int `pulumi:"tolerableQueueTime"`
	// Jump address of ui.
	UiURL string `pulumi:"uiURL"`
	// Update time.
	UpdateTime int `pulumi:"updateTime"`
	// User&amp;#39;s nickname.
	UserAlias string `pulumi:"userAlias"`
	// User appid.
	UserAppId int `pulumi:"userAppId"`
	// User uin.
	UserUin string `pulumi:"userUin"`
}

// GetDescribeDataEngineDataEngineInput is an input type that accepts GetDescribeDataEngineDataEngineArgs and GetDescribeDataEngineDataEngineOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineInput` via:
//
//	GetDescribeDataEngineDataEngineArgs{...}
type GetDescribeDataEngineDataEngineInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineOutput() GetDescribeDataEngineDataEngineOutput
	ToGetDescribeDataEngineDataEngineOutputWithContext(context.Context) GetDescribeDataEngineDataEngineOutput
}

type GetDescribeDataEngineDataEngineArgs struct {
	// Whether to automatically start the cluster, prepay not support.
	AutoResume pulumi.BoolInput `pulumi:"autoResume"`
	// Whether to automatically suspend the cluster, prepay not support.
	AutoSuspend pulumi.BoolInput `pulumi:"autoSuspend"`
	// Cluster automatic suspension time, default 10 minutes.
	AutoSuspendTime pulumi.IntInput `pulumi:"autoSuspendTime"`
	// Engine Image version id.
	ChildImageVersionId pulumi.StringInput `pulumi:"childImageVersionId"`
	// Engine VPC network segment, just like 192.0.2.1/24.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Engine cluster type, only support: spark_cu/presto_cu.
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
	// Create time.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Engine crontab resume or suspend strategy, only support: 0: Wait(default), 1: Kill.
	CrontabResumeSuspend pulumi.IntInput `pulumi:"crontabResumeSuspend"`
	// Engine auto suspend strategy, when AutoSuspend is true, CrontabResumeSuspend must stop.
	CrontabResumeSuspendStrategies GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayInput `pulumi:"crontabResumeSuspendStrategies"`
	// Engine unique id.
	DataEngineId pulumi.StringInput `pulumi:"dataEngineId"`
	// Engine name.
	DataEngineName pulumi.StringInput `pulumi:"dataEngineName"`
	// Whether it is the default virtual cluster.
	DefaultDataEngine pulumi.BoolInput `pulumi:"defaultDataEngine"`
	// Is it the default engine?.
	DefaultHouse pulumi.BoolInput `pulumi:"defaultHouse"`
	// For spark Batch ExecType, yearly and monthly cluster elastic limit.
	ElasticLimit pulumi.IntInput `pulumi:"elasticLimit"`
	// For spark Batch ExecType, yearly and monthly cluster whether to enable elasticity.
	ElasticSwitch pulumi.BoolInput `pulumi:"elasticSwitch"`
	// Engine exec type, only support SQL(default) or BATCH.
	EngineExecType pulumi.StringInput `pulumi:"engineExecType"`
	// Engine type, only support: spark/presto.
	EngineType pulumi.StringInput `pulumi:"engineType"`
	// Expire time.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// Engine major version id.
	ImageVersionId pulumi.StringInput `pulumi:"imageVersionId"`
	// Engine image version name.
	ImageVersionName pulumi.StringInput `pulumi:"imageVersionName"`
	// Isolated time.
	IsolatedTime pulumi.StringInput `pulumi:"isolatedTime"`
	// Engine max cluster size,  MaxClusters less than or equal to 10 and MaxClusters bigger than MinClusters.
	MaxClusters pulumi.IntInput `pulumi:"maxClusters"`
	// Maximum number of concurrent tasks in a single cluster, default 5.
	MaxConcurrency pulumi.IntInput `pulumi:"maxConcurrency"`
	// Engine description information.
	Message pulumi.StringInput `pulumi:"message"`
	// Engine min size, greater than or equal to 1 and MaxClusters bigger than MinClusters.
	MinClusters pulumi.IntInput `pulumi:"minClusters"`
	// Engine mode, only support 1: ByAmount, 2: YearlyAndMonthly.
	Mode pulumi.IntInput `pulumi:"mode"`
	// Network connection configuration.
	NetworkConnectionSets GetDescribeDataEngineDataEngineNetworkConnectionSetArrayInput `pulumi:"networkConnectionSets"`
	// Engine permissions.
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
	// Reference ID.
	QuotaId pulumi.StringInput `pulumi:"quotaId"`
	// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. If the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: Make it clear that there will be no automatic renewal.
	RenewFlag pulumi.IntInput `pulumi:"renewFlag"`
	// Engine resource type not match, only support: Standard_CU/Memory_CU(only BATCH ExecType).
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Reversal time.
	ReversalTime pulumi.StringInput `pulumi:"reversalTime"`
	// For spark Batch ExecType, cluster session resource configuration template.
	SessionResourceTemplates GetDescribeDataEngineDataEngineSessionResourceTemplateArrayInput `pulumi:"sessionResourceTemplates"`
	// Engine size.
	Size pulumi.IntInput `pulumi:"size"`
	// Automatic recovery time, prepay not support.
	SpendAfter pulumi.IntInput `pulumi:"spendAfter"`
	// Whether to enable the backup cluster.
	StartStandbyCluster pulumi.BoolInput `pulumi:"startStandbyCluster"`
	// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
	State pulumi.IntInput `pulumi:"state"`
	// Operator.
	SubAccountUin pulumi.StringInput `pulumi:"subAccountUin"`
	// Tag list.
	TagLists GetDescribeDataEngineDataEngineTagListArrayInput `pulumi:"tagLists"`
	// Tolerable queuing time, default 0. scaling may be triggered when tasks are queued for longer than the tolerable time. if this parameter is 0, it means that capacity expansion may be triggered immediately once a task is queued.
	TolerableQueueTime pulumi.IntInput `pulumi:"tolerableQueueTime"`
	// Jump address of ui.
	UiURL pulumi.StringInput `pulumi:"uiURL"`
	// Update time.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
	// User&amp;#39;s nickname.
	UserAlias pulumi.StringInput `pulumi:"userAlias"`
	// User appid.
	UserAppId pulumi.IntInput `pulumi:"userAppId"`
	// User uin.
	UserUin pulumi.StringInput `pulumi:"userUin"`
}

func (GetDescribeDataEngineDataEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngine)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineArgs) ToGetDescribeDataEngineDataEngineOutput() GetDescribeDataEngineDataEngineOutput {
	return i.ToGetDescribeDataEngineDataEngineOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineArgs) ToGetDescribeDataEngineDataEngineOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineOutput)
}

// GetDescribeDataEngineDataEngineArrayInput is an input type that accepts GetDescribeDataEngineDataEngineArray and GetDescribeDataEngineDataEngineArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineArrayInput` via:
//
//	GetDescribeDataEngineDataEngineArray{ GetDescribeDataEngineDataEngineArgs{...} }
type GetDescribeDataEngineDataEngineArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineArrayOutput() GetDescribeDataEngineDataEngineArrayOutput
	ToGetDescribeDataEngineDataEngineArrayOutputWithContext(context.Context) GetDescribeDataEngineDataEngineArrayOutput
}

type GetDescribeDataEngineDataEngineArray []GetDescribeDataEngineDataEngineInput

func (GetDescribeDataEngineDataEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngine)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineArray) ToGetDescribeDataEngineDataEngineArrayOutput() GetDescribeDataEngineDataEngineArrayOutput {
	return i.ToGetDescribeDataEngineDataEngineArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineArray) ToGetDescribeDataEngineDataEngineArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineArrayOutput)
}

type GetDescribeDataEngineDataEngineOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngine)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineOutput) ToGetDescribeDataEngineDataEngineOutput() GetDescribeDataEngineDataEngineOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineOutput) ToGetDescribeDataEngineDataEngineOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineOutput {
	return o
}

// Whether to automatically start the cluster, prepay not support.
func (o GetDescribeDataEngineDataEngineOutput) AutoResume() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) bool { return v.AutoResume }).(pulumi.BoolOutput)
}

// Whether to automatically suspend the cluster, prepay not support.
func (o GetDescribeDataEngineDataEngineOutput) AutoSuspend() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) bool { return v.AutoSuspend }).(pulumi.BoolOutput)
}

// Cluster automatic suspension time, default 10 minutes.
func (o GetDescribeDataEngineDataEngineOutput) AutoSuspendTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.AutoSuspendTime }).(pulumi.IntOutput)
}

// Engine Image version id.
func (o GetDescribeDataEngineDataEngineOutput) ChildImageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.ChildImageVersionId }).(pulumi.StringOutput)
}

// Engine VPC network segment, just like 192.0.2.1/24.
func (o GetDescribeDataEngineDataEngineOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Engine cluster type, only support: spark_cu/presto_cu.
func (o GetDescribeDataEngineDataEngineOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.ClusterType }).(pulumi.StringOutput)
}

// Create time.
func (o GetDescribeDataEngineDataEngineOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Engine crontab resume or suspend strategy, only support: 0: Wait(default), 1: Kill.
func (o GetDescribeDataEngineDataEngineOutput) CrontabResumeSuspend() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.CrontabResumeSuspend }).(pulumi.IntOutput)
}

// Engine auto suspend strategy, when AutoSuspend is true, CrontabResumeSuspend must stop.
func (o GetDescribeDataEngineDataEngineOutput) CrontabResumeSuspendStrategies() GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) []GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy {
		return v.CrontabResumeSuspendStrategies
	}).(GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput)
}

// Engine unique id.
func (o GetDescribeDataEngineDataEngineOutput) DataEngineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.DataEngineId }).(pulumi.StringOutput)
}

// Engine name.
func (o GetDescribeDataEngineDataEngineOutput) DataEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.DataEngineName }).(pulumi.StringOutput)
}

// Whether it is the default virtual cluster.
func (o GetDescribeDataEngineDataEngineOutput) DefaultDataEngine() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) bool { return v.DefaultDataEngine }).(pulumi.BoolOutput)
}

// Is it the default engine?.
func (o GetDescribeDataEngineDataEngineOutput) DefaultHouse() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) bool { return v.DefaultHouse }).(pulumi.BoolOutput)
}

// For spark Batch ExecType, yearly and monthly cluster elastic limit.
func (o GetDescribeDataEngineDataEngineOutput) ElasticLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.ElasticLimit }).(pulumi.IntOutput)
}

// For spark Batch ExecType, yearly and monthly cluster whether to enable elasticity.
func (o GetDescribeDataEngineDataEngineOutput) ElasticSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) bool { return v.ElasticSwitch }).(pulumi.BoolOutput)
}

// Engine exec type, only support SQL(default) or BATCH.
func (o GetDescribeDataEngineDataEngineOutput) EngineExecType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.EngineExecType }).(pulumi.StringOutput)
}

// Engine type, only support: spark/presto.
func (o GetDescribeDataEngineDataEngineOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.EngineType }).(pulumi.StringOutput)
}

// Expire time.
func (o GetDescribeDataEngineDataEngineOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// Engine major version id.
func (o GetDescribeDataEngineDataEngineOutput) ImageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.ImageVersionId }).(pulumi.StringOutput)
}

// Engine image version name.
func (o GetDescribeDataEngineDataEngineOutput) ImageVersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.ImageVersionName }).(pulumi.StringOutput)
}

// Isolated time.
func (o GetDescribeDataEngineDataEngineOutput) IsolatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.IsolatedTime }).(pulumi.StringOutput)
}

// Engine max cluster size,  MaxClusters less than or equal to 10 and MaxClusters bigger than MinClusters.
func (o GetDescribeDataEngineDataEngineOutput) MaxClusters() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.MaxClusters }).(pulumi.IntOutput)
}

// Maximum number of concurrent tasks in a single cluster, default 5.
func (o GetDescribeDataEngineDataEngineOutput) MaxConcurrency() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.MaxConcurrency }).(pulumi.IntOutput)
}

// Engine description information.
func (o GetDescribeDataEngineDataEngineOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.Message }).(pulumi.StringOutput)
}

// Engine min size, greater than or equal to 1 and MaxClusters bigger than MinClusters.
func (o GetDescribeDataEngineDataEngineOutput) MinClusters() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.MinClusters }).(pulumi.IntOutput)
}

// Engine mode, only support 1: ByAmount, 2: YearlyAndMonthly.
func (o GetDescribeDataEngineDataEngineOutput) Mode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.Mode }).(pulumi.IntOutput)
}

// Network connection configuration.
func (o GetDescribeDataEngineDataEngineOutput) NetworkConnectionSets() GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) []GetDescribeDataEngineDataEngineNetworkConnectionSet {
		return v.NetworkConnectionSets
	}).(GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput)
}

// Engine permissions.
func (o GetDescribeDataEngineDataEngineOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

// Reference ID.
func (o GetDescribeDataEngineDataEngineOutput) QuotaId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.QuotaId }).(pulumi.StringOutput)
}

// Automatic renewal flag, 0, initial state, automatic renewal is not performed by default. If the user has prepaid non-stop service privileges, automatic renewal will occur. 1: Automatic renewal. 2: Make it clear that there will be no automatic renewal.
func (o GetDescribeDataEngineDataEngineOutput) RenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.RenewFlag }).(pulumi.IntOutput)
}

// Engine resource type not match, only support: Standard_CU/Memory_CU(only BATCH ExecType).
func (o GetDescribeDataEngineDataEngineOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Reversal time.
func (o GetDescribeDataEngineDataEngineOutput) ReversalTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.ReversalTime }).(pulumi.StringOutput)
}

// For spark Batch ExecType, cluster session resource configuration template.
func (o GetDescribeDataEngineDataEngineOutput) SessionResourceTemplates() GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) []GetDescribeDataEngineDataEngineSessionResourceTemplate {
		return v.SessionResourceTemplates
	}).(GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput)
}

// Engine size.
func (o GetDescribeDataEngineDataEngineOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.Size }).(pulumi.IntOutput)
}

// Automatic recovery time, prepay not support.
func (o GetDescribeDataEngineDataEngineOutput) SpendAfter() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.SpendAfter }).(pulumi.IntOutput)
}

// Whether to enable the backup cluster.
func (o GetDescribeDataEngineDataEngineOutput) StartStandbyCluster() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) bool { return v.StartStandbyCluster }).(pulumi.BoolOutput)
}

// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
func (o GetDescribeDataEngineDataEngineOutput) State() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.State }).(pulumi.IntOutput)
}

// Operator.
func (o GetDescribeDataEngineDataEngineOutput) SubAccountUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.SubAccountUin }).(pulumi.StringOutput)
}

// Tag list.
func (o GetDescribeDataEngineDataEngineOutput) TagLists() GetDescribeDataEngineDataEngineTagListArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) []GetDescribeDataEngineDataEngineTagList { return v.TagLists }).(GetDescribeDataEngineDataEngineTagListArrayOutput)
}

// Tolerable queuing time, default 0. scaling may be triggered when tasks are queued for longer than the tolerable time. if this parameter is 0, it means that capacity expansion may be triggered immediately once a task is queued.
func (o GetDescribeDataEngineDataEngineOutput) TolerableQueueTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.TolerableQueueTime }).(pulumi.IntOutput)
}

// Jump address of ui.
func (o GetDescribeDataEngineDataEngineOutput) UiURL() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.UiURL }).(pulumi.StringOutput)
}

// Update time.
func (o GetDescribeDataEngineDataEngineOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.UpdateTime }).(pulumi.IntOutput)
}

// User&amp;#39;s nickname.
func (o GetDescribeDataEngineDataEngineOutput) UserAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.UserAlias }).(pulumi.StringOutput)
}

// User appid.
func (o GetDescribeDataEngineDataEngineOutput) UserAppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) int { return v.UserAppId }).(pulumi.IntOutput)
}

// User uin.
func (o GetDescribeDataEngineDataEngineOutput) UserUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngine) string { return v.UserUin }).(pulumi.StringOutput)
}

type GetDescribeDataEngineDataEngineArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngine)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineArrayOutput) ToGetDescribeDataEngineDataEngineArrayOutput() GetDescribeDataEngineDataEngineArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineArrayOutput) ToGetDescribeDataEngineDataEngineArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEngineDataEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEngineDataEngine {
		return vs[0].([]GetDescribeDataEngineDataEngine)[vs[1].(int)]
	}).(GetDescribeDataEngineDataEngineOutput)
}

type GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy struct {
	// Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
	ResumeTime string `pulumi:"resumeTime"`
	// Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
	SuspendStrategy int `pulumi:"suspendStrategy"`
	// Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
	SuspendTime string `pulumi:"suspendTime"`
}

// GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyInput is an input type that accepts GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs and GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyInput` via:
//
//	GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs{...}
type GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput() GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput
	ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutputWithContext(context.Context) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput
}

type GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs struct {
	// Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
	ResumeTime pulumi.StringInput `pulumi:"resumeTime"`
	// Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
	SuspendStrategy pulumi.IntInput `pulumi:"suspendStrategy"`
	// Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
	SuspendTime pulumi.StringInput `pulumi:"suspendTime"`
}

func (GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput() GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput {
	return i.ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput)
}

// GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayInput is an input type that accepts GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArray and GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayInput` via:
//
//	GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArray{ GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs{...} }
type GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput() GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput
	ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutputWithContext(context.Context) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput
}

type GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArray []GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyInput

func (GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArray) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput() GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput {
	return i.ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArray) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput)
}

type GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput() GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput {
	return o
}

// Scheduled pull-up time: For example: 8 o&amp;#39;clock on Monday is expressed as 1000000-08:00:00.
func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput) ResumeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy) string { return v.ResumeTime }).(pulumi.StringOutput)
}

// Suspend configuration: 0 (default): wait for the task to end before suspending, 1: force suspend.
func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput) SuspendStrategy() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy) int { return v.SuspendStrategy }).(pulumi.IntOutput)
}

// Scheduled suspension time: For example: 20 o&amp;#39;clock on Monday is expressed as 1000000-20:00:00.
func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput) SuspendTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy) string { return v.SuspendTime }).(pulumi.StringOutput)
}

type GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput() GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput) ToGetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy {
		return vs[0].([]GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategy)[vs[1].(int)]
	}).(GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput)
}

type GetDescribeDataEngineDataEngineNetworkConnectionSet struct {
	// User appid.
	Appid int `pulumi:"appid"`
	// Network configuration unique identifier.
	AssociateId string `pulumi:"associateId"`
	// Create time.
	CreateTime int `pulumi:"createTime"`
	// Datasource connection cidr block.
	DatasourceConnectionCidrBlock string `pulumi:"datasourceConnectionCidrBlock"`
	// Data source id (obsolete).
	DatasourceConnectionId string `pulumi:"datasourceConnectionId"`
	// Network configuration name.
	DatasourceConnectionName string `pulumi:"datasourceConnectionName"`
	// Datasource connection subnet cidr block.
	DatasourceConnectionSubnetCidrBlock string `pulumi:"datasourceConnectionSubnetCidrBlock"`
	// Datasource subnetId.
	DatasourceConnectionSubnetId string `pulumi:"datasourceConnectionSubnetId"`
	// Datasource vpcid.
	DatasourceConnectionVpcId string `pulumi:"datasourceConnectionVpcId"`
	// Data engine id.
	HouseId string `pulumi:"houseId"`
	// Data engine name.
	HouseName string `pulumi:"houseName"`
	// Network configuration id.
	Id int `pulumi:"id"`
	// Network configuration description.
	NetworkConnectionDesc string `pulumi:"networkConnectionDesc"`
	// Network configuration type.
	NetworkConnectionType int `pulumi:"networkConnectionType"`
	// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
	State int `pulumi:"state"`
	// Operator.
	SubAccountUin string `pulumi:"subAccountUin"`
	// User uin.
	Uin string `pulumi:"uin"`
	// Update time.
	UpdateTime int `pulumi:"updateTime"`
}

// GetDescribeDataEngineDataEngineNetworkConnectionSetInput is an input type that accepts GetDescribeDataEngineDataEngineNetworkConnectionSetArgs and GetDescribeDataEngineDataEngineNetworkConnectionSetOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineNetworkConnectionSetInput` via:
//
//	GetDescribeDataEngineDataEngineNetworkConnectionSetArgs{...}
type GetDescribeDataEngineDataEngineNetworkConnectionSetInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineNetworkConnectionSetOutput() GetDescribeDataEngineDataEngineNetworkConnectionSetOutput
	ToGetDescribeDataEngineDataEngineNetworkConnectionSetOutputWithContext(context.Context) GetDescribeDataEngineDataEngineNetworkConnectionSetOutput
}

type GetDescribeDataEngineDataEngineNetworkConnectionSetArgs struct {
	// User appid.
	Appid pulumi.IntInput `pulumi:"appid"`
	// Network configuration unique identifier.
	AssociateId pulumi.StringInput `pulumi:"associateId"`
	// Create time.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Datasource connection cidr block.
	DatasourceConnectionCidrBlock pulumi.StringInput `pulumi:"datasourceConnectionCidrBlock"`
	// Data source id (obsolete).
	DatasourceConnectionId pulumi.StringInput `pulumi:"datasourceConnectionId"`
	// Network configuration name.
	DatasourceConnectionName pulumi.StringInput `pulumi:"datasourceConnectionName"`
	// Datasource connection subnet cidr block.
	DatasourceConnectionSubnetCidrBlock pulumi.StringInput `pulumi:"datasourceConnectionSubnetCidrBlock"`
	// Datasource subnetId.
	DatasourceConnectionSubnetId pulumi.StringInput `pulumi:"datasourceConnectionSubnetId"`
	// Datasource vpcid.
	DatasourceConnectionVpcId pulumi.StringInput `pulumi:"datasourceConnectionVpcId"`
	// Data engine id.
	HouseId pulumi.StringInput `pulumi:"houseId"`
	// Data engine name.
	HouseName pulumi.StringInput `pulumi:"houseName"`
	// Network configuration id.
	Id pulumi.IntInput `pulumi:"id"`
	// Network configuration description.
	NetworkConnectionDesc pulumi.StringInput `pulumi:"networkConnectionDesc"`
	// Network configuration type.
	NetworkConnectionType pulumi.IntInput `pulumi:"networkConnectionType"`
	// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
	State pulumi.IntInput `pulumi:"state"`
	// Operator.
	SubAccountUin pulumi.StringInput `pulumi:"subAccountUin"`
	// User uin.
	Uin pulumi.StringInput `pulumi:"uin"`
	// Update time.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
}

func (GetDescribeDataEngineDataEngineNetworkConnectionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineNetworkConnectionSet)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineNetworkConnectionSetArgs) ToGetDescribeDataEngineDataEngineNetworkConnectionSetOutput() GetDescribeDataEngineDataEngineNetworkConnectionSetOutput {
	return i.ToGetDescribeDataEngineDataEngineNetworkConnectionSetOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineNetworkConnectionSetArgs) ToGetDescribeDataEngineDataEngineNetworkConnectionSetOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineNetworkConnectionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineNetworkConnectionSetOutput)
}

// GetDescribeDataEngineDataEngineNetworkConnectionSetArrayInput is an input type that accepts GetDescribeDataEngineDataEngineNetworkConnectionSetArray and GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineNetworkConnectionSetArrayInput` via:
//
//	GetDescribeDataEngineDataEngineNetworkConnectionSetArray{ GetDescribeDataEngineDataEngineNetworkConnectionSetArgs{...} }
type GetDescribeDataEngineDataEngineNetworkConnectionSetArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput() GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput
	ToGetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutputWithContext(context.Context) GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput
}

type GetDescribeDataEngineDataEngineNetworkConnectionSetArray []GetDescribeDataEngineDataEngineNetworkConnectionSetInput

func (GetDescribeDataEngineDataEngineNetworkConnectionSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineNetworkConnectionSet)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineNetworkConnectionSetArray) ToGetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput() GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput {
	return i.ToGetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineNetworkConnectionSetArray) ToGetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput)
}

type GetDescribeDataEngineDataEngineNetworkConnectionSetOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineNetworkConnectionSet)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) ToGetDescribeDataEngineDataEngineNetworkConnectionSetOutput() GetDescribeDataEngineDataEngineNetworkConnectionSetOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) ToGetDescribeDataEngineDataEngineNetworkConnectionSetOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineNetworkConnectionSetOutput {
	return o
}

// User appid.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) Appid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) int { return v.Appid }).(pulumi.IntOutput)
}

// Network configuration unique identifier.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) AssociateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.AssociateId }).(pulumi.StringOutput)
}

// Create time.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Datasource connection cidr block.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) DatasourceConnectionCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string {
		return v.DatasourceConnectionCidrBlock
	}).(pulumi.StringOutput)
}

// Data source id (obsolete).
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) DatasourceConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.DatasourceConnectionId }).(pulumi.StringOutput)
}

// Network configuration name.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) DatasourceConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.DatasourceConnectionName }).(pulumi.StringOutput)
}

// Datasource connection subnet cidr block.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) DatasourceConnectionSubnetCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string {
		return v.DatasourceConnectionSubnetCidrBlock
	}).(pulumi.StringOutput)
}

// Datasource subnetId.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) DatasourceConnectionSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string {
		return v.DatasourceConnectionSubnetId
	}).(pulumi.StringOutput)
}

// Datasource vpcid.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) DatasourceConnectionVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.DatasourceConnectionVpcId }).(pulumi.StringOutput)
}

// Data engine id.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) HouseId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.HouseId }).(pulumi.StringOutput)
}

// Data engine name.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) HouseName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.HouseName }).(pulumi.StringOutput)
}

// Network configuration id.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) int { return v.Id }).(pulumi.IntOutput)
}

// Network configuration description.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) NetworkConnectionDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.NetworkConnectionDesc }).(pulumi.StringOutput)
}

// Network configuration type.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) NetworkConnectionType() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) int { return v.NetworkConnectionType }).(pulumi.IntOutput)
}

// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) State() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) int { return v.State }).(pulumi.IntOutput)
}

// Operator.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) SubAccountUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.SubAccountUin }).(pulumi.StringOutput)
}

// User uin.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) Uin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) string { return v.Uin }).(pulumi.StringOutput)
}

// Update time.
func (o GetDescribeDataEngineDataEngineNetworkConnectionSetOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineNetworkConnectionSet) int { return v.UpdateTime }).(pulumi.IntOutput)
}

type GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineNetworkConnectionSet)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput) ToGetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput() GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput) ToGetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEngineDataEngineNetworkConnectionSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEngineDataEngineNetworkConnectionSet {
		return vs[0].([]GetDescribeDataEngineDataEngineNetworkConnectionSet)[vs[1].(int)]
	}).(GetDescribeDataEngineDataEngineNetworkConnectionSetOutput)
}

type GetDescribeDataEngineDataEngineSessionResourceTemplate struct {
	// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	DriverSize string `pulumi:"driverSize"`
	// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
	ExecutorMaxNumbers int `pulumi:"executorMaxNumbers"`
	// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
	ExecutorNums int `pulumi:"executorNums"`
	// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	ExecutorSize string `pulumi:"executorSize"`
}

// GetDescribeDataEngineDataEngineSessionResourceTemplateInput is an input type that accepts GetDescribeDataEngineDataEngineSessionResourceTemplateArgs and GetDescribeDataEngineDataEngineSessionResourceTemplateOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineSessionResourceTemplateInput` via:
//
//	GetDescribeDataEngineDataEngineSessionResourceTemplateArgs{...}
type GetDescribeDataEngineDataEngineSessionResourceTemplateInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineSessionResourceTemplateOutput() GetDescribeDataEngineDataEngineSessionResourceTemplateOutput
	ToGetDescribeDataEngineDataEngineSessionResourceTemplateOutputWithContext(context.Context) GetDescribeDataEngineDataEngineSessionResourceTemplateOutput
}

type GetDescribeDataEngineDataEngineSessionResourceTemplateArgs struct {
	// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	DriverSize pulumi.StringInput `pulumi:"driverSize"`
	// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
	ExecutorMaxNumbers pulumi.IntInput `pulumi:"executorMaxNumbers"`
	// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
	ExecutorNums pulumi.IntInput `pulumi:"executorNums"`
	// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
	ExecutorSize pulumi.StringInput `pulumi:"executorSize"`
}

func (GetDescribeDataEngineDataEngineSessionResourceTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineSessionResourceTemplate)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineSessionResourceTemplateArgs) ToGetDescribeDataEngineDataEngineSessionResourceTemplateOutput() GetDescribeDataEngineDataEngineSessionResourceTemplateOutput {
	return i.ToGetDescribeDataEngineDataEngineSessionResourceTemplateOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineSessionResourceTemplateArgs) ToGetDescribeDataEngineDataEngineSessionResourceTemplateOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineSessionResourceTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineSessionResourceTemplateOutput)
}

// GetDescribeDataEngineDataEngineSessionResourceTemplateArrayInput is an input type that accepts GetDescribeDataEngineDataEngineSessionResourceTemplateArray and GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineSessionResourceTemplateArrayInput` via:
//
//	GetDescribeDataEngineDataEngineSessionResourceTemplateArray{ GetDescribeDataEngineDataEngineSessionResourceTemplateArgs{...} }
type GetDescribeDataEngineDataEngineSessionResourceTemplateArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput() GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput
	ToGetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutputWithContext(context.Context) GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput
}

type GetDescribeDataEngineDataEngineSessionResourceTemplateArray []GetDescribeDataEngineDataEngineSessionResourceTemplateInput

func (GetDescribeDataEngineDataEngineSessionResourceTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineSessionResourceTemplate)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineSessionResourceTemplateArray) ToGetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput() GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput {
	return i.ToGetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineSessionResourceTemplateArray) ToGetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput)
}

type GetDescribeDataEngineDataEngineSessionResourceTemplateOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineSessionResourceTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineSessionResourceTemplate)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineSessionResourceTemplateOutput) ToGetDescribeDataEngineDataEngineSessionResourceTemplateOutput() GetDescribeDataEngineDataEngineSessionResourceTemplateOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineSessionResourceTemplateOutput) ToGetDescribeDataEngineDataEngineSessionResourceTemplateOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineSessionResourceTemplateOutput {
	return o
}

// Engine driver size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o GetDescribeDataEngineDataEngineSessionResourceTemplateOutput) DriverSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineSessionResourceTemplate) string { return v.DriverSize }).(pulumi.StringOutput)
}

// Specify the executor max number (in a dynamic configuration scenario), the minimum value is 1, and the maximum value is less than the cluster specification (when ExecutorMaxNumbers is less than ExecutorNums, the value is set to ExecutorNums).
func (o GetDescribeDataEngineDataEngineSessionResourceTemplateOutput) ExecutorMaxNumbers() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineSessionResourceTemplate) int { return v.ExecutorMaxNumbers }).(pulumi.IntOutput)
}

// Specify the number of executors. The minimum value is 1 and the maximum value is less than the cluster specification.
func (o GetDescribeDataEngineDataEngineSessionResourceTemplateOutput) ExecutorNums() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineSessionResourceTemplate) int { return v.ExecutorNums }).(pulumi.IntOutput)
}

// Engine executor size specification only supports: small/medium/large/xlarge/m.small/m.medium/m.large/m.xlarge.
func (o GetDescribeDataEngineDataEngineSessionResourceTemplateOutput) ExecutorSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineSessionResourceTemplate) string { return v.ExecutorSize }).(pulumi.StringOutput)
}

type GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineSessionResourceTemplate)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput) ToGetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput() GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput) ToGetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEngineDataEngineSessionResourceTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEngineDataEngineSessionResourceTemplate {
		return vs[0].([]GetDescribeDataEngineDataEngineSessionResourceTemplate)[vs[1].(int)]
	}).(GetDescribeDataEngineDataEngineSessionResourceTemplateOutput)
}

type GetDescribeDataEngineDataEngineTagList struct {
	// Tag key.
	TagKey string `pulumi:"tagKey"`
	// Tag value.
	TagValue string `pulumi:"tagValue"`
}

// GetDescribeDataEngineDataEngineTagListInput is an input type that accepts GetDescribeDataEngineDataEngineTagListArgs and GetDescribeDataEngineDataEngineTagListOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineTagListInput` via:
//
//	GetDescribeDataEngineDataEngineTagListArgs{...}
type GetDescribeDataEngineDataEngineTagListInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineTagListOutput() GetDescribeDataEngineDataEngineTagListOutput
	ToGetDescribeDataEngineDataEngineTagListOutputWithContext(context.Context) GetDescribeDataEngineDataEngineTagListOutput
}

type GetDescribeDataEngineDataEngineTagListArgs struct {
	// Tag key.
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// Tag value.
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetDescribeDataEngineDataEngineTagListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineTagList)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineTagListArgs) ToGetDescribeDataEngineDataEngineTagListOutput() GetDescribeDataEngineDataEngineTagListOutput {
	return i.ToGetDescribeDataEngineDataEngineTagListOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineTagListArgs) ToGetDescribeDataEngineDataEngineTagListOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineTagListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineTagListOutput)
}

// GetDescribeDataEngineDataEngineTagListArrayInput is an input type that accepts GetDescribeDataEngineDataEngineTagListArray and GetDescribeDataEngineDataEngineTagListArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineDataEngineTagListArrayInput` via:
//
//	GetDescribeDataEngineDataEngineTagListArray{ GetDescribeDataEngineDataEngineTagListArgs{...} }
type GetDescribeDataEngineDataEngineTagListArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEngineDataEngineTagListArrayOutput() GetDescribeDataEngineDataEngineTagListArrayOutput
	ToGetDescribeDataEngineDataEngineTagListArrayOutputWithContext(context.Context) GetDescribeDataEngineDataEngineTagListArrayOutput
}

type GetDescribeDataEngineDataEngineTagListArray []GetDescribeDataEngineDataEngineTagListInput

func (GetDescribeDataEngineDataEngineTagListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineTagList)(nil)).Elem()
}

func (i GetDescribeDataEngineDataEngineTagListArray) ToGetDescribeDataEngineDataEngineTagListArrayOutput() GetDescribeDataEngineDataEngineTagListArrayOutput {
	return i.ToGetDescribeDataEngineDataEngineTagListArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineDataEngineTagListArray) ToGetDescribeDataEngineDataEngineTagListArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineTagListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineDataEngineTagListArrayOutput)
}

type GetDescribeDataEngineDataEngineTagListOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineTagListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineDataEngineTagList)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineTagListOutput) ToGetDescribeDataEngineDataEngineTagListOutput() GetDescribeDataEngineDataEngineTagListOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineTagListOutput) ToGetDescribeDataEngineDataEngineTagListOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineTagListOutput {
	return o
}

// Tag key.
func (o GetDescribeDataEngineDataEngineTagListOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineTagList) string { return v.TagKey }).(pulumi.StringOutput)
}

// Tag value.
func (o GetDescribeDataEngineDataEngineTagListOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineDataEngineTagList) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetDescribeDataEngineDataEngineTagListArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineDataEngineTagListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineDataEngineTagList)(nil)).Elem()
}

func (o GetDescribeDataEngineDataEngineTagListArrayOutput) ToGetDescribeDataEngineDataEngineTagListArrayOutput() GetDescribeDataEngineDataEngineTagListArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineTagListArrayOutput) ToGetDescribeDataEngineDataEngineTagListArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineDataEngineTagListArrayOutput {
	return o
}

func (o GetDescribeDataEngineDataEngineTagListArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEngineDataEngineTagListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEngineDataEngineTagList {
		return vs[0].([]GetDescribeDataEngineDataEngineTagList)[vs[1].(int)]
	}).(GetDescribeDataEngineDataEngineTagListOutput)
}

type GetDescribeDataEngineEventsEvent struct {
	// Cluster information.
	ClusterInfos []string `pulumi:"clusterInfos"`
	// Event action.
	EventsActions []string `pulumi:"eventsActions"`
	// Event time.
	Times []string `pulumi:"times"`
}

// GetDescribeDataEngineEventsEventInput is an input type that accepts GetDescribeDataEngineEventsEventArgs and GetDescribeDataEngineEventsEventOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineEventsEventInput` via:
//
//	GetDescribeDataEngineEventsEventArgs{...}
type GetDescribeDataEngineEventsEventInput interface {
	pulumi.Input

	ToGetDescribeDataEngineEventsEventOutput() GetDescribeDataEngineEventsEventOutput
	ToGetDescribeDataEngineEventsEventOutputWithContext(context.Context) GetDescribeDataEngineEventsEventOutput
}

type GetDescribeDataEngineEventsEventArgs struct {
	// Cluster information.
	ClusterInfos pulumi.StringArrayInput `pulumi:"clusterInfos"`
	// Event action.
	EventsActions pulumi.StringArrayInput `pulumi:"eventsActions"`
	// Event time.
	Times pulumi.StringArrayInput `pulumi:"times"`
}

func (GetDescribeDataEngineEventsEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineEventsEvent)(nil)).Elem()
}

func (i GetDescribeDataEngineEventsEventArgs) ToGetDescribeDataEngineEventsEventOutput() GetDescribeDataEngineEventsEventOutput {
	return i.ToGetDescribeDataEngineEventsEventOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineEventsEventArgs) ToGetDescribeDataEngineEventsEventOutputWithContext(ctx context.Context) GetDescribeDataEngineEventsEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineEventsEventOutput)
}

// GetDescribeDataEngineEventsEventArrayInput is an input type that accepts GetDescribeDataEngineEventsEventArray and GetDescribeDataEngineEventsEventArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineEventsEventArrayInput` via:
//
//	GetDescribeDataEngineEventsEventArray{ GetDescribeDataEngineEventsEventArgs{...} }
type GetDescribeDataEngineEventsEventArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEngineEventsEventArrayOutput() GetDescribeDataEngineEventsEventArrayOutput
	ToGetDescribeDataEngineEventsEventArrayOutputWithContext(context.Context) GetDescribeDataEngineEventsEventArrayOutput
}

type GetDescribeDataEngineEventsEventArray []GetDescribeDataEngineEventsEventInput

func (GetDescribeDataEngineEventsEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineEventsEvent)(nil)).Elem()
}

func (i GetDescribeDataEngineEventsEventArray) ToGetDescribeDataEngineEventsEventArrayOutput() GetDescribeDataEngineEventsEventArrayOutput {
	return i.ToGetDescribeDataEngineEventsEventArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineEventsEventArray) ToGetDescribeDataEngineEventsEventArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineEventsEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineEventsEventArrayOutput)
}

type GetDescribeDataEngineEventsEventOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineEventsEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineEventsEvent)(nil)).Elem()
}

func (o GetDescribeDataEngineEventsEventOutput) ToGetDescribeDataEngineEventsEventOutput() GetDescribeDataEngineEventsEventOutput {
	return o
}

func (o GetDescribeDataEngineEventsEventOutput) ToGetDescribeDataEngineEventsEventOutputWithContext(ctx context.Context) GetDescribeDataEngineEventsEventOutput {
	return o
}

// Cluster information.
func (o GetDescribeDataEngineEventsEventOutput) ClusterInfos() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineEventsEvent) []string { return v.ClusterInfos }).(pulumi.StringArrayOutput)
}

// Event action.
func (o GetDescribeDataEngineEventsEventOutput) EventsActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineEventsEvent) []string { return v.EventsActions }).(pulumi.StringArrayOutput)
}

// Event time.
func (o GetDescribeDataEngineEventsEventOutput) Times() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineEventsEvent) []string { return v.Times }).(pulumi.StringArrayOutput)
}

type GetDescribeDataEngineEventsEventArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineEventsEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineEventsEvent)(nil)).Elem()
}

func (o GetDescribeDataEngineEventsEventArrayOutput) ToGetDescribeDataEngineEventsEventArrayOutput() GetDescribeDataEngineEventsEventArrayOutput {
	return o
}

func (o GetDescribeDataEngineEventsEventArrayOutput) ToGetDescribeDataEngineEventsEventArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineEventsEventArrayOutput {
	return o
}

func (o GetDescribeDataEngineEventsEventArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEngineEventsEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEngineEventsEvent {
		return vs[0].([]GetDescribeDataEngineEventsEvent)[vs[1].(int)]
	}).(GetDescribeDataEngineEventsEventOutput)
}

type GetDescribeDataEngineImageVersionsImageParentVersion struct {
	// Image major version description.
	Description string `pulumi:"description"`
	// Engine type only support: SparkSQL/PrestoSQL/SparkBatch.
	EngineType string `pulumi:"engineType"`
	// Engine major version name.
	ImageVersion string `pulumi:"imageVersion"`
	// Engine major version id.
	ImageVersionId string `pulumi:"imageVersionId"`
	// Create time.
	InsertTime string `pulumi:"insertTime"`
	// Whether it is a public version, only support: 1: public;/2: private.
	IsPublic int `pulumi:"isPublic"`
	// Is shared engine, only support: 1:yes/2:no.
	IsSharedEngine int `pulumi:"isSharedEngine"`
	// Version status, only support: 1: initialized/2: online/3: offline.
	State int `pulumi:"state"`
	// Update time.
	UpdateTime string `pulumi:"updateTime"`
}

// GetDescribeDataEngineImageVersionsImageParentVersionInput is an input type that accepts GetDescribeDataEngineImageVersionsImageParentVersionArgs and GetDescribeDataEngineImageVersionsImageParentVersionOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineImageVersionsImageParentVersionInput` via:
//
//	GetDescribeDataEngineImageVersionsImageParentVersionArgs{...}
type GetDescribeDataEngineImageVersionsImageParentVersionInput interface {
	pulumi.Input

	ToGetDescribeDataEngineImageVersionsImageParentVersionOutput() GetDescribeDataEngineImageVersionsImageParentVersionOutput
	ToGetDescribeDataEngineImageVersionsImageParentVersionOutputWithContext(context.Context) GetDescribeDataEngineImageVersionsImageParentVersionOutput
}

type GetDescribeDataEngineImageVersionsImageParentVersionArgs struct {
	// Image major version description.
	Description pulumi.StringInput `pulumi:"description"`
	// Engine type only support: SparkSQL/PrestoSQL/SparkBatch.
	EngineType pulumi.StringInput `pulumi:"engineType"`
	// Engine major version name.
	ImageVersion pulumi.StringInput `pulumi:"imageVersion"`
	// Engine major version id.
	ImageVersionId pulumi.StringInput `pulumi:"imageVersionId"`
	// Create time.
	InsertTime pulumi.StringInput `pulumi:"insertTime"`
	// Whether it is a public version, only support: 1: public;/2: private.
	IsPublic pulumi.IntInput `pulumi:"isPublic"`
	// Is shared engine, only support: 1:yes/2:no.
	IsSharedEngine pulumi.IntInput `pulumi:"isSharedEngine"`
	// Version status, only support: 1: initialized/2: online/3: offline.
	State pulumi.IntInput `pulumi:"state"`
	// Update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetDescribeDataEngineImageVersionsImageParentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineImageVersionsImageParentVersion)(nil)).Elem()
}

func (i GetDescribeDataEngineImageVersionsImageParentVersionArgs) ToGetDescribeDataEngineImageVersionsImageParentVersionOutput() GetDescribeDataEngineImageVersionsImageParentVersionOutput {
	return i.ToGetDescribeDataEngineImageVersionsImageParentVersionOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineImageVersionsImageParentVersionArgs) ToGetDescribeDataEngineImageVersionsImageParentVersionOutputWithContext(ctx context.Context) GetDescribeDataEngineImageVersionsImageParentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineImageVersionsImageParentVersionOutput)
}

// GetDescribeDataEngineImageVersionsImageParentVersionArrayInput is an input type that accepts GetDescribeDataEngineImageVersionsImageParentVersionArray and GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEngineImageVersionsImageParentVersionArrayInput` via:
//
//	GetDescribeDataEngineImageVersionsImageParentVersionArray{ GetDescribeDataEngineImageVersionsImageParentVersionArgs{...} }
type GetDescribeDataEngineImageVersionsImageParentVersionArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEngineImageVersionsImageParentVersionArrayOutput() GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput
	ToGetDescribeDataEngineImageVersionsImageParentVersionArrayOutputWithContext(context.Context) GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput
}

type GetDescribeDataEngineImageVersionsImageParentVersionArray []GetDescribeDataEngineImageVersionsImageParentVersionInput

func (GetDescribeDataEngineImageVersionsImageParentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineImageVersionsImageParentVersion)(nil)).Elem()
}

func (i GetDescribeDataEngineImageVersionsImageParentVersionArray) ToGetDescribeDataEngineImageVersionsImageParentVersionArrayOutput() GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput {
	return i.ToGetDescribeDataEngineImageVersionsImageParentVersionArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEngineImageVersionsImageParentVersionArray) ToGetDescribeDataEngineImageVersionsImageParentVersionArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput)
}

type GetDescribeDataEngineImageVersionsImageParentVersionOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineImageVersionsImageParentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineImageVersionsImageParentVersion)(nil)).Elem()
}

func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) ToGetDescribeDataEngineImageVersionsImageParentVersionOutput() GetDescribeDataEngineImageVersionsImageParentVersionOutput {
	return o
}

func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) ToGetDescribeDataEngineImageVersionsImageParentVersionOutputWithContext(ctx context.Context) GetDescribeDataEngineImageVersionsImageParentVersionOutput {
	return o
}

// Image major version description.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) string { return v.Description }).(pulumi.StringOutput)
}

// Engine type only support: SparkSQL/PrestoSQL/SparkBatch.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) string { return v.EngineType }).(pulumi.StringOutput)
}

// Engine major version name.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) string { return v.ImageVersion }).(pulumi.StringOutput)
}

// Engine major version id.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) ImageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) string { return v.ImageVersionId }).(pulumi.StringOutput)
}

// Create time.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) InsertTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) string { return v.InsertTime }).(pulumi.StringOutput)
}

// Whether it is a public version, only support: 1: public;/2: private.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) IsPublic() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) int { return v.IsPublic }).(pulumi.IntOutput)
}

// Is shared engine, only support: 1:yes/2:no.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) IsSharedEngine() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) int { return v.IsSharedEngine }).(pulumi.IntOutput)
}

// Version status, only support: 1: initialized/2: online/3: offline.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) State() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) int { return v.State }).(pulumi.IntOutput)
}

// Update time.
func (o GetDescribeDataEngineImageVersionsImageParentVersionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineImageVersionsImageParentVersion) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEngineImageVersionsImageParentVersion)(nil)).Elem()
}

func (o GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput) ToGetDescribeDataEngineImageVersionsImageParentVersionArrayOutput() GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput {
	return o
}

func (o GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput) ToGetDescribeDataEngineImageVersionsImageParentVersionArrayOutputWithContext(ctx context.Context) GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput {
	return o
}

func (o GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEngineImageVersionsImageParentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEngineImageVersionsImageParentVersion {
		return vs[0].([]GetDescribeDataEngineImageVersionsImageParentVersion)[vs[1].(int)]
	}).(GetDescribeDataEngineImageVersionsImageParentVersionOutput)
}

type GetDescribeDataEnginePythonSparkImagesPythonSparkImage struct {
	// Engine Image version id.
	ChildImageVersionId string `pulumi:"childImageVersionId"`
	// Spark image create time.
	CreateTime string `pulumi:"createTime"`
	// Spark image description information.
	Description string `pulumi:"description"`
	// Spark image unique id.
	SparkImageId string `pulumi:"sparkImageId"`
	// Spark image name.
	SparkImageVersion string `pulumi:"sparkImageVersion"`
	// Spark image update time.
	UpdateTime string `pulumi:"updateTime"`
}

// GetDescribeDataEnginePythonSparkImagesPythonSparkImageInput is an input type that accepts GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs and GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput values.
// You can construct a concrete instance of `GetDescribeDataEnginePythonSparkImagesPythonSparkImageInput` via:
//
//	GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs{...}
type GetDescribeDataEnginePythonSparkImagesPythonSparkImageInput interface {
	pulumi.Input

	ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput() GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput
	ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageOutputWithContext(context.Context) GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput
}

type GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs struct {
	// Engine Image version id.
	ChildImageVersionId pulumi.StringInput `pulumi:"childImageVersionId"`
	// Spark image create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Spark image description information.
	Description pulumi.StringInput `pulumi:"description"`
	// Spark image unique id.
	SparkImageId pulumi.StringInput `pulumi:"sparkImageId"`
	// Spark image name.
	SparkImageVersion pulumi.StringInput `pulumi:"sparkImageVersion"`
	// Spark image update time.
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEnginePythonSparkImagesPythonSparkImage)(nil)).Elem()
}

func (i GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput() GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput {
	return i.ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageOutputWithContext(context.Background())
}

func (i GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageOutputWithContext(ctx context.Context) GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput)
}

// GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayInput is an input type that accepts GetDescribeDataEnginePythonSparkImagesPythonSparkImageArray and GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput values.
// You can construct a concrete instance of `GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayInput` via:
//
//	GetDescribeDataEnginePythonSparkImagesPythonSparkImageArray{ GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs{...} }
type GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayInput interface {
	pulumi.Input

	ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput() GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput
	ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutputWithContext(context.Context) GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput
}

type GetDescribeDataEnginePythonSparkImagesPythonSparkImageArray []GetDescribeDataEnginePythonSparkImagesPythonSparkImageInput

func (GetDescribeDataEnginePythonSparkImagesPythonSparkImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEnginePythonSparkImagesPythonSparkImage)(nil)).Elem()
}

func (i GetDescribeDataEnginePythonSparkImagesPythonSparkImageArray) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput() GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput {
	return i.ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutputWithContext(context.Background())
}

func (i GetDescribeDataEnginePythonSparkImagesPythonSparkImageArray) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutputWithContext(ctx context.Context) GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput)
}

type GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEnginePythonSparkImagesPythonSparkImage)(nil)).Elem()
}

func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput() GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput {
	return o
}

func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageOutputWithContext(ctx context.Context) GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput {
	return o
}

// Engine Image version id.
func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) ChildImageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEnginePythonSparkImagesPythonSparkImage) string { return v.ChildImageVersionId }).(pulumi.StringOutput)
}

// Spark image create time.
func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEnginePythonSparkImagesPythonSparkImage) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Spark image description information.
func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEnginePythonSparkImagesPythonSparkImage) string { return v.Description }).(pulumi.StringOutput)
}

// Spark image unique id.
func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) SparkImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEnginePythonSparkImagesPythonSparkImage) string { return v.SparkImageId }).(pulumi.StringOutput)
}

// Spark image name.
func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) SparkImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEnginePythonSparkImagesPythonSparkImage) string { return v.SparkImageVersion }).(pulumi.StringOutput)
}

// Spark image update time.
func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEnginePythonSparkImagesPythonSparkImage) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeDataEnginePythonSparkImagesPythonSparkImage)(nil)).Elem()
}

func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput() GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput {
	return o
}

func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput) ToGetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutputWithContext(ctx context.Context) GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput {
	return o
}

func (o GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput) Index(i pulumi.IntInput) GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeDataEnginePythonSparkImagesPythonSparkImage {
		return vs[0].([]GetDescribeDataEnginePythonSparkImagesPythonSparkImage)[vs[1].(int)]
	}).(GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput)
}

type GetDescribeUpdatableDataEnginesDataEngineBasicInfo struct {
	// User unique ID.
	AppId int `pulumi:"appId"`
	// Create time.
	CreateTime int `pulumi:"createTime"`
	// Engine unique id.
	DataEngineId string `pulumi:"dataEngineId"`
	// Engine name.
	DataEngineName string `pulumi:"dataEngineName"`
	// Engine type, valid values: PrestoSQL/SparkSQL/SparkBatch.
	DataEngineType string `pulumi:"dataEngineType"`
	// Returned messages.
	Message string `pulumi:"message"`
	// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
	State int `pulumi:"state"`
	// Update time.
	UpdateTime int `pulumi:"updateTime"`
	// User unique uin.
	UserUin string `pulumi:"userUin"`
}

// GetDescribeUpdatableDataEnginesDataEngineBasicInfoInput is an input type that accepts GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs and GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput values.
// You can construct a concrete instance of `GetDescribeUpdatableDataEnginesDataEngineBasicInfoInput` via:
//
//	GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs{...}
type GetDescribeUpdatableDataEnginesDataEngineBasicInfoInput interface {
	pulumi.Input

	ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput() GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput
	ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoOutputWithContext(context.Context) GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput
}

type GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs struct {
	// User unique ID.
	AppId pulumi.IntInput `pulumi:"appId"`
	// Create time.
	CreateTime pulumi.IntInput `pulumi:"createTime"`
	// Engine unique id.
	DataEngineId pulumi.StringInput `pulumi:"dataEngineId"`
	// Engine name.
	DataEngineName pulumi.StringInput `pulumi:"dataEngineName"`
	// Engine type, valid values: PrestoSQL/SparkSQL/SparkBatch.
	DataEngineType pulumi.StringInput `pulumi:"dataEngineType"`
	// Returned messages.
	Message pulumi.StringInput `pulumi:"message"`
	// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
	State pulumi.IntInput `pulumi:"state"`
	// Update time.
	UpdateTime pulumi.IntInput `pulumi:"updateTime"`
	// User unique uin.
	UserUin pulumi.StringInput `pulumi:"userUin"`
}

func (GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUpdatableDataEnginesDataEngineBasicInfo)(nil)).Elem()
}

func (i GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput() GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput {
	return i.ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoOutputWithContext(context.Background())
}

func (i GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoOutputWithContext(ctx context.Context) GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput)
}

// GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayInput is an input type that accepts GetDescribeUpdatableDataEnginesDataEngineBasicInfoArray and GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayInput` via:
//
//	GetDescribeUpdatableDataEnginesDataEngineBasicInfoArray{ GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs{...} }
type GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput() GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput
	ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutputWithContext(context.Context) GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput
}

type GetDescribeUpdatableDataEnginesDataEngineBasicInfoArray []GetDescribeUpdatableDataEnginesDataEngineBasicInfoInput

func (GetDescribeUpdatableDataEnginesDataEngineBasicInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUpdatableDataEnginesDataEngineBasicInfo)(nil)).Elem()
}

func (i GetDescribeUpdatableDataEnginesDataEngineBasicInfoArray) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput() GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput {
	return i.ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeUpdatableDataEnginesDataEngineBasicInfoArray) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutputWithContext(ctx context.Context) GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput)
}

type GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUpdatableDataEnginesDataEngineBasicInfo)(nil)).Elem()
}

func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput() GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput {
	return o
}

func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoOutputWithContext(ctx context.Context) GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput {
	return o
}

// User unique ID.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) int { return v.AppId }).(pulumi.IntOutput)
}

// Create time.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) CreateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) int { return v.CreateTime }).(pulumi.IntOutput)
}

// Engine unique id.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) DataEngineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) string { return v.DataEngineId }).(pulumi.StringOutput)
}

// Engine name.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) DataEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) string { return v.DataEngineName }).(pulumi.StringOutput)
}

// Engine type, valid values: PrestoSQL/SparkSQL/SparkBatch.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) DataEngineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) string { return v.DataEngineType }).(pulumi.StringOutput)
}

// Returned messages.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) string { return v.Message }).(pulumi.StringOutput)
}

// Engine state, only support: 0:Init/-1:Failed/-2:Deleted/1:Pause/2:Running/3:ToBeDelete/4:Deleting.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) State() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) int { return v.State }).(pulumi.IntOutput)
}

// Update time.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) UpdateTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) int { return v.UpdateTime }).(pulumi.IntOutput)
}

// User unique uin.
func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput) UserUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUpdatableDataEnginesDataEngineBasicInfo) string { return v.UserUin }).(pulumi.StringOutput)
}

type GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUpdatableDataEnginesDataEngineBasicInfo)(nil)).Elem()
}

func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput() GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput {
	return o
}

func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput) ToGetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutputWithContext(ctx context.Context) GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput {
	return o
}

func (o GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUpdatableDataEnginesDataEngineBasicInfo {
		return vs[0].([]GetDescribeUpdatableDataEnginesDataEngineBasicInfo)[vs[1].(int)]
	}).(GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput)
}

type GetDescribeUserInfoFilter struct {
	// Attribute name. If there are multiple Filters, the relationship between Filters is a logical OR (OR) relationship.
	Name string `pulumi:"name"`
	// Attribute value, if there are multiple Values in the same filter, the relationship between values under the same filter is a logical OR relationship.
	Values []string `pulumi:"values"`
}

// GetDescribeUserInfoFilterInput is an input type that accepts GetDescribeUserInfoFilterArgs and GetDescribeUserInfoFilterOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoFilterInput` via:
//
//	GetDescribeUserInfoFilterArgs{...}
type GetDescribeUserInfoFilterInput interface {
	pulumi.Input

	ToGetDescribeUserInfoFilterOutput() GetDescribeUserInfoFilterOutput
	ToGetDescribeUserInfoFilterOutputWithContext(context.Context) GetDescribeUserInfoFilterOutput
}

type GetDescribeUserInfoFilterArgs struct {
	// Attribute name. If there are multiple Filters, the relationship between Filters is a logical OR (OR) relationship.
	Name pulumi.StringInput `pulumi:"name"`
	// Attribute value, if there are multiple Values in the same filter, the relationship between values under the same filter is a logical OR relationship.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDescribeUserInfoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoFilter)(nil)).Elem()
}

func (i GetDescribeUserInfoFilterArgs) ToGetDescribeUserInfoFilterOutput() GetDescribeUserInfoFilterOutput {
	return i.ToGetDescribeUserInfoFilterOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoFilterArgs) ToGetDescribeUserInfoFilterOutputWithContext(ctx context.Context) GetDescribeUserInfoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoFilterOutput)
}

// GetDescribeUserInfoFilterArrayInput is an input type that accepts GetDescribeUserInfoFilterArray and GetDescribeUserInfoFilterArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoFilterArrayInput` via:
//
//	GetDescribeUserInfoFilterArray{ GetDescribeUserInfoFilterArgs{...} }
type GetDescribeUserInfoFilterArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoFilterArrayOutput() GetDescribeUserInfoFilterArrayOutput
	ToGetDescribeUserInfoFilterArrayOutputWithContext(context.Context) GetDescribeUserInfoFilterArrayOutput
}

type GetDescribeUserInfoFilterArray []GetDescribeUserInfoFilterInput

func (GetDescribeUserInfoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoFilter)(nil)).Elem()
}

func (i GetDescribeUserInfoFilterArray) ToGetDescribeUserInfoFilterArrayOutput() GetDescribeUserInfoFilterArrayOutput {
	return i.ToGetDescribeUserInfoFilterArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoFilterArray) ToGetDescribeUserInfoFilterArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoFilterArrayOutput)
}

type GetDescribeUserInfoFilterOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoFilter)(nil)).Elem()
}

func (o GetDescribeUserInfoFilterOutput) ToGetDescribeUserInfoFilterOutput() GetDescribeUserInfoFilterOutput {
	return o
}

func (o GetDescribeUserInfoFilterOutput) ToGetDescribeUserInfoFilterOutputWithContext(ctx context.Context) GetDescribeUserInfoFilterOutput {
	return o
}

// Attribute name. If there are multiple Filters, the relationship between Filters is a logical OR (OR) relationship.
func (o GetDescribeUserInfoFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Attribute value, if there are multiple Values in the same filter, the relationship between values under the same filter is a logical OR relationship.
func (o GetDescribeUserInfoFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDescribeUserInfoFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoFilter)(nil)).Elem()
}

func (o GetDescribeUserInfoFilterArrayOutput) ToGetDescribeUserInfoFilterArrayOutput() GetDescribeUserInfoFilterArrayOutput {
	return o
}

func (o GetDescribeUserInfoFilterArrayOutput) ToGetDescribeUserInfoFilterArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoFilterArrayOutput {
	return o
}

func (o GetDescribeUserInfoFilterArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoFilter {
		return vs[0].([]GetDescribeUserInfoFilter)[vs[1].(int)]
	}).(GetDescribeUserInfoFilterOutput)
}

type GetDescribeUserInfoUserInfo struct {
	// Data permission information collection.
	DataPolicyInfos []GetDescribeUserInfoUserInfoDataPolicyInfo `pulumi:"dataPolicyInfos"`
	// Engine permission collection.
	EnginePolicyInfos []GetDescribeUserInfoUserInfoEnginePolicyInfo `pulumi:"enginePolicyInfos"`
	// Row filter collection.
	RowFilterInfos []GetDescribeUserInfoUserInfoRowFilterInfo `pulumi:"rowFilterInfos"`
	// Query information type, Group: work group DataAuth: data permission EngineAuth: engine permission.
	Type string `pulumi:"type"`
	// User alias.
	UserAlias string `pulumi:"userAlias"`
	// User description.
	UserDescription string `pulumi:"userDescription"`
	// User id, the same as the sub-user uin.
	UserId string `pulumi:"userId"`
	// User type: ADMIN: Administrator COMMON: General user.
	UserType string `pulumi:"userType"`
	// Workgroup collection information bound to this user.
	WorkGroupInfos []GetDescribeUserInfoUserInfoWorkGroupInfo `pulumi:"workGroupInfos"`
}

// GetDescribeUserInfoUserInfoInput is an input type that accepts GetDescribeUserInfoUserInfoArgs and GetDescribeUserInfoUserInfoOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoInput` via:
//
//	GetDescribeUserInfoUserInfoArgs{...}
type GetDescribeUserInfoUserInfoInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoOutput() GetDescribeUserInfoUserInfoOutput
	ToGetDescribeUserInfoUserInfoOutputWithContext(context.Context) GetDescribeUserInfoUserInfoOutput
}

type GetDescribeUserInfoUserInfoArgs struct {
	// Data permission information collection.
	DataPolicyInfos GetDescribeUserInfoUserInfoDataPolicyInfoArrayInput `pulumi:"dataPolicyInfos"`
	// Engine permission collection.
	EnginePolicyInfos GetDescribeUserInfoUserInfoEnginePolicyInfoArrayInput `pulumi:"enginePolicyInfos"`
	// Row filter collection.
	RowFilterInfos GetDescribeUserInfoUserInfoRowFilterInfoArrayInput `pulumi:"rowFilterInfos"`
	// Query information type, Group: work group DataAuth: data permission EngineAuth: engine permission.
	Type pulumi.StringInput `pulumi:"type"`
	// User alias.
	UserAlias pulumi.StringInput `pulumi:"userAlias"`
	// User description.
	UserDescription pulumi.StringInput `pulumi:"userDescription"`
	// User id, the same as the sub-user uin.
	UserId pulumi.StringInput `pulumi:"userId"`
	// User type: ADMIN: Administrator COMMON: General user.
	UserType pulumi.StringInput `pulumi:"userType"`
	// Workgroup collection information bound to this user.
	WorkGroupInfos GetDescribeUserInfoUserInfoWorkGroupInfoArrayInput `pulumi:"workGroupInfos"`
}

func (GetDescribeUserInfoUserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoArgs) ToGetDescribeUserInfoUserInfoOutput() GetDescribeUserInfoUserInfoOutput {
	return i.ToGetDescribeUserInfoUserInfoOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoArgs) ToGetDescribeUserInfoUserInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoOutput)
}

// GetDescribeUserInfoUserInfoArrayInput is an input type that accepts GetDescribeUserInfoUserInfoArray and GetDescribeUserInfoUserInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoArrayInput` via:
//
//	GetDescribeUserInfoUserInfoArray{ GetDescribeUserInfoUserInfoArgs{...} }
type GetDescribeUserInfoUserInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoArrayOutput() GetDescribeUserInfoUserInfoArrayOutput
	ToGetDescribeUserInfoUserInfoArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoArrayOutput
}

type GetDescribeUserInfoUserInfoArray []GetDescribeUserInfoUserInfoInput

func (GetDescribeUserInfoUserInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoArray) ToGetDescribeUserInfoUserInfoArrayOutput() GetDescribeUserInfoUserInfoArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoArray) ToGetDescribeUserInfoUserInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoArrayOutput)
}

type GetDescribeUserInfoUserInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoOutput) ToGetDescribeUserInfoUserInfoOutput() GetDescribeUserInfoUserInfoOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoOutput) ToGetDescribeUserInfoUserInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoOutput {
	return o
}

// Data permission information collection.
func (o GetDescribeUserInfoUserInfoOutput) DataPolicyInfos() GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) []GetDescribeUserInfoUserInfoDataPolicyInfo {
		return v.DataPolicyInfos
	}).(GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput)
}

// Engine permission collection.
func (o GetDescribeUserInfoUserInfoOutput) EnginePolicyInfos() GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) []GetDescribeUserInfoUserInfoEnginePolicyInfo {
		return v.EnginePolicyInfos
	}).(GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput)
}

// Row filter collection.
func (o GetDescribeUserInfoUserInfoOutput) RowFilterInfos() GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) []GetDescribeUserInfoUserInfoRowFilterInfo {
		return v.RowFilterInfos
	}).(GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput)
}

// Query information type, Group: work group DataAuth: data permission EngineAuth: engine permission.
func (o GetDescribeUserInfoUserInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) string { return v.Type }).(pulumi.StringOutput)
}

// User alias.
func (o GetDescribeUserInfoUserInfoOutput) UserAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) string { return v.UserAlias }).(pulumi.StringOutput)
}

// User description.
func (o GetDescribeUserInfoUserInfoOutput) UserDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) string { return v.UserDescription }).(pulumi.StringOutput)
}

// User id, the same as the sub-user uin.
func (o GetDescribeUserInfoUserInfoOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) string { return v.UserId }).(pulumi.StringOutput)
}

// User type: ADMIN: Administrator COMMON: General user.
func (o GetDescribeUserInfoUserInfoOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) string { return v.UserType }).(pulumi.StringOutput)
}

// Workgroup collection information bound to this user.
func (o GetDescribeUserInfoUserInfoOutput) WorkGroupInfos() GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfo) []GetDescribeUserInfoUserInfoWorkGroupInfo {
		return v.WorkGroupInfos
	}).(GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput)
}

type GetDescribeUserInfoUserInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoArrayOutput) ToGetDescribeUserInfoUserInfoArrayOutput() GetDescribeUserInfoUserInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoArrayOutput) ToGetDescribeUserInfoUserInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfo {
		return vs[0].([]GetDescribeUserInfoUserInfo)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoOutput)
}

type GetDescribeUserInfoUserInfoDataPolicyInfo struct {
	// Policy set.
	PolicySets []GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet `pulumi:"policySets"`
	// Total count.
	TotalCount int `pulumi:"totalCount"`
}

// GetDescribeUserInfoUserInfoDataPolicyInfoInput is an input type that accepts GetDescribeUserInfoUserInfoDataPolicyInfoArgs and GetDescribeUserInfoUserInfoDataPolicyInfoOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoDataPolicyInfoInput` via:
//
//	GetDescribeUserInfoUserInfoDataPolicyInfoArgs{...}
type GetDescribeUserInfoUserInfoDataPolicyInfoInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoDataPolicyInfoOutput() GetDescribeUserInfoUserInfoDataPolicyInfoOutput
	ToGetDescribeUserInfoUserInfoDataPolicyInfoOutputWithContext(context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoOutput
}

type GetDescribeUserInfoUserInfoDataPolicyInfoArgs struct {
	// Policy set.
	PolicySets GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayInput `pulumi:"policySets"`
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetDescribeUserInfoUserInfoDataPolicyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoArgs) ToGetDescribeUserInfoUserInfoDataPolicyInfoOutput() GetDescribeUserInfoUserInfoDataPolicyInfoOutput {
	return i.ToGetDescribeUserInfoUserInfoDataPolicyInfoOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoArgs) ToGetDescribeUserInfoUserInfoDataPolicyInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoDataPolicyInfoOutput)
}

// GetDescribeUserInfoUserInfoDataPolicyInfoArrayInput is an input type that accepts GetDescribeUserInfoUserInfoDataPolicyInfoArray and GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoDataPolicyInfoArrayInput` via:
//
//	GetDescribeUserInfoUserInfoDataPolicyInfoArray{ GetDescribeUserInfoUserInfoDataPolicyInfoArgs{...} }
type GetDescribeUserInfoUserInfoDataPolicyInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput() GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput
	ToGetDescribeUserInfoUserInfoDataPolicyInfoArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput
}

type GetDescribeUserInfoUserInfoDataPolicyInfoArray []GetDescribeUserInfoUserInfoDataPolicyInfoInput

func (GetDescribeUserInfoUserInfoDataPolicyInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoDataPolicyInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoArray) ToGetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput() GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoDataPolicyInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoArray) ToGetDescribeUserInfoUserInfoDataPolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput)
}

type GetDescribeUserInfoUserInfoDataPolicyInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoDataPolicyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoOutput() GetDescribeUserInfoUserInfoDataPolicyInfoOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoOutput {
	return o
}

// Policy set.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoOutput) PolicySets() GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfo) []GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet {
		return v.PolicySets
	}).(GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput)
}

// Total count.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoDataPolicyInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput() GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoDataPolicyInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoDataPolicyInfo {
		return vs[0].([]GetDescribeUserInfoUserInfoDataPolicyInfo)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoDataPolicyInfoOutput)
}

type GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog string `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column string `pulumi:"column"`
	// The time the workgroup was created.
	CreateTime string `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine string `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database string `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function string `pulumi:"function"`
	// Policy id.
	Id int `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode string `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation string `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator string `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType string `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth bool `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source string `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId int `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName string `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table string `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View string `pulumi:"view"`
}

// GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetInput is an input type that accepts GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs and GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetInput` via:
//
//	GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs{...}
type GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput() GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput
	ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutputWithContext(context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput
}

type GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column pulumi.StringInput `pulumi:"column"`
	// The time the workgroup was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine pulumi.StringInput `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database pulumi.StringInput `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function pulumi.StringInput `pulumi:"function"`
	// Policy id.
	Id pulumi.IntInput `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth pulumi.BoolInput `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source pulumi.StringInput `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId pulumi.IntInput `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table pulumi.StringInput `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View pulumi.StringInput `pulumi:"view"`
}

func (GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput() GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput {
	return i.ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput)
}

// GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayInput is an input type that accepts GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArray and GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayInput` via:
//
//	GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArray{ GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs{...} }
type GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput
	ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput
}

type GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArray []GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetInput

func (GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArray) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArray) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput)
}

type GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput() GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput {
	return o
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Column }).(pulumi.StringOutput)
}

// The time the workgroup was created.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) DataEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.DataEngine }).(pulumi.StringOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Function }).(pulumi.StringOutput)
}

// Policy id.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) int { return v.Id }).(pulumi.IntOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Mode }).(pulumi.StringOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

// Operator, do not fill in the input parameters.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Operator }).(pulumi.StringOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) ReAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) bool { return v.ReAuth }).(pulumi.BoolOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Source }).(pulumi.StringOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) SourceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) int { return v.SourceId }).(pulumi.IntOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.SourceName }).(pulumi.StringOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput) View() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet) string { return v.View }).(pulumi.StringOutput)
}

type GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput) ToGetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet {
		return vs[0].([]GetDescribeUserInfoUserInfoDataPolicyInfoPolicySet)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput)
}

type GetDescribeUserInfoUserInfoEnginePolicyInfo struct {
	// Policy set.
	PolicySets []GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet `pulumi:"policySets"`
	// Total count.
	TotalCount int `pulumi:"totalCount"`
}

// GetDescribeUserInfoUserInfoEnginePolicyInfoInput is an input type that accepts GetDescribeUserInfoUserInfoEnginePolicyInfoArgs and GetDescribeUserInfoUserInfoEnginePolicyInfoOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoEnginePolicyInfoInput` via:
//
//	GetDescribeUserInfoUserInfoEnginePolicyInfoArgs{...}
type GetDescribeUserInfoUserInfoEnginePolicyInfoInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoEnginePolicyInfoOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoOutput
	ToGetDescribeUserInfoUserInfoEnginePolicyInfoOutputWithContext(context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoOutput
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoArgs struct {
	// Policy set.
	PolicySets GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayInput `pulumi:"policySets"`
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetDescribeUserInfoUserInfoEnginePolicyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoArgs) ToGetDescribeUserInfoUserInfoEnginePolicyInfoOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoOutput {
	return i.ToGetDescribeUserInfoUserInfoEnginePolicyInfoOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoArgs) ToGetDescribeUserInfoUserInfoEnginePolicyInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoEnginePolicyInfoOutput)
}

// GetDescribeUserInfoUserInfoEnginePolicyInfoArrayInput is an input type that accepts GetDescribeUserInfoUserInfoEnginePolicyInfoArray and GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoEnginePolicyInfoArrayInput` via:
//
//	GetDescribeUserInfoUserInfoEnginePolicyInfoArray{ GetDescribeUserInfoUserInfoEnginePolicyInfoArgs{...} }
type GetDescribeUserInfoUserInfoEnginePolicyInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput
	ToGetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoArray []GetDescribeUserInfoUserInfoEnginePolicyInfoInput

func (GetDescribeUserInfoUserInfoEnginePolicyInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoEnginePolicyInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoArray) ToGetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoArray) ToGetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput)
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoEnginePolicyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoOutput {
	return o
}

// Policy set.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoOutput) PolicySets() GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfo) []GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet {
		return v.PolicySets
	}).(GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput)
}

// Total count.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoEnginePolicyInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoEnginePolicyInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoEnginePolicyInfo {
		return vs[0].([]GetDescribeUserInfoUserInfoEnginePolicyInfo)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoEnginePolicyInfoOutput)
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog string `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column string `pulumi:"column"`
	// The time the workgroup was created.
	CreateTime string `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine string `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database string `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function string `pulumi:"function"`
	// Policy id.
	Id int `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode string `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation string `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator string `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType string `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth bool `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source string `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId int `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName string `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table string `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View string `pulumi:"view"`
}

// GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetInput is an input type that accepts GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs and GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetInput` via:
//
//	GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs{...}
type GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput
	ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutputWithContext(context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column pulumi.StringInput `pulumi:"column"`
	// The time the workgroup was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine pulumi.StringInput `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database pulumi.StringInput `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function pulumi.StringInput `pulumi:"function"`
	// Policy id.
	Id pulumi.IntInput `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth pulumi.BoolInput `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source pulumi.StringInput `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId pulumi.IntInput `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table pulumi.StringInput `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View pulumi.StringInput `pulumi:"view"`
}

func (GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput {
	return i.ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput)
}

// GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayInput is an input type that accepts GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArray and GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayInput` via:
//
//	GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArray{ GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs{...} }
type GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput
	ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArray []GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetInput

func (GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArray) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArray) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput)
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput {
	return o
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Column }).(pulumi.StringOutput)
}

// The time the workgroup was created.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) DataEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.DataEngine }).(pulumi.StringOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Function }).(pulumi.StringOutput)
}

// Policy id.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) int { return v.Id }).(pulumi.IntOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Mode }).(pulumi.StringOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

// Operator, do not fill in the input parameters.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Operator }).(pulumi.StringOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) ReAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) bool { return v.ReAuth }).(pulumi.BoolOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Source }).(pulumi.StringOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) SourceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) int { return v.SourceId }).(pulumi.IntOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.SourceName }).(pulumi.StringOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput) View() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet) string { return v.View }).(pulumi.StringOutput)
}

type GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput) ToGetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet {
		return vs[0].([]GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySet)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput)
}

type GetDescribeUserInfoUserInfoRowFilterInfo struct {
	// Policy set.
	PolicySets []GetDescribeUserInfoUserInfoRowFilterInfoPolicySet `pulumi:"policySets"`
	// Total count.
	TotalCount int `pulumi:"totalCount"`
}

// GetDescribeUserInfoUserInfoRowFilterInfoInput is an input type that accepts GetDescribeUserInfoUserInfoRowFilterInfoArgs and GetDescribeUserInfoUserInfoRowFilterInfoOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoRowFilterInfoInput` via:
//
//	GetDescribeUserInfoUserInfoRowFilterInfoArgs{...}
type GetDescribeUserInfoUserInfoRowFilterInfoInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoRowFilterInfoOutput() GetDescribeUserInfoUserInfoRowFilterInfoOutput
	ToGetDescribeUserInfoUserInfoRowFilterInfoOutputWithContext(context.Context) GetDescribeUserInfoUserInfoRowFilterInfoOutput
}

type GetDescribeUserInfoUserInfoRowFilterInfoArgs struct {
	// Policy set.
	PolicySets GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayInput `pulumi:"policySets"`
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetDescribeUserInfoUserInfoRowFilterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoArgs) ToGetDescribeUserInfoUserInfoRowFilterInfoOutput() GetDescribeUserInfoUserInfoRowFilterInfoOutput {
	return i.ToGetDescribeUserInfoUserInfoRowFilterInfoOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoArgs) ToGetDescribeUserInfoUserInfoRowFilterInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoRowFilterInfoOutput)
}

// GetDescribeUserInfoUserInfoRowFilterInfoArrayInput is an input type that accepts GetDescribeUserInfoUserInfoRowFilterInfoArray and GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoRowFilterInfoArrayInput` via:
//
//	GetDescribeUserInfoUserInfoRowFilterInfoArray{ GetDescribeUserInfoUserInfoRowFilterInfoArgs{...} }
type GetDescribeUserInfoUserInfoRowFilterInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoRowFilterInfoArrayOutput() GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput
	ToGetDescribeUserInfoUserInfoRowFilterInfoArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput
}

type GetDescribeUserInfoUserInfoRowFilterInfoArray []GetDescribeUserInfoUserInfoRowFilterInfoInput

func (GetDescribeUserInfoUserInfoRowFilterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoRowFilterInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoArray) ToGetDescribeUserInfoUserInfoRowFilterInfoArrayOutput() GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoRowFilterInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoArray) ToGetDescribeUserInfoUserInfoRowFilterInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput)
}

type GetDescribeUserInfoUserInfoRowFilterInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoRowFilterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoOutput() GetDescribeUserInfoUserInfoRowFilterInfoOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoOutput {
	return o
}

// Policy set.
func (o GetDescribeUserInfoUserInfoRowFilterInfoOutput) PolicySets() GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfo) []GetDescribeUserInfoUserInfoRowFilterInfoPolicySet {
		return v.PolicySets
	}).(GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput)
}

// Total count.
func (o GetDescribeUserInfoUserInfoRowFilterInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoRowFilterInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoArrayOutput() GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoRowFilterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoRowFilterInfo {
		return vs[0].([]GetDescribeUserInfoUserInfoRowFilterInfo)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoRowFilterInfoOutput)
}

type GetDescribeUserInfoUserInfoRowFilterInfoPolicySet struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog string `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column string `pulumi:"column"`
	// The time the workgroup was created.
	CreateTime string `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine string `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database string `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function string `pulumi:"function"`
	// Policy id.
	Id int `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode string `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation string `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator string `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType string `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth bool `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source string `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId int `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName string `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table string `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View string `pulumi:"view"`
}

// GetDescribeUserInfoUserInfoRowFilterInfoPolicySetInput is an input type that accepts GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs and GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoRowFilterInfoPolicySetInput` via:
//
//	GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs{...}
type GetDescribeUserInfoUserInfoRowFilterInfoPolicySetInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput() GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput
	ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutputWithContext(context.Context) GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput
}

type GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column pulumi.StringInput `pulumi:"column"`
	// The time the workgroup was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine pulumi.StringInput `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database pulumi.StringInput `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function pulumi.StringInput `pulumi:"function"`
	// Policy id.
	Id pulumi.IntInput `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth pulumi.BoolInput `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source pulumi.StringInput `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId pulumi.IntInput `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table pulumi.StringInput `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View pulumi.StringInput `pulumi:"view"`
}

func (GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput() GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput {
	return i.ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput)
}

// GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayInput is an input type that accepts GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArray and GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayInput` via:
//
//	GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArray{ GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs{...} }
type GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput
	ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput
}

type GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArray []GetDescribeUserInfoUserInfoRowFilterInfoPolicySetInput

func (GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArray) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArray) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput)
}

type GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput() GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput {
	return o
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Column }).(pulumi.StringOutput)
}

// The time the workgroup was created.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) DataEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.DataEngine }).(pulumi.StringOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Function }).(pulumi.StringOutput)
}

// Policy id.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) int { return v.Id }).(pulumi.IntOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Mode }).(pulumi.StringOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

// Operator, do not fill in the input parameters.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Operator }).(pulumi.StringOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) ReAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) bool { return v.ReAuth }).(pulumi.BoolOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Source }).(pulumi.StringOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) SourceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) int { return v.SourceId }).(pulumi.IntOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.SourceName }).(pulumi.StringOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput) View() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoRowFilterInfoPolicySet) string { return v.View }).(pulumi.StringOutput)
}

type GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput() GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput) ToGetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoRowFilterInfoPolicySet {
		return vs[0].([]GetDescribeUserInfoUserInfoRowFilterInfoPolicySet)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput)
}

type GetDescribeUserInfoUserInfoWorkGroupInfo struct {
	// Total count.
	TotalCount int `pulumi:"totalCount"`
	// Work group set.
	WorkGroupSets []GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet `pulumi:"workGroupSets"`
}

// GetDescribeUserInfoUserInfoWorkGroupInfoInput is an input type that accepts GetDescribeUserInfoUserInfoWorkGroupInfoArgs and GetDescribeUserInfoUserInfoWorkGroupInfoOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoWorkGroupInfoInput` via:
//
//	GetDescribeUserInfoUserInfoWorkGroupInfoArgs{...}
type GetDescribeUserInfoUserInfoWorkGroupInfoInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoWorkGroupInfoOutput() GetDescribeUserInfoUserInfoWorkGroupInfoOutput
	ToGetDescribeUserInfoUserInfoWorkGroupInfoOutputWithContext(context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoOutput
}

type GetDescribeUserInfoUserInfoWorkGroupInfoArgs struct {
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
	// Work group set.
	WorkGroupSets GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayInput `pulumi:"workGroupSets"`
}

func (GetDescribeUserInfoUserInfoWorkGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoArgs) ToGetDescribeUserInfoUserInfoWorkGroupInfoOutput() GetDescribeUserInfoUserInfoWorkGroupInfoOutput {
	return i.ToGetDescribeUserInfoUserInfoWorkGroupInfoOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoArgs) ToGetDescribeUserInfoUserInfoWorkGroupInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoWorkGroupInfoOutput)
}

// GetDescribeUserInfoUserInfoWorkGroupInfoArrayInput is an input type that accepts GetDescribeUserInfoUserInfoWorkGroupInfoArray and GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoWorkGroupInfoArrayInput` via:
//
//	GetDescribeUserInfoUserInfoWorkGroupInfoArray{ GetDescribeUserInfoUserInfoWorkGroupInfoArgs{...} }
type GetDescribeUserInfoUserInfoWorkGroupInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput() GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput
	ToGetDescribeUserInfoUserInfoWorkGroupInfoArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput
}

type GetDescribeUserInfoUserInfoWorkGroupInfoArray []GetDescribeUserInfoUserInfoWorkGroupInfoInput

func (GetDescribeUserInfoUserInfoWorkGroupInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoWorkGroupInfo)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoArray) ToGetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput() GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoWorkGroupInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoArray) ToGetDescribeUserInfoUserInfoWorkGroupInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput)
}

type GetDescribeUserInfoUserInfoWorkGroupInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoWorkGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoOutput() GetDescribeUserInfoUserInfoWorkGroupInfoOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoOutput {
	return o
}

// Total count.
func (o GetDescribeUserInfoUserInfoWorkGroupInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoWorkGroupInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

// Work group set.
func (o GetDescribeUserInfoUserInfoWorkGroupInfoOutput) WorkGroupSets() GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoWorkGroupInfo) []GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet {
		return v.WorkGroupSets
	}).(GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput)
}

type GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoWorkGroupInfo)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput() GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoWorkGroupInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoWorkGroupInfo {
		return vs[0].([]GetDescribeUserInfoUserInfoWorkGroupInfo)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoWorkGroupInfoOutput)
}

type GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet struct {
	// The time the workgroup was created.
	CreateTime string `pulumi:"createTime"`
	// Creator.
	Creator string `pulumi:"creator"`
	// Work group description.
	WorkGroupDescription string `pulumi:"workGroupDescription"`
	// Work group unique id.
	WorkGroupId int `pulumi:"workGroupId"`
	// Work group name.
	WorkGroupName string `pulumi:"workGroupName"`
}

// GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetInput is an input type that accepts GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs and GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetInput` via:
//
//	GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs{...}
type GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput() GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput
	ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutputWithContext(context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput
}

type GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs struct {
	// The time the workgroup was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Creator.
	Creator pulumi.StringInput `pulumi:"creator"`
	// Work group description.
	WorkGroupDescription pulumi.StringInput `pulumi:"workGroupDescription"`
	// Work group unique id.
	WorkGroupId pulumi.IntInput `pulumi:"workGroupId"`
	// Work group name.
	WorkGroupName pulumi.StringInput `pulumi:"workGroupName"`
}

func (GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput() GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput {
	return i.ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput)
}

// GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayInput is an input type that accepts GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArray and GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayInput` via:
//
//	GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArray{ GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs{...} }
type GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayInput interface {
	pulumi.Input

	ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput() GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput
	ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutputWithContext(context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput
}

type GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArray []GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetInput

func (GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet)(nil)).Elem()
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArray) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput() GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput {
	return i.ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArray) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput)
}

type GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput() GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput {
	return o
}

// The time the workgroup was created.
func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Creator.
func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet) string { return v.Creator }).(pulumi.StringOutput)
}

// Work group description.
func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) WorkGroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet) string { return v.WorkGroupDescription }).(pulumi.StringOutput)
}

// Work group unique id.
func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) WorkGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet) int { return v.WorkGroupId }).(pulumi.IntOutput)
}

// Work group name.
func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput) WorkGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet) string { return v.WorkGroupName }).(pulumi.StringOutput)
}

type GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet)(nil)).Elem()
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput() GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput) ToGetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutputWithContext(ctx context.Context) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput {
	return o
}

func (o GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput) Index(i pulumi.IntInput) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet {
		return vs[0].([]GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSet)[vs[1].(int)]
	}).(GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput)
}

type GetDescribeUserRolesUserRole struct {
	// User app ID.
	AppId string `pulumi:"appId"`
	// Role Permissions.
	Arn string `pulumi:"arn"`
	// COS authorization path listNote: This field may return NULL, indicating that the valid value cannot be obtained.
	CosPermissionLists []GetDescribeUserRolesUserRoleCosPermissionList `pulumi:"cosPermissionLists"`
	// Creator UinNote: This field may return NULL, indicating that the valid value cannot be obtained.
	Creator string `pulumi:"creator"`
	// Character description information.
	Desc string `pulumi:"desc"`
	// Recently modify the time stamp.
	ModifyTime int `pulumi:"modifyTime"`
	// CAM strategy jsonNote: This field may return NULL, indicating that the valid value cannot be obtained.
	PermissionJson string `pulumi:"permissionJson"`
	// Character ID.
	RoleId int `pulumi:"roleId"`
	// Role NameNote: This field may return NULL, indicating that the valid value cannot be obtained.
	RoleName string `pulumi:"roleName"`
	// User ID.
	Uin string `pulumi:"uin"`
}

// GetDescribeUserRolesUserRoleInput is an input type that accepts GetDescribeUserRolesUserRoleArgs and GetDescribeUserRolesUserRoleOutput values.
// You can construct a concrete instance of `GetDescribeUserRolesUserRoleInput` via:
//
//	GetDescribeUserRolesUserRoleArgs{...}
type GetDescribeUserRolesUserRoleInput interface {
	pulumi.Input

	ToGetDescribeUserRolesUserRoleOutput() GetDescribeUserRolesUserRoleOutput
	ToGetDescribeUserRolesUserRoleOutputWithContext(context.Context) GetDescribeUserRolesUserRoleOutput
}

type GetDescribeUserRolesUserRoleArgs struct {
	// User app ID.
	AppId pulumi.StringInput `pulumi:"appId"`
	// Role Permissions.
	Arn pulumi.StringInput `pulumi:"arn"`
	// COS authorization path listNote: This field may return NULL, indicating that the valid value cannot be obtained.
	CosPermissionLists GetDescribeUserRolesUserRoleCosPermissionListArrayInput `pulumi:"cosPermissionLists"`
	// Creator UinNote: This field may return NULL, indicating that the valid value cannot be obtained.
	Creator pulumi.StringInput `pulumi:"creator"`
	// Character description information.
	Desc pulumi.StringInput `pulumi:"desc"`
	// Recently modify the time stamp.
	ModifyTime pulumi.IntInput `pulumi:"modifyTime"`
	// CAM strategy jsonNote: This field may return NULL, indicating that the valid value cannot be obtained.
	PermissionJson pulumi.StringInput `pulumi:"permissionJson"`
	// Character ID.
	RoleId pulumi.IntInput `pulumi:"roleId"`
	// Role NameNote: This field may return NULL, indicating that the valid value cannot be obtained.
	RoleName pulumi.StringInput `pulumi:"roleName"`
	// User ID.
	Uin pulumi.StringInput `pulumi:"uin"`
}

func (GetDescribeUserRolesUserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserRolesUserRole)(nil)).Elem()
}

func (i GetDescribeUserRolesUserRoleArgs) ToGetDescribeUserRolesUserRoleOutput() GetDescribeUserRolesUserRoleOutput {
	return i.ToGetDescribeUserRolesUserRoleOutputWithContext(context.Background())
}

func (i GetDescribeUserRolesUserRoleArgs) ToGetDescribeUserRolesUserRoleOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserRolesUserRoleOutput)
}

// GetDescribeUserRolesUserRoleArrayInput is an input type that accepts GetDescribeUserRolesUserRoleArray and GetDescribeUserRolesUserRoleArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserRolesUserRoleArrayInput` via:
//
//	GetDescribeUserRolesUserRoleArray{ GetDescribeUserRolesUserRoleArgs{...} }
type GetDescribeUserRolesUserRoleArrayInput interface {
	pulumi.Input

	ToGetDescribeUserRolesUserRoleArrayOutput() GetDescribeUserRolesUserRoleArrayOutput
	ToGetDescribeUserRolesUserRoleArrayOutputWithContext(context.Context) GetDescribeUserRolesUserRoleArrayOutput
}

type GetDescribeUserRolesUserRoleArray []GetDescribeUserRolesUserRoleInput

func (GetDescribeUserRolesUserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserRolesUserRole)(nil)).Elem()
}

func (i GetDescribeUserRolesUserRoleArray) ToGetDescribeUserRolesUserRoleArrayOutput() GetDescribeUserRolesUserRoleArrayOutput {
	return i.ToGetDescribeUserRolesUserRoleArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserRolesUserRoleArray) ToGetDescribeUserRolesUserRoleArrayOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserRolesUserRoleArrayOutput)
}

type GetDescribeUserRolesUserRoleOutput struct{ *pulumi.OutputState }

func (GetDescribeUserRolesUserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserRolesUserRole)(nil)).Elem()
}

func (o GetDescribeUserRolesUserRoleOutput) ToGetDescribeUserRolesUserRoleOutput() GetDescribeUserRolesUserRoleOutput {
	return o
}

func (o GetDescribeUserRolesUserRoleOutput) ToGetDescribeUserRolesUserRoleOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleOutput {
	return o
}

// User app ID.
func (o GetDescribeUserRolesUserRoleOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) string { return v.AppId }).(pulumi.StringOutput)
}

// Role Permissions.
func (o GetDescribeUserRolesUserRoleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) string { return v.Arn }).(pulumi.StringOutput)
}

// COS authorization path listNote: This field may return NULL, indicating that the valid value cannot be obtained.
func (o GetDescribeUserRolesUserRoleOutput) CosPermissionLists() GetDescribeUserRolesUserRoleCosPermissionListArrayOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) []GetDescribeUserRolesUserRoleCosPermissionList {
		return v.CosPermissionLists
	}).(GetDescribeUserRolesUserRoleCosPermissionListArrayOutput)
}

// Creator UinNote: This field may return NULL, indicating that the valid value cannot be obtained.
func (o GetDescribeUserRolesUserRoleOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) string { return v.Creator }).(pulumi.StringOutput)
}

// Character description information.
func (o GetDescribeUserRolesUserRoleOutput) Desc() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) string { return v.Desc }).(pulumi.StringOutput)
}

// Recently modify the time stamp.
func (o GetDescribeUserRolesUserRoleOutput) ModifyTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) int { return v.ModifyTime }).(pulumi.IntOutput)
}

// CAM strategy jsonNote: This field may return NULL, indicating that the valid value cannot be obtained.
func (o GetDescribeUserRolesUserRoleOutput) PermissionJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) string { return v.PermissionJson }).(pulumi.StringOutput)
}

// Character ID.
func (o GetDescribeUserRolesUserRoleOutput) RoleId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) int { return v.RoleId }).(pulumi.IntOutput)
}

// Role NameNote: This field may return NULL, indicating that the valid value cannot be obtained.
func (o GetDescribeUserRolesUserRoleOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) string { return v.RoleName }).(pulumi.StringOutput)
}

// User ID.
func (o GetDescribeUserRolesUserRoleOutput) Uin() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRole) string { return v.Uin }).(pulumi.StringOutput)
}

type GetDescribeUserRolesUserRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserRolesUserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserRolesUserRole)(nil)).Elem()
}

func (o GetDescribeUserRolesUserRoleArrayOutput) ToGetDescribeUserRolesUserRoleArrayOutput() GetDescribeUserRolesUserRoleArrayOutput {
	return o
}

func (o GetDescribeUserRolesUserRoleArrayOutput) ToGetDescribeUserRolesUserRoleArrayOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleArrayOutput {
	return o
}

func (o GetDescribeUserRolesUserRoleArrayOutput) Index(i pulumi.IntInput) GetDescribeUserRolesUserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserRolesUserRole {
		return vs[0].([]GetDescribeUserRolesUserRole)[vs[1].(int)]
	}).(GetDescribeUserRolesUserRoleOutput)
}

type GetDescribeUserRolesUserRoleCosPermissionList struct {
	// COS pathNote: This field may return NULL, indicating that the valid value cannot be obtained.
	CosPath string `pulumi:"cosPath"`
	// Permissions [Read, WRITE]Note: This field may return NULL, indicating that the valid value cannot be obtained.
	Permissions []string `pulumi:"permissions"`
}

// GetDescribeUserRolesUserRoleCosPermissionListInput is an input type that accepts GetDescribeUserRolesUserRoleCosPermissionListArgs and GetDescribeUserRolesUserRoleCosPermissionListOutput values.
// You can construct a concrete instance of `GetDescribeUserRolesUserRoleCosPermissionListInput` via:
//
//	GetDescribeUserRolesUserRoleCosPermissionListArgs{...}
type GetDescribeUserRolesUserRoleCosPermissionListInput interface {
	pulumi.Input

	ToGetDescribeUserRolesUserRoleCosPermissionListOutput() GetDescribeUserRolesUserRoleCosPermissionListOutput
	ToGetDescribeUserRolesUserRoleCosPermissionListOutputWithContext(context.Context) GetDescribeUserRolesUserRoleCosPermissionListOutput
}

type GetDescribeUserRolesUserRoleCosPermissionListArgs struct {
	// COS pathNote: This field may return NULL, indicating that the valid value cannot be obtained.
	CosPath pulumi.StringInput `pulumi:"cosPath"`
	// Permissions [Read, WRITE]Note: This field may return NULL, indicating that the valid value cannot be obtained.
	Permissions pulumi.StringArrayInput `pulumi:"permissions"`
}

func (GetDescribeUserRolesUserRoleCosPermissionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserRolesUserRoleCosPermissionList)(nil)).Elem()
}

func (i GetDescribeUserRolesUserRoleCosPermissionListArgs) ToGetDescribeUserRolesUserRoleCosPermissionListOutput() GetDescribeUserRolesUserRoleCosPermissionListOutput {
	return i.ToGetDescribeUserRolesUserRoleCosPermissionListOutputWithContext(context.Background())
}

func (i GetDescribeUserRolesUserRoleCosPermissionListArgs) ToGetDescribeUserRolesUserRoleCosPermissionListOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleCosPermissionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserRolesUserRoleCosPermissionListOutput)
}

// GetDescribeUserRolesUserRoleCosPermissionListArrayInput is an input type that accepts GetDescribeUserRolesUserRoleCosPermissionListArray and GetDescribeUserRolesUserRoleCosPermissionListArrayOutput values.
// You can construct a concrete instance of `GetDescribeUserRolesUserRoleCosPermissionListArrayInput` via:
//
//	GetDescribeUserRolesUserRoleCosPermissionListArray{ GetDescribeUserRolesUserRoleCosPermissionListArgs{...} }
type GetDescribeUserRolesUserRoleCosPermissionListArrayInput interface {
	pulumi.Input

	ToGetDescribeUserRolesUserRoleCosPermissionListArrayOutput() GetDescribeUserRolesUserRoleCosPermissionListArrayOutput
	ToGetDescribeUserRolesUserRoleCosPermissionListArrayOutputWithContext(context.Context) GetDescribeUserRolesUserRoleCosPermissionListArrayOutput
}

type GetDescribeUserRolesUserRoleCosPermissionListArray []GetDescribeUserRolesUserRoleCosPermissionListInput

func (GetDescribeUserRolesUserRoleCosPermissionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserRolesUserRoleCosPermissionList)(nil)).Elem()
}

func (i GetDescribeUserRolesUserRoleCosPermissionListArray) ToGetDescribeUserRolesUserRoleCosPermissionListArrayOutput() GetDescribeUserRolesUserRoleCosPermissionListArrayOutput {
	return i.ToGetDescribeUserRolesUserRoleCosPermissionListArrayOutputWithContext(context.Background())
}

func (i GetDescribeUserRolesUserRoleCosPermissionListArray) ToGetDescribeUserRolesUserRoleCosPermissionListArrayOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleCosPermissionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeUserRolesUserRoleCosPermissionListArrayOutput)
}

type GetDescribeUserRolesUserRoleCosPermissionListOutput struct{ *pulumi.OutputState }

func (GetDescribeUserRolesUserRoleCosPermissionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeUserRolesUserRoleCosPermissionList)(nil)).Elem()
}

func (o GetDescribeUserRolesUserRoleCosPermissionListOutput) ToGetDescribeUserRolesUserRoleCosPermissionListOutput() GetDescribeUserRolesUserRoleCosPermissionListOutput {
	return o
}

func (o GetDescribeUserRolesUserRoleCosPermissionListOutput) ToGetDescribeUserRolesUserRoleCosPermissionListOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleCosPermissionListOutput {
	return o
}

// COS pathNote: This field may return NULL, indicating that the valid value cannot be obtained.
func (o GetDescribeUserRolesUserRoleCosPermissionListOutput) CosPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRoleCosPermissionList) string { return v.CosPath }).(pulumi.StringOutput)
}

// Permissions [Read, WRITE]Note: This field may return NULL, indicating that the valid value cannot be obtained.
func (o GetDescribeUserRolesUserRoleCosPermissionListOutput) Permissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDescribeUserRolesUserRoleCosPermissionList) []string { return v.Permissions }).(pulumi.StringArrayOutput)
}

type GetDescribeUserRolesUserRoleCosPermissionListArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeUserRolesUserRoleCosPermissionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeUserRolesUserRoleCosPermissionList)(nil)).Elem()
}

func (o GetDescribeUserRolesUserRoleCosPermissionListArrayOutput) ToGetDescribeUserRolesUserRoleCosPermissionListArrayOutput() GetDescribeUserRolesUserRoleCosPermissionListArrayOutput {
	return o
}

func (o GetDescribeUserRolesUserRoleCosPermissionListArrayOutput) ToGetDescribeUserRolesUserRoleCosPermissionListArrayOutputWithContext(ctx context.Context) GetDescribeUserRolesUserRoleCosPermissionListArrayOutput {
	return o
}

func (o GetDescribeUserRolesUserRoleCosPermissionListArrayOutput) Index(i pulumi.IntInput) GetDescribeUserRolesUserRoleCosPermissionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeUserRolesUserRoleCosPermissionList {
		return vs[0].([]GetDescribeUserRolesUserRoleCosPermissionList)[vs[1].(int)]
	}).(GetDescribeUserRolesUserRoleCosPermissionListOutput)
}

type GetDescribeWorkGroupInfoFilter struct {
	// Attribute name. If there are multiple Filters, the relationship between filters is a logical or (OR) relationship.
	Name string `pulumi:"name"`
	// Attribute value, if there are multiple values in the same filter, the relationship between values under the same filter is a logical or relationship.
	Values []string `pulumi:"values"`
}

// GetDescribeWorkGroupInfoFilterInput is an input type that accepts GetDescribeWorkGroupInfoFilterArgs and GetDescribeWorkGroupInfoFilterOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoFilterInput` via:
//
//	GetDescribeWorkGroupInfoFilterArgs{...}
type GetDescribeWorkGroupInfoFilterInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoFilterOutput() GetDescribeWorkGroupInfoFilterOutput
	ToGetDescribeWorkGroupInfoFilterOutputWithContext(context.Context) GetDescribeWorkGroupInfoFilterOutput
}

type GetDescribeWorkGroupInfoFilterArgs struct {
	// Attribute name. If there are multiple Filters, the relationship between filters is a logical or (OR) relationship.
	Name pulumi.StringInput `pulumi:"name"`
	// Attribute value, if there are multiple values in the same filter, the relationship between values under the same filter is a logical or relationship.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDescribeWorkGroupInfoFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoFilter)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoFilterArgs) ToGetDescribeWorkGroupInfoFilterOutput() GetDescribeWorkGroupInfoFilterOutput {
	return i.ToGetDescribeWorkGroupInfoFilterOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoFilterArgs) ToGetDescribeWorkGroupInfoFilterOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoFilterOutput)
}

// GetDescribeWorkGroupInfoFilterArrayInput is an input type that accepts GetDescribeWorkGroupInfoFilterArray and GetDescribeWorkGroupInfoFilterArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoFilterArrayInput` via:
//
//	GetDescribeWorkGroupInfoFilterArray{ GetDescribeWorkGroupInfoFilterArgs{...} }
type GetDescribeWorkGroupInfoFilterArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoFilterArrayOutput() GetDescribeWorkGroupInfoFilterArrayOutput
	ToGetDescribeWorkGroupInfoFilterArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoFilterArrayOutput
}

type GetDescribeWorkGroupInfoFilterArray []GetDescribeWorkGroupInfoFilterInput

func (GetDescribeWorkGroupInfoFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoFilter)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoFilterArray) ToGetDescribeWorkGroupInfoFilterArrayOutput() GetDescribeWorkGroupInfoFilterArrayOutput {
	return i.ToGetDescribeWorkGroupInfoFilterArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoFilterArray) ToGetDescribeWorkGroupInfoFilterArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoFilterArrayOutput)
}

type GetDescribeWorkGroupInfoFilterOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoFilter)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoFilterOutput) ToGetDescribeWorkGroupInfoFilterOutput() GetDescribeWorkGroupInfoFilterOutput {
	return o
}

func (o GetDescribeWorkGroupInfoFilterOutput) ToGetDescribeWorkGroupInfoFilterOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoFilterOutput {
	return o
}

// Attribute name. If there are multiple Filters, the relationship between filters is a logical or (OR) relationship.
func (o GetDescribeWorkGroupInfoFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Attribute value, if there are multiple values in the same filter, the relationship between values under the same filter is a logical or relationship.
func (o GetDescribeWorkGroupInfoFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDescribeWorkGroupInfoFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoFilter)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoFilterArrayOutput) ToGetDescribeWorkGroupInfoFilterArrayOutput() GetDescribeWorkGroupInfoFilterArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoFilterArrayOutput) ToGetDescribeWorkGroupInfoFilterArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoFilterArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoFilterArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoFilter {
		return vs[0].([]GetDescribeWorkGroupInfoFilter)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoFilterOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfo struct {
	// Data permission collection.
	DataPolicyInfos []GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo `pulumi:"dataPolicyInfos"`
	// Engine permission collection.
	EnginePolicyInfos []GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo `pulumi:"enginePolicyInfos"`
	// Row filter information collection.
	RowFilterInfos []GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo `pulumi:"rowFilterInfos"`
	// Query information type, only support: User: user information/DataAuth: data permission/EngineAuth: engine permission.
	Type string `pulumi:"type"`
	// A collection of users bound to the workgroup.
	UserInfos []GetDescribeWorkGroupInfoWorkGroupInfoUserInfo `pulumi:"userInfos"`
	// Workgroup description information.
	WorkGroupDescription string `pulumi:"workGroupDescription"`
	// Work group id.
	WorkGroupId int `pulumi:"workGroupId"`
	// Work group name.
	WorkGroupName string `pulumi:"workGroupName"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoArgs and GetDescribeWorkGroupInfoWorkGroupInfoOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoArgs struct {
	// Data permission collection.
	DataPolicyInfos GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayInput `pulumi:"dataPolicyInfos"`
	// Engine permission collection.
	EnginePolicyInfos GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayInput `pulumi:"enginePolicyInfos"`
	// Row filter information collection.
	RowFilterInfos GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayInput `pulumi:"rowFilterInfos"`
	// Query information type, only support: User: user information/DataAuth: data permission/EngineAuth: engine permission.
	Type pulumi.StringInput `pulumi:"type"`
	// A collection of users bound to the workgroup.
	UserInfos GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayInput `pulumi:"userInfos"`
	// Workgroup description information.
	WorkGroupDescription pulumi.StringInput `pulumi:"workGroupDescription"`
	// Work group id.
	WorkGroupId pulumi.IntInput `pulumi:"workGroupId"`
	// Work group name.
	WorkGroupName pulumi.StringInput `pulumi:"workGroupName"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoArray and GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoArray{ GetDescribeWorkGroupInfoWorkGroupInfoArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoArray []GetDescribeWorkGroupInfoWorkGroupInfoInput

func (GetDescribeWorkGroupInfoWorkGroupInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoOutput {
	return o
}

// Data permission collection.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) DataPolicyInfos() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) []GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo {
		return v.DataPolicyInfos
	}).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput)
}

// Engine permission collection.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) EnginePolicyInfos() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) []GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo {
		return v.EnginePolicyInfos
	}).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput)
}

// Row filter information collection.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) RowFilterInfos() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) []GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo {
		return v.RowFilterInfos
	}).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput)
}

// Query information type, only support: User: user information/DataAuth: data permission/EngineAuth: engine permission.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) string { return v.Type }).(pulumi.StringOutput)
}

// A collection of users bound to the workgroup.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) UserInfos() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) []GetDescribeWorkGroupInfoWorkGroupInfoUserInfo {
		return v.UserInfos
	}).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput)
}

// Workgroup description information.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) WorkGroupDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) string { return v.WorkGroupDescription }).(pulumi.StringOutput)
}

// Work group id.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) WorkGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) int { return v.WorkGroupId }).(pulumi.IntOutput)
}

// Work group name.
func (o GetDescribeWorkGroupInfoWorkGroupInfoOutput) WorkGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfo) string { return v.WorkGroupName }).(pulumi.StringOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfo {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfo)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo struct {
	// Policy set.
	PolicySets []GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet `pulumi:"policySets"`
	// Total count.
	TotalCount int `pulumi:"totalCount"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs and GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs struct {
	// Policy set.
	PolicySets GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayInput `pulumi:"policySets"`
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArray and GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArray{ GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArray []GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoInput

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput {
	return o
}

// Policy set.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput) PolicySets() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo) []GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet {
		return v.PolicySets
	}).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput)
}

// Total count.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfo)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog string `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column string `pulumi:"column"`
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine string `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database string `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function string `pulumi:"function"`
	// Policy id.
	Id int `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode string `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation string `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator string `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType string `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth bool `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source string `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId int `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName string `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table string `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View string `pulumi:"view"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs and GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column pulumi.StringInput `pulumi:"column"`
	// Create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine pulumi.StringInput `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database pulumi.StringInput `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function pulumi.StringInput `pulumi:"function"`
	// Policy id.
	Id pulumi.IntInput `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth pulumi.BoolInput `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source pulumi.StringInput `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId pulumi.IntInput `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table pulumi.StringInput `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View pulumi.StringInput `pulumi:"view"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArray and GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArray{ GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArray []GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetInput

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput {
	return o
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Column }).(pulumi.StringOutput)
}

// Create time.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) DataEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.DataEngine }).(pulumi.StringOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Function }).(pulumi.StringOutput)
}

// Policy id.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) int { return v.Id }).(pulumi.IntOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Mode }).(pulumi.StringOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

// Operator, do not fill in the input parameters.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Operator }).(pulumi.StringOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) ReAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) bool { return v.ReAuth }).(pulumi.BoolOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Source }).(pulumi.StringOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) SourceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) int { return v.SourceId }).(pulumi.IntOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.SourceName }).(pulumi.StringOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput) View() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet) string { return v.View }).(pulumi.StringOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySet)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo struct {
	// Policy set.
	PolicySets []GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet `pulumi:"policySets"`
	// Total count.
	TotalCount int `pulumi:"totalCount"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs and GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs struct {
	// Policy set.
	PolicySets GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayInput `pulumi:"policySets"`
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArray and GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArray{ GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArray []GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoInput

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput {
	return o
}

// Policy set.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput) PolicySets() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo) []GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet {
		return v.PolicySets
	}).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput)
}

// Total count.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfo)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog string `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column string `pulumi:"column"`
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine string `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database string `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function string `pulumi:"function"`
	// Policy id.
	Id int `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode string `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation string `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator string `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType string `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth bool `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source string `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId int `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName string `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table string `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View string `pulumi:"view"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs and GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column pulumi.StringInput `pulumi:"column"`
	// Create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine pulumi.StringInput `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database pulumi.StringInput `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function pulumi.StringInput `pulumi:"function"`
	// Policy id.
	Id pulumi.IntInput `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth pulumi.BoolInput `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source pulumi.StringInput `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId pulumi.IntInput `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table pulumi.StringInput `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View pulumi.StringInput `pulumi:"view"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArray and GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArray{ GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArray []GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetInput

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput {
	return o
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Column }).(pulumi.StringOutput)
}

// Create time.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) DataEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.DataEngine }).(pulumi.StringOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Function }).(pulumi.StringOutput)
}

// Policy id.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) int { return v.Id }).(pulumi.IntOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Mode }).(pulumi.StringOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

// Operator, do not fill in the input parameters.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Operator }).(pulumi.StringOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) ReAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) bool { return v.ReAuth }).(pulumi.BoolOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Source }).(pulumi.StringOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) SourceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) int { return v.SourceId }).(pulumi.IntOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.SourceName }).(pulumi.StringOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput) View() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet) string { return v.View }).(pulumi.StringOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySet)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo struct {
	// Policy set.
	PolicySets []GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet `pulumi:"policySets"`
	// Total count.
	TotalCount int `pulumi:"totalCount"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs and GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs struct {
	// Policy set.
	PolicySets GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayInput `pulumi:"policySets"`
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArray and GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArray{ GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArray []GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoInput

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput {
	return o
}

// Policy set.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput) PolicySets() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo) []GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet {
		return v.PolicySets
	}).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput)
}

// Total count.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfo)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog string `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column string `pulumi:"column"`
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine string `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database string `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function string `pulumi:"function"`
	// Policy id.
	Id int `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode string `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation string `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator string `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType string `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth bool `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source string `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId int `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName string `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table string `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View string `pulumi:"view"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs and GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs struct {
	// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
	Catalog pulumi.StringInput `pulumi:"catalog"`
	// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
	Column pulumi.StringInput `pulumi:"column"`
	// Create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
	DataEngine pulumi.StringInput `pulumi:"dataEngine"`
	// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
	Database pulumi.StringInput `pulumi:"database"`
	// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
	Function pulumi.StringInput `pulumi:"function"`
	// Policy id.
	Id pulumi.IntInput `pulumi:"id"`
	// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
	Mode pulumi.StringInput `pulumi:"mode"`
	// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
	Operation pulumi.StringInput `pulumi:"operation"`
	// Operator, do not fill in the input parameters.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
	ReAuth pulumi.BoolInput `pulumi:"reAuth"`
	// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
	Source pulumi.StringInput `pulumi:"source"`
	// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
	SourceId pulumi.IntInput `pulumi:"sourceId"`
	// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
	Table pulumi.StringInput `pulumi:"table"`
	// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
	View pulumi.StringInput `pulumi:"view"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArray and GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArray{ GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArray []GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetInput

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput {
	return o
}

// For the data source name that requires authorization, only * (representing all resources at this level) is supported under the administrator level; in the case of data source level and database level authentication, only COSDataCatalog or * is supported; in data table level authentication, it is possible Fill in the user-defined data source. If left blank, it defaults to DataLakeCatalog. note: If a user-defined data source is authenticated, the permissions that dlc can manage are a subset of the accounts provided by the user when accessing the data source.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Catalog() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Catalog }).(pulumi.StringOutput)
}

// For columns that require authorization, fill in * to represent all current columns. When the authorization type is administrator level, only * is allowed.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Column() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Column }).(pulumi.StringOutput)
}

// Create time.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Data engines that require authorization, fill in * to represent all current engines. when the authorization type is administrator level, only * is allowed.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) DataEngine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.DataEngine }).(pulumi.StringOutput)
}

// Database name that requires authorization, fill in * to represent all databases under the current catalog. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level, only blanks are allowed to be filled in. For other types, the database can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Database }).(pulumi.StringOutput)
}

// For the function name that requires authorization, fill in * to represent all functions under the current catalog. when the authorization type is administrator level, only * is allowed to be filled in. When the authorization type is data connection level, only blanks are allowed to be filled in. in other types, functions can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Function }).(pulumi.StringOutput)
}

// Policy id.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) int { return v.Id }).(pulumi.IntOutput)
}

// Authorization mode, please leave this parameter blank. COMMON: normal mode; SENIOR: advanced mode.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Mode }).(pulumi.StringOutput)
}

// Authorized permission operations provide different operations for different levels of authentication. administrator permissions: ALL, default is ALL if left blank; data connection level authentication: CREATE; database level authentication: ALL, CREATE, ALTER, DROP; data table permissions: ALL, SELECT, INSERT, ALTER, DELETE, DROP, UPDATE. note: under data table permissions, only SELECT operations are supported when the specified data source is not COSDataCatalog.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Operation }).(pulumi.StringOutput)
}

// Operator, do not fill in the input parameters.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Operator }).(pulumi.StringOutput)
}

// Authorization type, currently supports eight authorization types: ADMIN: Administrator level authentication DATASOURCE: data connection level authentication DATABASE: database level authentication TABLE: Table level authentication VIEW: view level authentication FUNCTION: Function level authentication COLUMN: Column level authentication ENGINE: Data engine authentication. if left blank, the default is administrator level authentication.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Whether the user can perform secondary authorization. when it is true, the authorized user can re-authorize the permissions obtained this time to other sub-users. default is false.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) ReAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) bool { return v.ReAuth }).(pulumi.BoolOutput)
}

// Permission source, please leave it blank. USER: permissions come from the user itself; WORKGROUP: permissions come from the bound workgroup.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Source }).(pulumi.StringOutput)
}

// The id of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the Source field is WORKGROUP.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) SourceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) int { return v.SourceId }).(pulumi.IntOutput)
}

// The name of the workgroup to which the permission belongs. this value only exists when the source of the permission is a workgroup. that is, this field has a value only when the value of the source field is WORKGROUP.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.SourceName }).(pulumi.StringOutput)
}

// For the table name that requires authorization, fill in * to represent all tables under the current database. when the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. For other types, data tables can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.Table }).(pulumi.StringOutput)
}

// For views that require authorization, fill in * to represent all views under the current database. When the authorization type is administrator level, only * is allowed to be filled in. when the authorization type is data connection level or database level, only blanks are allowed to be filled in. for other types, the view can be specified arbitrarily.
func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput) View() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet) string { return v.View }).(pulumi.StringOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySet)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfo struct {
	// Total count.
	TotalCount int `pulumi:"totalCount"`
	// User information collection.
	UserSets []GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet `pulumi:"userSets"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoUserInfoInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs and GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoUserInfoInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs struct {
	// Total count.
	TotalCount pulumi.IntInput `pulumi:"totalCount"`
	// User information collection.
	UserSets GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayInput `pulumi:"userSets"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArray and GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArray{ GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArray []GetDescribeWorkGroupInfoWorkGroupInfoUserInfoInput

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoUserInfo)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArray) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput {
	return o
}

// Total count.
func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput) TotalCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoUserInfo) int { return v.TotalCount }).(pulumi.IntOutput)
}

// User information collection.
func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput) UserSets() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoUserInfo) []GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet {
		return v.UserSets
	}).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoUserInfo)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoUserInfo {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoUserInfo)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet struct {
	// Create time.
	CreateTime string `pulumi:"createTime"`
	// The creator of the current user.
	Creator string `pulumi:"creator"`
	// User alias.
	UserAlias string `pulumi:"userAlias"`
	// User description.
	UserDescription string `pulumi:"userDescription"`
	// User id, matches the CAM side sub-user uin.
	UserId string `pulumi:"userId"`
}

// GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs and GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs{...}
type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs struct {
	// Create time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The creator of the current user.
	Creator pulumi.StringInput `pulumi:"creator"`
	// User alias.
	UserAlias pulumi.StringInput `pulumi:"userAlias"`
	// User description.
	UserDescription pulumi.StringInput `pulumi:"userDescription"`
	// User id, matches the CAM side sub-user uin.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput)
}

// GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayInput is an input type that accepts GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArray and GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput values.
// You can construct a concrete instance of `GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayInput` via:
//
//	GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArray{ GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs{...} }
type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayInput interface {
	pulumi.Input

	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput
	ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutputWithContext(context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArray []GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetInput

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet)(nil)).Elem()
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput {
	return i.ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutputWithContext(context.Background())
}

func (i GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArray) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput {
	return o
}

// Create time.
func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The creator of the current user.
func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet) string { return v.Creator }).(pulumi.StringOutput)
}

// User alias.
func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) UserAlias() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet) string { return v.UserAlias }).(pulumi.StringOutput)
}

// User description.
func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) UserDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet) string { return v.UserDescription }).(pulumi.StringOutput)
}

// User id, matches the CAM side sub-user uin.
func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet) string { return v.UserId }).(pulumi.StringOutput)
}

type GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput struct{ *pulumi.OutputState }

func (GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet)(nil)).Elem()
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput() GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput) ToGetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutputWithContext(ctx context.Context) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput {
	return o
}

func (o GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput) Index(i pulumi.IntInput) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet {
		return vs[0].([]GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSet)[vs[1].(int)]
	}).(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AddUsersToWorkGroupAttachmentAddInfoInput)(nil)).Elem(), AddUsersToWorkGroupAttachmentAddInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AddUsersToWorkGroupAttachmentAddInfoPtrInput)(nil)).Elem(), AddUsersToWorkGroupAttachmentAddInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachUserPolicyOperationPolicySetInput)(nil)).Elem(), AttachUserPolicyOperationPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachUserPolicyOperationPolicySetArrayInput)(nil)).Elem(), AttachUserPolicyOperationPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachWorkGroupPolicyOperationPolicySetInput)(nil)).Elem(), AttachWorkGroupPolicyOperationPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttachWorkGroupPolicyOperationPolicySetArrayInput)(nil)).Elem(), AttachWorkGroupPolicyOperationPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindWorkGroupsToUserAttachmentAddInfoInput)(nil)).Elem(), BindWorkGroupsToUserAttachmentAddInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindWorkGroupsToUserAttachmentAddInfoPtrInput)(nil)).Elem(), BindWorkGroupsToUserAttachmentAddInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataEngineCrontabResumeSuspendStrategyInput)(nil)).Elem(), DataEngineCrontabResumeSuspendStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataEngineCrontabResumeSuspendStrategyPtrInput)(nil)).Elem(), DataEngineCrontabResumeSuspendStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataEngineDataEngineConfigPairInput)(nil)).Elem(), DataEngineDataEngineConfigPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataEngineDataEngineConfigPairArrayInput)(nil)).Elem(), DataEngineDataEngineConfigPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataEngineSessionResourceTemplateInput)(nil)).Elem(), DataEngineSessionResourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataEngineSessionResourceTemplatePtrInput)(nil)).Elem(), DataEngineSessionResourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetachUserPolicyOperationPolicySetInput)(nil)).Elem(), DetachUserPolicyOperationPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetachUserPolicyOperationPolicySetArrayInput)(nil)).Elem(), DetachUserPolicyOperationPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetachWorkGroupPolicyOperationPolicySetInput)(nil)).Elem(), DetachWorkGroupPolicyOperationPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetachWorkGroupPolicyOperationPolicySetArrayInput)(nil)).Elem(), DetachWorkGroupPolicyOperationPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateRowFilterOperationPolicyInput)(nil)).Elem(), UpdateRowFilterOperationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateRowFilterOperationPolicyPtrInput)(nil)).Elem(), UpdateRowFilterOperationPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDataEngineConfigDataEngineConfigPairInput)(nil)).Elem(), UserDataEngineConfigDataEngineConfigPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDataEngineConfigDataEngineConfigPairArrayInput)(nil)).Elem(), UserDataEngineConfigDataEngineConfigPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDataEngineConfigSessionResourceTemplateInput)(nil)).Elem(), UserDataEngineConfigSessionResourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserDataEngineConfigSessionResourceTemplatePtrInput)(nil)).Elem(), UserDataEngineConfigSessionResourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCheckDataEngineConfigPairsValidityDataEngineConfigPairInput)(nil)).Elem(), GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayInput)(nil)).Elem(), GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineInput)(nil)).Elem(), GetDescribeDataEngineDataEngineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineArrayInput)(nil)).Elem(), GetDescribeDataEngineDataEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyInput)(nil)).Elem(), GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayInput)(nil)).Elem(), GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineNetworkConnectionSetInput)(nil)).Elem(), GetDescribeDataEngineDataEngineNetworkConnectionSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineNetworkConnectionSetArrayInput)(nil)).Elem(), GetDescribeDataEngineDataEngineNetworkConnectionSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineSessionResourceTemplateInput)(nil)).Elem(), GetDescribeDataEngineDataEngineSessionResourceTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineSessionResourceTemplateArrayInput)(nil)).Elem(), GetDescribeDataEngineDataEngineSessionResourceTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineTagListInput)(nil)).Elem(), GetDescribeDataEngineDataEngineTagListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineDataEngineTagListArrayInput)(nil)).Elem(), GetDescribeDataEngineDataEngineTagListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineEventsEventInput)(nil)).Elem(), GetDescribeDataEngineEventsEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineEventsEventArrayInput)(nil)).Elem(), GetDescribeDataEngineEventsEventArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineImageVersionsImageParentVersionInput)(nil)).Elem(), GetDescribeDataEngineImageVersionsImageParentVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEngineImageVersionsImageParentVersionArrayInput)(nil)).Elem(), GetDescribeDataEngineImageVersionsImageParentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEnginePythonSparkImagesPythonSparkImageInput)(nil)).Elem(), GetDescribeDataEnginePythonSparkImagesPythonSparkImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayInput)(nil)).Elem(), GetDescribeDataEnginePythonSparkImagesPythonSparkImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUpdatableDataEnginesDataEngineBasicInfoInput)(nil)).Elem(), GetDescribeUpdatableDataEnginesDataEngineBasicInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayInput)(nil)).Elem(), GetDescribeUpdatableDataEnginesDataEngineBasicInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoFilterInput)(nil)).Elem(), GetDescribeUserInfoFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoFilterArrayInput)(nil)).Elem(), GetDescribeUserInfoFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoInput)(nil)).Elem(), GetDescribeUserInfoUserInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfoInput)(nil)).Elem(), GetDescribeUserInfoUserInfoDataPolicyInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfoArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoDataPolicyInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetInput)(nil)).Elem(), GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfoInput)(nil)).Elem(), GetDescribeUserInfoUserInfoEnginePolicyInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfoArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoEnginePolicyInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetInput)(nil)).Elem(), GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfoInput)(nil)).Elem(), GetDescribeUserInfoUserInfoRowFilterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfoArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoRowFilterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfoPolicySetInput)(nil)).Elem(), GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfoInput)(nil)).Elem(), GetDescribeUserInfoUserInfoWorkGroupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfoArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoWorkGroupInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetInput)(nil)).Elem(), GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayInput)(nil)).Elem(), GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserRolesUserRoleInput)(nil)).Elem(), GetDescribeUserRolesUserRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserRolesUserRoleArrayInput)(nil)).Elem(), GetDescribeUserRolesUserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserRolesUserRoleCosPermissionListInput)(nil)).Elem(), GetDescribeUserRolesUserRoleCosPermissionListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeUserRolesUserRoleCosPermissionListArrayInput)(nil)).Elem(), GetDescribeUserRolesUserRoleCosPermissionListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoFilterInput)(nil)).Elem(), GetDescribeWorkGroupInfoFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoFilterArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfoInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayInput)(nil)).Elem(), GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArray{})
	pulumi.RegisterOutputType(AddUsersToWorkGroupAttachmentAddInfoOutput{})
	pulumi.RegisterOutputType(AddUsersToWorkGroupAttachmentAddInfoPtrOutput{})
	pulumi.RegisterOutputType(AttachUserPolicyOperationPolicySetOutput{})
	pulumi.RegisterOutputType(AttachUserPolicyOperationPolicySetArrayOutput{})
	pulumi.RegisterOutputType(AttachWorkGroupPolicyOperationPolicySetOutput{})
	pulumi.RegisterOutputType(AttachWorkGroupPolicyOperationPolicySetArrayOutput{})
	pulumi.RegisterOutputType(BindWorkGroupsToUserAttachmentAddInfoOutput{})
	pulumi.RegisterOutputType(BindWorkGroupsToUserAttachmentAddInfoPtrOutput{})
	pulumi.RegisterOutputType(DataEngineCrontabResumeSuspendStrategyOutput{})
	pulumi.RegisterOutputType(DataEngineCrontabResumeSuspendStrategyPtrOutput{})
	pulumi.RegisterOutputType(DataEngineDataEngineConfigPairOutput{})
	pulumi.RegisterOutputType(DataEngineDataEngineConfigPairArrayOutput{})
	pulumi.RegisterOutputType(DataEngineSessionResourceTemplateOutput{})
	pulumi.RegisterOutputType(DataEngineSessionResourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(DetachUserPolicyOperationPolicySetOutput{})
	pulumi.RegisterOutputType(DetachUserPolicyOperationPolicySetArrayOutput{})
	pulumi.RegisterOutputType(DetachWorkGroupPolicyOperationPolicySetOutput{})
	pulumi.RegisterOutputType(DetachWorkGroupPolicyOperationPolicySetArrayOutput{})
	pulumi.RegisterOutputType(UpdateRowFilterOperationPolicyOutput{})
	pulumi.RegisterOutputType(UpdateRowFilterOperationPolicyPtrOutput{})
	pulumi.RegisterOutputType(UserDataEngineConfigDataEngineConfigPairOutput{})
	pulumi.RegisterOutputType(UserDataEngineConfigDataEngineConfigPairArrayOutput{})
	pulumi.RegisterOutputType(UserDataEngineConfigSessionResourceTemplateOutput{})
	pulumi.RegisterOutputType(UserDataEngineConfigSessionResourceTemplatePtrOutput{})
	pulumi.RegisterOutputType(GetCheckDataEngineConfigPairsValidityDataEngineConfigPairOutput{})
	pulumi.RegisterOutputType(GetCheckDataEngineConfigPairsValidityDataEngineConfigPairArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineNetworkConnectionSetOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineNetworkConnectionSetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineSessionResourceTemplateOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineSessionResourceTemplateArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineTagListOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineDataEngineTagListArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineEventsEventOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineEventsEventArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineImageVersionsImageParentVersionOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEngineImageVersionsImageParentVersionArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEnginePythonSparkImagesPythonSparkImageOutput{})
	pulumi.RegisterOutputType(GetDescribeDataEnginePythonSparkImagesPythonSparkImageArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUpdatableDataEnginesDataEngineBasicInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeUpdatableDataEnginesDataEngineBasicInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoFilterOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoDataPolicyInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoDataPolicyInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoDataPolicyInfoPolicySetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoEnginePolicyInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoEnginePolicyInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoEnginePolicyInfoPolicySetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoRowFilterInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoRowFilterInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoRowFilterInfoPolicySetOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoRowFilterInfoPolicySetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoWorkGroupInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoWorkGroupInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetOutput{})
	pulumi.RegisterOutputType(GetDescribeUserInfoUserInfoWorkGroupInfoWorkGroupSetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserRolesUserRoleOutput{})
	pulumi.RegisterOutputType(GetDescribeUserRolesUserRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeUserRolesUserRoleCosPermissionListOutput{})
	pulumi.RegisterOutputType(GetDescribeUserRolesUserRoleCosPermissionListArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoFilterOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoDataPolicyInfoPolicySetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoEnginePolicyInfoPolicySetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoRowFilterInfoPolicySetArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoArrayOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetOutput{})
	pulumi.RegisterOutputType(GetDescribeWorkGroupInfoWorkGroupInfoUserInfoUserSetArrayOutput{})
}
