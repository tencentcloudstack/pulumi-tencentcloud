// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DetachWorkGroupPolicyOperation struct {
	pulumi.CustomResourceState

	// The set of policies to be bound.
	PolicySets DetachWorkGroupPolicyOperationPolicySetArrayOutput `pulumi:"policySets"`
	// Work group id.
	WorkGroupId pulumi.IntOutput `pulumi:"workGroupId"`
}

// NewDetachWorkGroupPolicyOperation registers a new resource with the given unique name, arguments, and options.
func NewDetachWorkGroupPolicyOperation(ctx *pulumi.Context,
	name string, args *DetachWorkGroupPolicyOperationArgs, opts ...pulumi.ResourceOption) (*DetachWorkGroupPolicyOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WorkGroupId == nil {
		return nil, errors.New("invalid value for required argument 'WorkGroupId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DetachWorkGroupPolicyOperation
	err := ctx.RegisterResource("tencentcloud:Dlc/detachWorkGroupPolicyOperation:DetachWorkGroupPolicyOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDetachWorkGroupPolicyOperation gets an existing DetachWorkGroupPolicyOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDetachWorkGroupPolicyOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DetachWorkGroupPolicyOperationState, opts ...pulumi.ResourceOption) (*DetachWorkGroupPolicyOperation, error) {
	var resource DetachWorkGroupPolicyOperation
	err := ctx.ReadResource("tencentcloud:Dlc/detachWorkGroupPolicyOperation:DetachWorkGroupPolicyOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DetachWorkGroupPolicyOperation resources.
type detachWorkGroupPolicyOperationState struct {
	// The set of policies to be bound.
	PolicySets []DetachWorkGroupPolicyOperationPolicySet `pulumi:"policySets"`
	// Work group id.
	WorkGroupId *int `pulumi:"workGroupId"`
}

type DetachWorkGroupPolicyOperationState struct {
	// The set of policies to be bound.
	PolicySets DetachWorkGroupPolicyOperationPolicySetArrayInput
	// Work group id.
	WorkGroupId pulumi.IntPtrInput
}

func (DetachWorkGroupPolicyOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*detachWorkGroupPolicyOperationState)(nil)).Elem()
}

type detachWorkGroupPolicyOperationArgs struct {
	// The set of policies to be bound.
	PolicySets []DetachWorkGroupPolicyOperationPolicySet `pulumi:"policySets"`
	// Work group id.
	WorkGroupId int `pulumi:"workGroupId"`
}

// The set of arguments for constructing a DetachWorkGroupPolicyOperation resource.
type DetachWorkGroupPolicyOperationArgs struct {
	// The set of policies to be bound.
	PolicySets DetachWorkGroupPolicyOperationPolicySetArrayInput
	// Work group id.
	WorkGroupId pulumi.IntInput
}

func (DetachWorkGroupPolicyOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*detachWorkGroupPolicyOperationArgs)(nil)).Elem()
}

type DetachWorkGroupPolicyOperationInput interface {
	pulumi.Input

	ToDetachWorkGroupPolicyOperationOutput() DetachWorkGroupPolicyOperationOutput
	ToDetachWorkGroupPolicyOperationOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationOutput
}

func (*DetachWorkGroupPolicyOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**DetachWorkGroupPolicyOperation)(nil)).Elem()
}

func (i *DetachWorkGroupPolicyOperation) ToDetachWorkGroupPolicyOperationOutput() DetachWorkGroupPolicyOperationOutput {
	return i.ToDetachWorkGroupPolicyOperationOutputWithContext(context.Background())
}

func (i *DetachWorkGroupPolicyOperation) ToDetachWorkGroupPolicyOperationOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetachWorkGroupPolicyOperationOutput)
}

// DetachWorkGroupPolicyOperationArrayInput is an input type that accepts DetachWorkGroupPolicyOperationArray and DetachWorkGroupPolicyOperationArrayOutput values.
// You can construct a concrete instance of `DetachWorkGroupPolicyOperationArrayInput` via:
//
//	DetachWorkGroupPolicyOperationArray{ DetachWorkGroupPolicyOperationArgs{...} }
type DetachWorkGroupPolicyOperationArrayInput interface {
	pulumi.Input

	ToDetachWorkGroupPolicyOperationArrayOutput() DetachWorkGroupPolicyOperationArrayOutput
	ToDetachWorkGroupPolicyOperationArrayOutputWithContext(context.Context) DetachWorkGroupPolicyOperationArrayOutput
}

type DetachWorkGroupPolicyOperationArray []DetachWorkGroupPolicyOperationInput

func (DetachWorkGroupPolicyOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DetachWorkGroupPolicyOperation)(nil)).Elem()
}

func (i DetachWorkGroupPolicyOperationArray) ToDetachWorkGroupPolicyOperationArrayOutput() DetachWorkGroupPolicyOperationArrayOutput {
	return i.ToDetachWorkGroupPolicyOperationArrayOutputWithContext(context.Background())
}

func (i DetachWorkGroupPolicyOperationArray) ToDetachWorkGroupPolicyOperationArrayOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetachWorkGroupPolicyOperationArrayOutput)
}

// DetachWorkGroupPolicyOperationMapInput is an input type that accepts DetachWorkGroupPolicyOperationMap and DetachWorkGroupPolicyOperationMapOutput values.
// You can construct a concrete instance of `DetachWorkGroupPolicyOperationMapInput` via:
//
//	DetachWorkGroupPolicyOperationMap{ "key": DetachWorkGroupPolicyOperationArgs{...} }
type DetachWorkGroupPolicyOperationMapInput interface {
	pulumi.Input

	ToDetachWorkGroupPolicyOperationMapOutput() DetachWorkGroupPolicyOperationMapOutput
	ToDetachWorkGroupPolicyOperationMapOutputWithContext(context.Context) DetachWorkGroupPolicyOperationMapOutput
}

type DetachWorkGroupPolicyOperationMap map[string]DetachWorkGroupPolicyOperationInput

func (DetachWorkGroupPolicyOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DetachWorkGroupPolicyOperation)(nil)).Elem()
}

func (i DetachWorkGroupPolicyOperationMap) ToDetachWorkGroupPolicyOperationMapOutput() DetachWorkGroupPolicyOperationMapOutput {
	return i.ToDetachWorkGroupPolicyOperationMapOutputWithContext(context.Background())
}

func (i DetachWorkGroupPolicyOperationMap) ToDetachWorkGroupPolicyOperationMapOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DetachWorkGroupPolicyOperationMapOutput)
}

type DetachWorkGroupPolicyOperationOutput struct{ *pulumi.OutputState }

func (DetachWorkGroupPolicyOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DetachWorkGroupPolicyOperation)(nil)).Elem()
}

func (o DetachWorkGroupPolicyOperationOutput) ToDetachWorkGroupPolicyOperationOutput() DetachWorkGroupPolicyOperationOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationOutput) ToDetachWorkGroupPolicyOperationOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationOutput {
	return o
}

// The set of policies to be bound.
func (o DetachWorkGroupPolicyOperationOutput) PolicySets() DetachWorkGroupPolicyOperationPolicySetArrayOutput {
	return o.ApplyT(func(v *DetachWorkGroupPolicyOperation) DetachWorkGroupPolicyOperationPolicySetArrayOutput {
		return v.PolicySets
	}).(DetachWorkGroupPolicyOperationPolicySetArrayOutput)
}

// Work group id.
func (o DetachWorkGroupPolicyOperationOutput) WorkGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v *DetachWorkGroupPolicyOperation) pulumi.IntOutput { return v.WorkGroupId }).(pulumi.IntOutput)
}

type DetachWorkGroupPolicyOperationArrayOutput struct{ *pulumi.OutputState }

func (DetachWorkGroupPolicyOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DetachWorkGroupPolicyOperation)(nil)).Elem()
}

func (o DetachWorkGroupPolicyOperationArrayOutput) ToDetachWorkGroupPolicyOperationArrayOutput() DetachWorkGroupPolicyOperationArrayOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationArrayOutput) ToDetachWorkGroupPolicyOperationArrayOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationArrayOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationArrayOutput) Index(i pulumi.IntInput) DetachWorkGroupPolicyOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DetachWorkGroupPolicyOperation {
		return vs[0].([]*DetachWorkGroupPolicyOperation)[vs[1].(int)]
	}).(DetachWorkGroupPolicyOperationOutput)
}

type DetachWorkGroupPolicyOperationMapOutput struct{ *pulumi.OutputState }

func (DetachWorkGroupPolicyOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DetachWorkGroupPolicyOperation)(nil)).Elem()
}

func (o DetachWorkGroupPolicyOperationMapOutput) ToDetachWorkGroupPolicyOperationMapOutput() DetachWorkGroupPolicyOperationMapOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationMapOutput) ToDetachWorkGroupPolicyOperationMapOutputWithContext(ctx context.Context) DetachWorkGroupPolicyOperationMapOutput {
	return o
}

func (o DetachWorkGroupPolicyOperationMapOutput) MapIndex(k pulumi.StringInput) DetachWorkGroupPolicyOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DetachWorkGroupPolicyOperation {
		return vs[0].(map[string]*DetachWorkGroupPolicyOperation)[vs[1].(string)]
	}).(DetachWorkGroupPolicyOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DetachWorkGroupPolicyOperationInput)(nil)).Elem(), &DetachWorkGroupPolicyOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetachWorkGroupPolicyOperationArrayInput)(nil)).Elem(), DetachWorkGroupPolicyOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DetachWorkGroupPolicyOperationMapInput)(nil)).Elem(), DetachWorkGroupPolicyOperationMap{})
	pulumi.RegisterOutputType(DetachWorkGroupPolicyOperationOutput{})
	pulumi.RegisterOutputType(DetachWorkGroupPolicyOperationArrayOutput{})
	pulumi.RegisterOutputType(DetachWorkGroupPolicyOperationMapOutput{})
}
