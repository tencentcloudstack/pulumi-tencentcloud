// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dlc updateRowFilterOperation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dlc.NewUpdateRowFilterOperation(ctx, "updateRowFilterOperation", &Dlc.UpdateRowFilterOperationArgs{
//				Policy: &dlc.UpdateRowFilterOperationPolicyArgs{
//					Catalog:    pulumi.String("DataLakeCatalog"),
//					Column:     pulumi.String(""),
//					Database:   pulumi.String("test_iac_keep"),
//					Function:   pulumi.String(""),
//					Mode:       pulumi.String("SENIOR"),
//					Operation:  pulumi.String("value!=\"0\""),
//					PolicyType: pulumi.String("ROWFILTER"),
//					ReAuth:     pulumi.Bool(false),
//					Source:     pulumi.String("USER"),
//					Table:      pulumi.String("test_table"),
//					View:       pulumi.String(""),
//				},
//				PolicyId: pulumi.Int(103704),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type UpdateRowFilterOperation struct {
	pulumi.CustomResourceState

	// New filtering strategy.
	Policy UpdateRowFilterOperationPolicyOutput `pulumi:"policy"`
	// The id of the row filtering policy.
	PolicyId pulumi.IntOutput `pulumi:"policyId"`
}

// NewUpdateRowFilterOperation registers a new resource with the given unique name, arguments, and options.
func NewUpdateRowFilterOperation(ctx *pulumi.Context,
	name string, args *UpdateRowFilterOperationArgs, opts ...pulumi.ResourceOption) (*UpdateRowFilterOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource UpdateRowFilterOperation
	err := ctx.RegisterResource("tencentcloud:Dlc/updateRowFilterOperation:UpdateRowFilterOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUpdateRowFilterOperation gets an existing UpdateRowFilterOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUpdateRowFilterOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UpdateRowFilterOperationState, opts ...pulumi.ResourceOption) (*UpdateRowFilterOperation, error) {
	var resource UpdateRowFilterOperation
	err := ctx.ReadResource("tencentcloud:Dlc/updateRowFilterOperation:UpdateRowFilterOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UpdateRowFilterOperation resources.
type updateRowFilterOperationState struct {
	// New filtering strategy.
	Policy *UpdateRowFilterOperationPolicy `pulumi:"policy"`
	// The id of the row filtering policy.
	PolicyId *int `pulumi:"policyId"`
}

type UpdateRowFilterOperationState struct {
	// New filtering strategy.
	Policy UpdateRowFilterOperationPolicyPtrInput
	// The id of the row filtering policy.
	PolicyId pulumi.IntPtrInput
}

func (UpdateRowFilterOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*updateRowFilterOperationState)(nil)).Elem()
}

type updateRowFilterOperationArgs struct {
	// New filtering strategy.
	Policy UpdateRowFilterOperationPolicy `pulumi:"policy"`
	// The id of the row filtering policy.
	PolicyId int `pulumi:"policyId"`
}

// The set of arguments for constructing a UpdateRowFilterOperation resource.
type UpdateRowFilterOperationArgs struct {
	// New filtering strategy.
	Policy UpdateRowFilterOperationPolicyInput
	// The id of the row filtering policy.
	PolicyId pulumi.IntInput
}

func (UpdateRowFilterOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*updateRowFilterOperationArgs)(nil)).Elem()
}

type UpdateRowFilterOperationInput interface {
	pulumi.Input

	ToUpdateRowFilterOperationOutput() UpdateRowFilterOperationOutput
	ToUpdateRowFilterOperationOutputWithContext(ctx context.Context) UpdateRowFilterOperationOutput
}

func (*UpdateRowFilterOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateRowFilterOperation)(nil)).Elem()
}

func (i *UpdateRowFilterOperation) ToUpdateRowFilterOperationOutput() UpdateRowFilterOperationOutput {
	return i.ToUpdateRowFilterOperationOutputWithContext(context.Background())
}

func (i *UpdateRowFilterOperation) ToUpdateRowFilterOperationOutputWithContext(ctx context.Context) UpdateRowFilterOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateRowFilterOperationOutput)
}

// UpdateRowFilterOperationArrayInput is an input type that accepts UpdateRowFilterOperationArray and UpdateRowFilterOperationArrayOutput values.
// You can construct a concrete instance of `UpdateRowFilterOperationArrayInput` via:
//
//	UpdateRowFilterOperationArray{ UpdateRowFilterOperationArgs{...} }
type UpdateRowFilterOperationArrayInput interface {
	pulumi.Input

	ToUpdateRowFilterOperationArrayOutput() UpdateRowFilterOperationArrayOutput
	ToUpdateRowFilterOperationArrayOutputWithContext(context.Context) UpdateRowFilterOperationArrayOutput
}

type UpdateRowFilterOperationArray []UpdateRowFilterOperationInput

func (UpdateRowFilterOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpdateRowFilterOperation)(nil)).Elem()
}

func (i UpdateRowFilterOperationArray) ToUpdateRowFilterOperationArrayOutput() UpdateRowFilterOperationArrayOutput {
	return i.ToUpdateRowFilterOperationArrayOutputWithContext(context.Background())
}

func (i UpdateRowFilterOperationArray) ToUpdateRowFilterOperationArrayOutputWithContext(ctx context.Context) UpdateRowFilterOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateRowFilterOperationArrayOutput)
}

// UpdateRowFilterOperationMapInput is an input type that accepts UpdateRowFilterOperationMap and UpdateRowFilterOperationMapOutput values.
// You can construct a concrete instance of `UpdateRowFilterOperationMapInput` via:
//
//	UpdateRowFilterOperationMap{ "key": UpdateRowFilterOperationArgs{...} }
type UpdateRowFilterOperationMapInput interface {
	pulumi.Input

	ToUpdateRowFilterOperationMapOutput() UpdateRowFilterOperationMapOutput
	ToUpdateRowFilterOperationMapOutputWithContext(context.Context) UpdateRowFilterOperationMapOutput
}

type UpdateRowFilterOperationMap map[string]UpdateRowFilterOperationInput

func (UpdateRowFilterOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpdateRowFilterOperation)(nil)).Elem()
}

func (i UpdateRowFilterOperationMap) ToUpdateRowFilterOperationMapOutput() UpdateRowFilterOperationMapOutput {
	return i.ToUpdateRowFilterOperationMapOutputWithContext(context.Background())
}

func (i UpdateRowFilterOperationMap) ToUpdateRowFilterOperationMapOutputWithContext(ctx context.Context) UpdateRowFilterOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateRowFilterOperationMapOutput)
}

type UpdateRowFilterOperationOutput struct{ *pulumi.OutputState }

func (UpdateRowFilterOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateRowFilterOperation)(nil)).Elem()
}

func (o UpdateRowFilterOperationOutput) ToUpdateRowFilterOperationOutput() UpdateRowFilterOperationOutput {
	return o
}

func (o UpdateRowFilterOperationOutput) ToUpdateRowFilterOperationOutputWithContext(ctx context.Context) UpdateRowFilterOperationOutput {
	return o
}

// New filtering strategy.
func (o UpdateRowFilterOperationOutput) Policy() UpdateRowFilterOperationPolicyOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperation) UpdateRowFilterOperationPolicyOutput { return v.Policy }).(UpdateRowFilterOperationPolicyOutput)
}

// The id of the row filtering policy.
func (o UpdateRowFilterOperationOutput) PolicyId() pulumi.IntOutput {
	return o.ApplyT(func(v *UpdateRowFilterOperation) pulumi.IntOutput { return v.PolicyId }).(pulumi.IntOutput)
}

type UpdateRowFilterOperationArrayOutput struct{ *pulumi.OutputState }

func (UpdateRowFilterOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpdateRowFilterOperation)(nil)).Elem()
}

func (o UpdateRowFilterOperationArrayOutput) ToUpdateRowFilterOperationArrayOutput() UpdateRowFilterOperationArrayOutput {
	return o
}

func (o UpdateRowFilterOperationArrayOutput) ToUpdateRowFilterOperationArrayOutputWithContext(ctx context.Context) UpdateRowFilterOperationArrayOutput {
	return o
}

func (o UpdateRowFilterOperationArrayOutput) Index(i pulumi.IntInput) UpdateRowFilterOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UpdateRowFilterOperation {
		return vs[0].([]*UpdateRowFilterOperation)[vs[1].(int)]
	}).(UpdateRowFilterOperationOutput)
}

type UpdateRowFilterOperationMapOutput struct{ *pulumi.OutputState }

func (UpdateRowFilterOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpdateRowFilterOperation)(nil)).Elem()
}

func (o UpdateRowFilterOperationMapOutput) ToUpdateRowFilterOperationMapOutput() UpdateRowFilterOperationMapOutput {
	return o
}

func (o UpdateRowFilterOperationMapOutput) ToUpdateRowFilterOperationMapOutputWithContext(ctx context.Context) UpdateRowFilterOperationMapOutput {
	return o
}

func (o UpdateRowFilterOperationMapOutput) MapIndex(k pulumi.StringInput) UpdateRowFilterOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UpdateRowFilterOperation {
		return vs[0].(map[string]*UpdateRowFilterOperation)[vs[1].(string)]
	}).(UpdateRowFilterOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateRowFilterOperationInput)(nil)).Elem(), &UpdateRowFilterOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateRowFilterOperationArrayInput)(nil)).Elem(), UpdateRowFilterOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateRowFilterOperationMapInput)(nil)).Elem(), UpdateRowFilterOperationMap{})
	pulumi.RegisterOutputType(UpdateRowFilterOperationOutput{})
	pulumi.RegisterOutputType(UpdateRowFilterOperationArrayOutput{})
	pulumi.RegisterOutputType(UpdateRowFilterOperationMapOutput{})
}
