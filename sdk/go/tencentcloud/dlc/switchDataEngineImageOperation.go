// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dlc switchDataEngineImageOperation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dlc.NewSwitchDataEngineImageOperation(ctx, "switchDataEngineImageOperation", &Dlc.SwitchDataEngineImageOperationArgs{
//				DataEngineId:      pulumi.String("DataEngine-g5ds87d8"),
//				NewImageVersionId: pulumi.String("344ba1c6-b7a9-403a-a255-422fffed6d38"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SwitchDataEngineImageOperation struct {
	pulumi.CustomResourceState

	// Engine unique id.
	DataEngineId pulumi.StringOutput `pulumi:"dataEngineId"`
	// New image version id.
	NewImageVersionId pulumi.StringOutput `pulumi:"newImageVersionId"`
}

// NewSwitchDataEngineImageOperation registers a new resource with the given unique name, arguments, and options.
func NewSwitchDataEngineImageOperation(ctx *pulumi.Context,
	name string, args *SwitchDataEngineImageOperationArgs, opts ...pulumi.ResourceOption) (*SwitchDataEngineImageOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataEngineId == nil {
		return nil, errors.New("invalid value for required argument 'DataEngineId'")
	}
	if args.NewImageVersionId == nil {
		return nil, errors.New("invalid value for required argument 'NewImageVersionId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SwitchDataEngineImageOperation
	err := ctx.RegisterResource("tencentcloud:Dlc/switchDataEngineImageOperation:SwitchDataEngineImageOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitchDataEngineImageOperation gets an existing SwitchDataEngineImageOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitchDataEngineImageOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchDataEngineImageOperationState, opts ...pulumi.ResourceOption) (*SwitchDataEngineImageOperation, error) {
	var resource SwitchDataEngineImageOperation
	err := ctx.ReadResource("tencentcloud:Dlc/switchDataEngineImageOperation:SwitchDataEngineImageOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SwitchDataEngineImageOperation resources.
type switchDataEngineImageOperationState struct {
	// Engine unique id.
	DataEngineId *string `pulumi:"dataEngineId"`
	// New image version id.
	NewImageVersionId *string `pulumi:"newImageVersionId"`
}

type SwitchDataEngineImageOperationState struct {
	// Engine unique id.
	DataEngineId pulumi.StringPtrInput
	// New image version id.
	NewImageVersionId pulumi.StringPtrInput
}

func (SwitchDataEngineImageOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchDataEngineImageOperationState)(nil)).Elem()
}

type switchDataEngineImageOperationArgs struct {
	// Engine unique id.
	DataEngineId string `pulumi:"dataEngineId"`
	// New image version id.
	NewImageVersionId string `pulumi:"newImageVersionId"`
}

// The set of arguments for constructing a SwitchDataEngineImageOperation resource.
type SwitchDataEngineImageOperationArgs struct {
	// Engine unique id.
	DataEngineId pulumi.StringInput
	// New image version id.
	NewImageVersionId pulumi.StringInput
}

func (SwitchDataEngineImageOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchDataEngineImageOperationArgs)(nil)).Elem()
}

type SwitchDataEngineImageOperationInput interface {
	pulumi.Input

	ToSwitchDataEngineImageOperationOutput() SwitchDataEngineImageOperationOutput
	ToSwitchDataEngineImageOperationOutputWithContext(ctx context.Context) SwitchDataEngineImageOperationOutput
}

func (*SwitchDataEngineImageOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDataEngineImageOperation)(nil)).Elem()
}

func (i *SwitchDataEngineImageOperation) ToSwitchDataEngineImageOperationOutput() SwitchDataEngineImageOperationOutput {
	return i.ToSwitchDataEngineImageOperationOutputWithContext(context.Background())
}

func (i *SwitchDataEngineImageOperation) ToSwitchDataEngineImageOperationOutputWithContext(ctx context.Context) SwitchDataEngineImageOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDataEngineImageOperationOutput)
}

// SwitchDataEngineImageOperationArrayInput is an input type that accepts SwitchDataEngineImageOperationArray and SwitchDataEngineImageOperationArrayOutput values.
// You can construct a concrete instance of `SwitchDataEngineImageOperationArrayInput` via:
//
//	SwitchDataEngineImageOperationArray{ SwitchDataEngineImageOperationArgs{...} }
type SwitchDataEngineImageOperationArrayInput interface {
	pulumi.Input

	ToSwitchDataEngineImageOperationArrayOutput() SwitchDataEngineImageOperationArrayOutput
	ToSwitchDataEngineImageOperationArrayOutputWithContext(context.Context) SwitchDataEngineImageOperationArrayOutput
}

type SwitchDataEngineImageOperationArray []SwitchDataEngineImageOperationInput

func (SwitchDataEngineImageOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchDataEngineImageOperation)(nil)).Elem()
}

func (i SwitchDataEngineImageOperationArray) ToSwitchDataEngineImageOperationArrayOutput() SwitchDataEngineImageOperationArrayOutput {
	return i.ToSwitchDataEngineImageOperationArrayOutputWithContext(context.Background())
}

func (i SwitchDataEngineImageOperationArray) ToSwitchDataEngineImageOperationArrayOutputWithContext(ctx context.Context) SwitchDataEngineImageOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDataEngineImageOperationArrayOutput)
}

// SwitchDataEngineImageOperationMapInput is an input type that accepts SwitchDataEngineImageOperationMap and SwitchDataEngineImageOperationMapOutput values.
// You can construct a concrete instance of `SwitchDataEngineImageOperationMapInput` via:
//
//	SwitchDataEngineImageOperationMap{ "key": SwitchDataEngineImageOperationArgs{...} }
type SwitchDataEngineImageOperationMapInput interface {
	pulumi.Input

	ToSwitchDataEngineImageOperationMapOutput() SwitchDataEngineImageOperationMapOutput
	ToSwitchDataEngineImageOperationMapOutputWithContext(context.Context) SwitchDataEngineImageOperationMapOutput
}

type SwitchDataEngineImageOperationMap map[string]SwitchDataEngineImageOperationInput

func (SwitchDataEngineImageOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchDataEngineImageOperation)(nil)).Elem()
}

func (i SwitchDataEngineImageOperationMap) ToSwitchDataEngineImageOperationMapOutput() SwitchDataEngineImageOperationMapOutput {
	return i.ToSwitchDataEngineImageOperationMapOutputWithContext(context.Background())
}

func (i SwitchDataEngineImageOperationMap) ToSwitchDataEngineImageOperationMapOutputWithContext(ctx context.Context) SwitchDataEngineImageOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SwitchDataEngineImageOperationMapOutput)
}

type SwitchDataEngineImageOperationOutput struct{ *pulumi.OutputState }

func (SwitchDataEngineImageOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SwitchDataEngineImageOperation)(nil)).Elem()
}

func (o SwitchDataEngineImageOperationOutput) ToSwitchDataEngineImageOperationOutput() SwitchDataEngineImageOperationOutput {
	return o
}

func (o SwitchDataEngineImageOperationOutput) ToSwitchDataEngineImageOperationOutputWithContext(ctx context.Context) SwitchDataEngineImageOperationOutput {
	return o
}

// Engine unique id.
func (o SwitchDataEngineImageOperationOutput) DataEngineId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchDataEngineImageOperation) pulumi.StringOutput { return v.DataEngineId }).(pulumi.StringOutput)
}

// New image version id.
func (o SwitchDataEngineImageOperationOutput) NewImageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SwitchDataEngineImageOperation) pulumi.StringOutput { return v.NewImageVersionId }).(pulumi.StringOutput)
}

type SwitchDataEngineImageOperationArrayOutput struct{ *pulumi.OutputState }

func (SwitchDataEngineImageOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SwitchDataEngineImageOperation)(nil)).Elem()
}

func (o SwitchDataEngineImageOperationArrayOutput) ToSwitchDataEngineImageOperationArrayOutput() SwitchDataEngineImageOperationArrayOutput {
	return o
}

func (o SwitchDataEngineImageOperationArrayOutput) ToSwitchDataEngineImageOperationArrayOutputWithContext(ctx context.Context) SwitchDataEngineImageOperationArrayOutput {
	return o
}

func (o SwitchDataEngineImageOperationArrayOutput) Index(i pulumi.IntInput) SwitchDataEngineImageOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SwitchDataEngineImageOperation {
		return vs[0].([]*SwitchDataEngineImageOperation)[vs[1].(int)]
	}).(SwitchDataEngineImageOperationOutput)
}

type SwitchDataEngineImageOperationMapOutput struct{ *pulumi.OutputState }

func (SwitchDataEngineImageOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SwitchDataEngineImageOperation)(nil)).Elem()
}

func (o SwitchDataEngineImageOperationMapOutput) ToSwitchDataEngineImageOperationMapOutput() SwitchDataEngineImageOperationMapOutput {
	return o
}

func (o SwitchDataEngineImageOperationMapOutput) ToSwitchDataEngineImageOperationMapOutputWithContext(ctx context.Context) SwitchDataEngineImageOperationMapOutput {
	return o
}

func (o SwitchDataEngineImageOperationMapOutput) MapIndex(k pulumi.StringInput) SwitchDataEngineImageOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SwitchDataEngineImageOperation {
		return vs[0].(map[string]*SwitchDataEngineImageOperation)[vs[1].(string)]
	}).(SwitchDataEngineImageOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDataEngineImageOperationInput)(nil)).Elem(), &SwitchDataEngineImageOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDataEngineImageOperationArrayInput)(nil)).Elem(), SwitchDataEngineImageOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SwitchDataEngineImageOperationMapInput)(nil)).Elem(), SwitchDataEngineImageOperationMap{})
	pulumi.RegisterOutputType(SwitchDataEngineImageOperationOutput{})
	pulumi.RegisterOutputType(SwitchDataEngineImageOperationArrayOutput{})
	pulumi.RegisterOutputType(SwitchDataEngineImageOperationMapOutput{})
}
