// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dlc describeDataEngine
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dlc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dlc.GetDescribeDataEngine(ctx, &dlc.GetDescribeDataEngineArgs{
//				DataEngineName: "testSpark",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDescribeDataEngine(ctx *pulumi.Context, args *GetDescribeDataEngineArgs, opts ...pulumi.InvokeOption) (*GetDescribeDataEngineResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDescribeDataEngineResult
	err := ctx.Invoke("tencentcloud:Dlc/getDescribeDataEngine:getDescribeDataEngine", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDescribeDataEngine.
type GetDescribeDataEngineArgs struct {
	// Engine name.
	DataEngineName string `pulumi:"dataEngineName"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDescribeDataEngine.
type GetDescribeDataEngineResult struct {
	// Engine name.
	DataEngineName string `pulumi:"dataEngineName"`
	// Data engine details.
	DataEngines []GetDescribeDataEngineDataEngine `pulumi:"dataEngines"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetDescribeDataEngineOutput(ctx *pulumi.Context, args GetDescribeDataEngineOutputArgs, opts ...pulumi.InvokeOption) GetDescribeDataEngineResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDescribeDataEngineResult, error) {
			args := v.(GetDescribeDataEngineArgs)
			r, err := GetDescribeDataEngine(ctx, &args, opts...)
			var s GetDescribeDataEngineResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDescribeDataEngineResultOutput)
}

// A collection of arguments for invoking getDescribeDataEngine.
type GetDescribeDataEngineOutputArgs struct {
	// Engine name.
	DataEngineName pulumi.StringInput `pulumi:"dataEngineName"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetDescribeDataEngineOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineArgs)(nil)).Elem()
}

// A collection of values returned by getDescribeDataEngine.
type GetDescribeDataEngineResultOutput struct{ *pulumi.OutputState }

func (GetDescribeDataEngineResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescribeDataEngineResult)(nil)).Elem()
}

func (o GetDescribeDataEngineResultOutput) ToGetDescribeDataEngineResultOutput() GetDescribeDataEngineResultOutput {
	return o
}

func (o GetDescribeDataEngineResultOutput) ToGetDescribeDataEngineResultOutputWithContext(ctx context.Context) GetDescribeDataEngineResultOutput {
	return o
}

// Engine name.
func (o GetDescribeDataEngineResultOutput) DataEngineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineResult) string { return v.DataEngineName }).(pulumi.StringOutput)
}

// Data engine details.
func (o GetDescribeDataEngineResultOutput) DataEngines() GetDescribeDataEngineDataEngineArrayOutput {
	return o.ApplyT(func(v GetDescribeDataEngineResult) []GetDescribeDataEngineDataEngine { return v.DataEngines }).(GetDescribeDataEngineDataEngineArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDescribeDataEngineResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescribeDataEngineResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDescribeDataEngineResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDescribeDataEngineResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDescribeDataEngineResultOutput{})
}
