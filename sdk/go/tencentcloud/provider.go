// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tencentcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// The provider type for the tencentcloud package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// The name of the CVM instance CAM role. It can be sourced from the `TENCENTCLOUD_CAM_ROLE_NAME` environment variable.
	CamRoleName pulumi.StringPtrOutput `pulumi:"camRoleName"`
	// The cos domain of the API request, Default is `https://cos.{region}.myqcloud.com`, Other Examples:
	// `https://cluster-123456.cos-cdc.ap-guangzhou.myqcloud.com`.
	CosDomain pulumi.StringPtrOutput `pulumi:"cosDomain"`
	// The root domain of the API request, Default is `tencentcloudapi.com`.
	Domain pulumi.StringPtrOutput `pulumi:"domain"`
	// The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment
	// variable. If not set, the default profile created with `tccli configure` will be used.
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.
	Protocol pulumi.StringPtrOutput `pulumi:"protocol"`
	// This is the TencentCloud region. It can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The
	// default input value is ap-guangzhou.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// This is the TencentCloud access key. It can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.
	SecretId pulumi.StringPtrOutput `pulumi:"secretId"`
	// This is the TencentCloud secret key. It can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.
	SecretKey pulumi.StringPtrOutput `pulumi:"secretKey"`
	// TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN`
	// environment variable. Notice: for supported products, please refer to: [temporary key supported
	// products](https://intl.cloud.tencent.com/document/product/598/10588).
	SecurityToken pulumi.StringPtrOutput `pulumi:"securityToken"`
	// The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR`
	// environment variable. If not set this defaults to ~/.tccli.
	SharedCredentialsDir pulumi.StringPtrOutput `pulumi:"sharedCredentialsDir"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.Region == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_REGION"); d != nil {
			args.Region = pulumi.StringPtr(d.(string))
		}
	}
	if args.SecretId == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_SECRET_ID"); d != nil {
			args.SecretId = pulumi.StringPtr(d.(string))
		}
	}
	if args.SecretKey == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_SECRET_KEY"); d != nil {
			args.SecretKey = pulumi.StringPtr(d.(string))
		}
	}
	if args.SecurityToken == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "TENCENTCLOUD_SECURITY_TOKEN"); d != nil {
			args.SecurityToken = pulumi.StringPtr(d.(string))
		}
	}
	if args.SecretKey != nil {
		args.SecretKey = pulumi.ToSecret(args.SecretKey).(pulumi.StringPtrInput)
	}
	if args.SecurityToken != nil {
		args.SecurityToken = pulumi.ToSecret(args.SecurityToken).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretKey",
		"securityToken",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:tencentcloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// The `assume_role` block. If provided, terraform will attempt to assume this role using the supplied credentials.
	AssumeRole *ProviderAssumeRole `pulumi:"assumeRole"`
	// The `assume_role_with_saml` block. If provided, terraform will attempt to assume this role using the supplied
	// credentials.
	AssumeRoleWithSaml *ProviderAssumeRoleWithSaml `pulumi:"assumeRoleWithSaml"`
	// The `assume_role_with_web_identity` block. If provided, terraform will attempt to assume this role using the supplied
	// credentials.
	AssumeRoleWithWebIdentity *ProviderAssumeRoleWithWebIdentity `pulumi:"assumeRoleWithWebIdentity"`
	// The name of the CVM instance CAM role. It can be sourced from the `TENCENTCLOUD_CAM_ROLE_NAME` environment variable.
	CamRoleName *string `pulumi:"camRoleName"`
	// The cos domain of the API request, Default is `https://cos.{region}.myqcloud.com`, Other Examples:
	// `https://cluster-123456.cos-cdc.ap-guangzhou.myqcloud.com`.
	CosDomain *string `pulumi:"cosDomain"`
	// The root domain of the API request, Default is `tencentcloudapi.com`.
	Domain *string `pulumi:"domain"`
	// Whether to enable pod oidc.
	EnablePodOidc *bool `pulumi:"enablePodOidc"`
	// The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment
	// variable. If not set, the default profile created with `tccli configure` will be used.
	Profile *string `pulumi:"profile"`
	// The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.
	Protocol *string `pulumi:"protocol"`
	// This is the TencentCloud region. It can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The
	// default input value is ap-guangzhou.
	Region *string `pulumi:"region"`
	// This is the TencentCloud access key. It can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.
	SecretId *string `pulumi:"secretId"`
	// This is the TencentCloud secret key. It can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.
	SecretKey *string `pulumi:"secretKey"`
	// TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN`
	// environment variable. Notice: for supported products, please refer to: [temporary key supported
	// products](https://intl.cloud.tencent.com/document/product/598/10588).
	SecurityToken *string `pulumi:"securityToken"`
	// The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR`
	// environment variable. If not set this defaults to ~/.tccli.
	SharedCredentialsDir *string `pulumi:"sharedCredentialsDir"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// The `assume_role` block. If provided, terraform will attempt to assume this role using the supplied credentials.
	AssumeRole ProviderAssumeRolePtrInput
	// The `assume_role_with_saml` block. If provided, terraform will attempt to assume this role using the supplied
	// credentials.
	AssumeRoleWithSaml ProviderAssumeRoleWithSamlPtrInput
	// The `assume_role_with_web_identity` block. If provided, terraform will attempt to assume this role using the supplied
	// credentials.
	AssumeRoleWithWebIdentity ProviderAssumeRoleWithWebIdentityPtrInput
	// The name of the CVM instance CAM role. It can be sourced from the `TENCENTCLOUD_CAM_ROLE_NAME` environment variable.
	CamRoleName pulumi.StringPtrInput
	// The cos domain of the API request, Default is `https://cos.{region}.myqcloud.com`, Other Examples:
	// `https://cluster-123456.cos-cdc.ap-guangzhou.myqcloud.com`.
	CosDomain pulumi.StringPtrInput
	// The root domain of the API request, Default is `tencentcloudapi.com`.
	Domain pulumi.StringPtrInput
	// Whether to enable pod oidc.
	EnablePodOidc pulumi.BoolPtrInput
	// The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment
	// variable. If not set, the default profile created with `tccli configure` will be used.
	Profile pulumi.StringPtrInput
	// The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.
	Protocol pulumi.StringPtrInput
	// This is the TencentCloud region. It can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The
	// default input value is ap-guangzhou.
	Region pulumi.StringPtrInput
	// This is the TencentCloud access key. It can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.
	SecretId pulumi.StringPtrInput
	// This is the TencentCloud secret key. It can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.
	SecretKey pulumi.StringPtrInput
	// TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN`
	// environment variable. Notice: for supported products, please refer to: [temporary key supported
	// products](https://intl.cloud.tencent.com/document/product/598/10588).
	SecurityToken pulumi.StringPtrInput
	// The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR`
	// environment variable. If not set this defaults to ~/.tccli.
	SharedCredentialsDir pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The name of the CVM instance CAM role. It can be sourced from the `TENCENTCLOUD_CAM_ROLE_NAME` environment variable.
func (o ProviderOutput) CamRoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.CamRoleName }).(pulumi.StringPtrOutput)
}

// The cos domain of the API request, Default is `https://cos.{region}.myqcloud.com`, Other Examples:
// `https://cluster-123456.cos-cdc.ap-guangzhou.myqcloud.com`.
func (o ProviderOutput) CosDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.CosDomain }).(pulumi.StringPtrOutput)
}

// The root domain of the API request, Default is `tencentcloudapi.com`.
func (o ProviderOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Domain }).(pulumi.StringPtrOutput)
}

// The profile name as set in the shared credentials. It can also be sourced from the `TENCENTCLOUD_PROFILE` environment
// variable. If not set, the default profile created with `tccli configure` will be used.
func (o ProviderOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// The protocol of the API request. Valid values: `HTTP` and `HTTPS`. Default is `HTTPS`.
func (o ProviderOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Protocol }).(pulumi.StringPtrOutput)
}

// This is the TencentCloud region. It can also be sourced from the `TENCENTCLOUD_REGION` environment variables. The
// default input value is ap-guangzhou.
func (o ProviderOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// This is the TencentCloud access key. It can also be sourced from the `TENCENTCLOUD_SECRET_ID` environment variable.
func (o ProviderOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SecretId }).(pulumi.StringPtrOutput)
}

// This is the TencentCloud secret key. It can also be sourced from the `TENCENTCLOUD_SECRET_KEY` environment variable.
func (o ProviderOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// TencentCloud Security Token of temporary access credentials. It can be sourced from the `TENCENTCLOUD_SECURITY_TOKEN`
// environment variable. Notice: for supported products, please refer to: [temporary key supported
// products](https://intl.cloud.tencent.com/document/product/598/10588).
func (o ProviderOutput) SecurityToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SecurityToken }).(pulumi.StringPtrOutput)
}

// The directory of the shared credentials. It can also be sourced from the `TENCENTCLOUD_SHARED_CREDENTIALS_DIR`
// environment variable. If not set this defaults to ~/.tccli.
func (o ProviderOutput) SharedCredentialsDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SharedCredentialsDir }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
