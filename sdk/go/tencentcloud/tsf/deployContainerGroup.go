// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tsf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tsf deployContainerGroup
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tsf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tsf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tsf.NewDeployContainerGroup(ctx, "deployContainerGroup", &Tsf.DeployContainerGroupArgs{
//				AgentCpuLimit:   pulumi.String("0.2"),
//				AgentCpuRequest: pulumi.String("0.1"),
//				AgentMemLimit:   pulumi.String("400"),
//				AgentMemRequest: pulumi.String("125"),
//				CpuLimit:        pulumi.String("0.5"),
//				CpuRequest:      pulumi.String("0.25"),
//				DeployAgent:     pulumi.Bool(true),
//				DoNotStart:      pulumi.Bool(false),
//				GroupId:         pulumi.String("group-yqml6w3a"),
//				HealthCheckSettings: &tsf.DeployContainerGroupHealthCheckSettingsArgs{
//					ReadinessProbe: &tsf.DeployContainerGroupHealthCheckSettingsReadinessProbeArgs{
//						ActionType:          pulumi.String("TCP"),
//						FailureThreshold:    pulumi.Int(3),
//						InitialDelaySeconds: pulumi.Int(0),
//						Path:                pulumi.String("/"),
//						PeriodSeconds:       pulumi.Int(30),
//						Port:                pulumi.Int(80),
//						Scheme:              pulumi.String("HTTP"),
//						SuccessThreshold:    pulumi.Int(1),
//						TimeoutSeconds:      pulumi.Int(3),
//						Type:                pulumi.String("TSF_DEFAULT"),
//					},
//				},
//				InstanceNum:    pulumi.Int(1),
//				JvmOpts:        pulumi.String("-Xms128m -Xmx512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=512m"),
//				MaxSurge:       pulumi.String(fmt.Sprintf("%v%v", "25", "%")),
//				MaxUnavailable: pulumi.String("0"),
//				MemLimit:       pulumi.String("1280"),
//				MemRequest:     pulumi.String("640"),
//				RepoType:       pulumi.String("personal"),
//				Reponame:       pulumi.String("tsf_100011913960/terraform"),
//				SchedulingStrategy: &tsf.DeployContainerGroupSchedulingStrategyArgs{
//					Type: pulumi.String("NONE"),
//				},
//				Server: pulumi.String("ccr.ccs.tencentyun.com"),
//				ServiceSetting: &tsf.DeployContainerGroupServiceSettingArgs{
//					AccessType:          pulumi.Int(1),
//					AllowDeleteService:  pulumi.Bool(true),
//					DisableService:      pulumi.Bool(false),
//					HeadlessService:     pulumi.Bool(false),
//					OpenSessionAffinity: pulumi.Bool(false),
//					ProtocolPorts: tsf.DeployContainerGroupServiceSettingProtocolPortArray{
//						&tsf.DeployContainerGroupServiceSettingProtocolPortArgs{
//							NodePort:   pulumi.Int(30001),
//							Port:       pulumi.Int(18081),
//							Protocol:   pulumi.String("TCP"),
//							TargetPort: pulumi.Int(18081),
//						},
//					},
//					SessionAffinityTimeoutSeconds: pulumi.Int(10800),
//					SubnetId:                      pulumi.String(""),
//				},
//				TagName:     pulumi.String("terraform-only-1"),
//				UpdateIvl:   pulumi.Int(10),
//				UpdateType:  pulumi.Int(1),
//				VolumeClean: pulumi.Bool(false),
//				WarmupSetting: &tsf.DeployContainerGroupWarmupSettingArgs{
//					Enabled: pulumi.Bool(false),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DeployContainerGroup struct {
	pulumi.CustomResourceState

	// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
	AgentCpuLimit pulumi.StringOutput `pulumi:"agentCpuLimit"`
	// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
	AgentCpuRequest pulumi.StringOutput `pulumi:"agentCpuRequest"`
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	AgentMemLimit pulumi.StringOutput `pulumi:"agentMemLimit"`
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	AgentMemRequest pulumi.StringOutput `pulumi:"agentMemRequest"`
	// javaagent info: SERVICE_AGENT/OT_AGENT.
	AgentProfileLists DeployContainerGroupAgentProfileListArrayOutput `pulumi:"agentProfileLists"`
	// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	CpuLimit pulumi.StringOutput `pulumi:"cpuLimit"`
	// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is 0.25.
	CpuRequest pulumi.StringOutput `pulumi:"cpuRequest"`
	// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by default.
	DeployAgent pulumi.BoolOutput `pulumi:"deployAgent"`
	// Not start right away.
	DoNotStart pulumi.BoolOutput `pulumi:"doNotStart"`
	// The environment variables that the application runs in the deployment group. If this parameter is not specified, no additional environment variables are set by default.
	Envs DeployContainerGroupEnvArrayOutput `pulumi:"envs"`
	// group Id.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The configuration information for health checks. If this parameter is not specified, the health check is not set by default.
	HealthCheckSettings DeployContainerGroupHealthCheckSettingsPtrOutput `pulumi:"healthCheckSettings"`
	// Whether to perform incremental deployment. The default value is false, which means full update.
	IncrementalDeployment pulumi.BoolOutput `pulumi:"incrementalDeployment"`
	// instance number.
	InstanceNum pulumi.IntOutput `pulumi:"instanceNum"`
	// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	IstioCpuLimit pulumi.StringOutput `pulumi:"istioCpuLimit"`
	// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in Kubernetes.
	IstioCpuRequest pulumi.StringOutput `pulumi:"istioCpuRequest"`
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemLimit pulumi.StringOutput `pulumi:"istioMemLimit"`
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemRequest pulumi.StringOutput `pulumi:"istioMemRequest"`
	// jvm options.
	JvmOpts pulumi.StringOutput `pulumi:"jvmOpts"`
	// MaxSurge parameter in Kubernetes rolling update strategy.
	MaxSurge pulumi.StringOutput `pulumi:"maxSurge"`
	// MaxUnavailable parameter in Kubernetes rolling update strategy.
	MaxUnavailable pulumi.StringOutput `pulumi:"maxUnavailable"`
	// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	MemLimit pulumi.StringOutput `pulumi:"memLimit"`
	// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value is 640 MiB.
	MemRequest pulumi.StringOutput `pulumi:"memRequest"`
	// (Priority use) New image name, such as /tsf/nginx.
	RepoName pulumi.StringOutput `pulumi:"repoName"`
	// repo type, tcr or leave it blank.
	RepoType pulumi.StringOutput `pulumi:"repoType"`
	// old image name, eg: /tsf/server.
	Reponame pulumi.StringOutput `pulumi:"reponame"`
	// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
	SchedulingStrategy DeployContainerGroupSchedulingStrategyOutput `pulumi:"schedulingStrategy"`
	// image server.
	Server pulumi.StringOutput `pulumi:"server"`
	// Network settings for container deployment groups.
	ServiceSetting DeployContainerGroupServiceSettingOutput `pulumi:"serviceSetting"`
	// image version name, v1.
	TagName pulumi.StringOutput `pulumi:"tagName"`
	// update Interval, is required when rolling update.
	UpdateIvl pulumi.IntOutput `pulumi:"updateIvl"`
	// Update method: 0 for fast update, 1 for rolling update.
	UpdateType pulumi.IntOutput `pulumi:"updateType"`
	// Whether to clear the volume information. Default is false.
	VolumeClean pulumi.BoolOutput `pulumi:"volumeClean"`
	// Volume information, as a list.
	VolumeInfoLists DeployContainerGroupVolumeInfoListArrayOutput `pulumi:"volumeInfoLists"`
	// Volume mount point information, list type.
	VolumeMountInfoLists DeployContainerGroupVolumeMountInfoListArrayOutput `pulumi:"volumeMountInfoLists"`
	// warmup setting.
	WarmupSetting DeployContainerGroupWarmupSettingOutput `pulumi:"warmupSetting"`
}

// NewDeployContainerGroup registers a new resource with the given unique name, arguments, and options.
func NewDeployContainerGroup(ctx *pulumi.Context,
	name string, args *DeployContainerGroupArgs, opts ...pulumi.ResourceOption) (*DeployContainerGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.InstanceNum == nil {
		return nil, errors.New("invalid value for required argument 'InstanceNum'")
	}
	if args.TagName == nil {
		return nil, errors.New("invalid value for required argument 'TagName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DeployContainerGroup
	err := ctx.RegisterResource("tencentcloud:Tsf/deployContainerGroup:DeployContainerGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployContainerGroup gets an existing DeployContainerGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployContainerGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeployContainerGroupState, opts ...pulumi.ResourceOption) (*DeployContainerGroup, error) {
	var resource DeployContainerGroup
	err := ctx.ReadResource("tencentcloud:Tsf/deployContainerGroup:DeployContainerGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeployContainerGroup resources.
type deployContainerGroupState struct {
	// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
	AgentCpuLimit *string `pulumi:"agentCpuLimit"`
	// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
	AgentCpuRequest *string `pulumi:"agentCpuRequest"`
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	AgentMemLimit *string `pulumi:"agentMemLimit"`
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	AgentMemRequest *string `pulumi:"agentMemRequest"`
	// javaagent info: SERVICE_AGENT/OT_AGENT.
	AgentProfileLists []DeployContainerGroupAgentProfileList `pulumi:"agentProfileLists"`
	// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	CpuLimit *string `pulumi:"cpuLimit"`
	// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is 0.25.
	CpuRequest *string `pulumi:"cpuRequest"`
	// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by default.
	DeployAgent *bool `pulumi:"deployAgent"`
	// Not start right away.
	DoNotStart *bool `pulumi:"doNotStart"`
	// The environment variables that the application runs in the deployment group. If this parameter is not specified, no additional environment variables are set by default.
	Envs []DeployContainerGroupEnv `pulumi:"envs"`
	// group Id.
	GroupId *string `pulumi:"groupId"`
	// The configuration information for health checks. If this parameter is not specified, the health check is not set by default.
	HealthCheckSettings *DeployContainerGroupHealthCheckSettings `pulumi:"healthCheckSettings"`
	// Whether to perform incremental deployment. The default value is false, which means full update.
	IncrementalDeployment *bool `pulumi:"incrementalDeployment"`
	// instance number.
	InstanceNum *int `pulumi:"instanceNum"`
	// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	IstioCpuLimit *string `pulumi:"istioCpuLimit"`
	// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in Kubernetes.
	IstioCpuRequest *string `pulumi:"istioCpuRequest"`
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemLimit *string `pulumi:"istioMemLimit"`
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemRequest *string `pulumi:"istioMemRequest"`
	// jvm options.
	JvmOpts *string `pulumi:"jvmOpts"`
	// MaxSurge parameter in Kubernetes rolling update strategy.
	MaxSurge *string `pulumi:"maxSurge"`
	// MaxUnavailable parameter in Kubernetes rolling update strategy.
	MaxUnavailable *string `pulumi:"maxUnavailable"`
	// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	MemLimit *string `pulumi:"memLimit"`
	// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value is 640 MiB.
	MemRequest *string `pulumi:"memRequest"`
	// (Priority use) New image name, such as /tsf/nginx.
	RepoName *string `pulumi:"repoName"`
	// repo type, tcr or leave it blank.
	RepoType *string `pulumi:"repoType"`
	// old image name, eg: /tsf/server.
	Reponame *string `pulumi:"reponame"`
	// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
	SchedulingStrategy *DeployContainerGroupSchedulingStrategy `pulumi:"schedulingStrategy"`
	// image server.
	Server *string `pulumi:"server"`
	// Network settings for container deployment groups.
	ServiceSetting *DeployContainerGroupServiceSetting `pulumi:"serviceSetting"`
	// image version name, v1.
	TagName *string `pulumi:"tagName"`
	// update Interval, is required when rolling update.
	UpdateIvl *int `pulumi:"updateIvl"`
	// Update method: 0 for fast update, 1 for rolling update.
	UpdateType *int `pulumi:"updateType"`
	// Whether to clear the volume information. Default is false.
	VolumeClean *bool `pulumi:"volumeClean"`
	// Volume information, as a list.
	VolumeInfoLists []DeployContainerGroupVolumeInfoList `pulumi:"volumeInfoLists"`
	// Volume mount point information, list type.
	VolumeMountInfoLists []DeployContainerGroupVolumeMountInfoList `pulumi:"volumeMountInfoLists"`
	// warmup setting.
	WarmupSetting *DeployContainerGroupWarmupSetting `pulumi:"warmupSetting"`
}

type DeployContainerGroupState struct {
	// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
	AgentCpuLimit pulumi.StringPtrInput
	// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
	AgentCpuRequest pulumi.StringPtrInput
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	AgentMemLimit pulumi.StringPtrInput
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	AgentMemRequest pulumi.StringPtrInput
	// javaagent info: SERVICE_AGENT/OT_AGENT.
	AgentProfileLists DeployContainerGroupAgentProfileListArrayInput
	// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	CpuLimit pulumi.StringPtrInput
	// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is 0.25.
	CpuRequest pulumi.StringPtrInput
	// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by default.
	DeployAgent pulumi.BoolPtrInput
	// Not start right away.
	DoNotStart pulumi.BoolPtrInput
	// The environment variables that the application runs in the deployment group. If this parameter is not specified, no additional environment variables are set by default.
	Envs DeployContainerGroupEnvArrayInput
	// group Id.
	GroupId pulumi.StringPtrInput
	// The configuration information for health checks. If this parameter is not specified, the health check is not set by default.
	HealthCheckSettings DeployContainerGroupHealthCheckSettingsPtrInput
	// Whether to perform incremental deployment. The default value is false, which means full update.
	IncrementalDeployment pulumi.BoolPtrInput
	// instance number.
	InstanceNum pulumi.IntPtrInput
	// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	IstioCpuLimit pulumi.StringPtrInput
	// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in Kubernetes.
	IstioCpuRequest pulumi.StringPtrInput
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemLimit pulumi.StringPtrInput
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemRequest pulumi.StringPtrInput
	// jvm options.
	JvmOpts pulumi.StringPtrInput
	// MaxSurge parameter in Kubernetes rolling update strategy.
	MaxSurge pulumi.StringPtrInput
	// MaxUnavailable parameter in Kubernetes rolling update strategy.
	MaxUnavailable pulumi.StringPtrInput
	// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	MemLimit pulumi.StringPtrInput
	// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value is 640 MiB.
	MemRequest pulumi.StringPtrInput
	// (Priority use) New image name, such as /tsf/nginx.
	RepoName pulumi.StringPtrInput
	// repo type, tcr or leave it blank.
	RepoType pulumi.StringPtrInput
	// old image name, eg: /tsf/server.
	Reponame pulumi.StringPtrInput
	// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
	SchedulingStrategy DeployContainerGroupSchedulingStrategyPtrInput
	// image server.
	Server pulumi.StringPtrInput
	// Network settings for container deployment groups.
	ServiceSetting DeployContainerGroupServiceSettingPtrInput
	// image version name, v1.
	TagName pulumi.StringPtrInput
	// update Interval, is required when rolling update.
	UpdateIvl pulumi.IntPtrInput
	// Update method: 0 for fast update, 1 for rolling update.
	UpdateType pulumi.IntPtrInput
	// Whether to clear the volume information. Default is false.
	VolumeClean pulumi.BoolPtrInput
	// Volume information, as a list.
	VolumeInfoLists DeployContainerGroupVolumeInfoListArrayInput
	// Volume mount point information, list type.
	VolumeMountInfoLists DeployContainerGroupVolumeMountInfoListArrayInput
	// warmup setting.
	WarmupSetting DeployContainerGroupWarmupSettingPtrInput
}

func (DeployContainerGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*deployContainerGroupState)(nil)).Elem()
}

type deployContainerGroupArgs struct {
	// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
	AgentCpuLimit *string `pulumi:"agentCpuLimit"`
	// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
	AgentCpuRequest *string `pulumi:"agentCpuRequest"`
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	AgentMemLimit *string `pulumi:"agentMemLimit"`
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	AgentMemRequest *string `pulumi:"agentMemRequest"`
	// javaagent info: SERVICE_AGENT/OT_AGENT.
	AgentProfileLists []DeployContainerGroupAgentProfileList `pulumi:"agentProfileLists"`
	// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	CpuLimit *string `pulumi:"cpuLimit"`
	// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is 0.25.
	CpuRequest *string `pulumi:"cpuRequest"`
	// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by default.
	DeployAgent *bool `pulumi:"deployAgent"`
	// Not start right away.
	DoNotStart *bool `pulumi:"doNotStart"`
	// The environment variables that the application runs in the deployment group. If this parameter is not specified, no additional environment variables are set by default.
	Envs []DeployContainerGroupEnv `pulumi:"envs"`
	// group Id.
	GroupId string `pulumi:"groupId"`
	// The configuration information for health checks. If this parameter is not specified, the health check is not set by default.
	HealthCheckSettings *DeployContainerGroupHealthCheckSettings `pulumi:"healthCheckSettings"`
	// Whether to perform incremental deployment. The default value is false, which means full update.
	IncrementalDeployment *bool `pulumi:"incrementalDeployment"`
	// instance number.
	InstanceNum int `pulumi:"instanceNum"`
	// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	IstioCpuLimit *string `pulumi:"istioCpuLimit"`
	// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in Kubernetes.
	IstioCpuRequest *string `pulumi:"istioCpuRequest"`
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemLimit *string `pulumi:"istioMemLimit"`
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemRequest *string `pulumi:"istioMemRequest"`
	// jvm options.
	JvmOpts *string `pulumi:"jvmOpts"`
	// MaxSurge parameter in Kubernetes rolling update strategy.
	MaxSurge *string `pulumi:"maxSurge"`
	// MaxUnavailable parameter in Kubernetes rolling update strategy.
	MaxUnavailable *string `pulumi:"maxUnavailable"`
	// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	MemLimit *string `pulumi:"memLimit"`
	// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value is 640 MiB.
	MemRequest *string `pulumi:"memRequest"`
	// (Priority use) New image name, such as /tsf/nginx.
	RepoName *string `pulumi:"repoName"`
	// repo type, tcr or leave it blank.
	RepoType *string `pulumi:"repoType"`
	// old image name, eg: /tsf/server.
	Reponame *string `pulumi:"reponame"`
	// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
	SchedulingStrategy *DeployContainerGroupSchedulingStrategy `pulumi:"schedulingStrategy"`
	// image server.
	Server *string `pulumi:"server"`
	// Network settings for container deployment groups.
	ServiceSetting *DeployContainerGroupServiceSetting `pulumi:"serviceSetting"`
	// image version name, v1.
	TagName string `pulumi:"tagName"`
	// update Interval, is required when rolling update.
	UpdateIvl *int `pulumi:"updateIvl"`
	// Update method: 0 for fast update, 1 for rolling update.
	UpdateType *int `pulumi:"updateType"`
	// Whether to clear the volume information. Default is false.
	VolumeClean *bool `pulumi:"volumeClean"`
	// Volume information, as a list.
	VolumeInfoLists []DeployContainerGroupVolumeInfoList `pulumi:"volumeInfoLists"`
	// Volume mount point information, list type.
	VolumeMountInfoLists []DeployContainerGroupVolumeMountInfoList `pulumi:"volumeMountInfoLists"`
	// warmup setting.
	WarmupSetting *DeployContainerGroupWarmupSetting `pulumi:"warmupSetting"`
}

// The set of arguments for constructing a DeployContainerGroup resource.
type DeployContainerGroupArgs struct {
	// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
	AgentCpuLimit pulumi.StringPtrInput
	// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
	AgentCpuRequest pulumi.StringPtrInput
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	AgentMemLimit pulumi.StringPtrInput
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	AgentMemRequest pulumi.StringPtrInput
	// javaagent info: SERVICE_AGENT/OT_AGENT.
	AgentProfileLists DeployContainerGroupAgentProfileListArrayInput
	// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	CpuLimit pulumi.StringPtrInput
	// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is 0.25.
	CpuRequest pulumi.StringPtrInput
	// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by default.
	DeployAgent pulumi.BoolPtrInput
	// Not start right away.
	DoNotStart pulumi.BoolPtrInput
	// The environment variables that the application runs in the deployment group. If this parameter is not specified, no additional environment variables are set by default.
	Envs DeployContainerGroupEnvArrayInput
	// group Id.
	GroupId pulumi.StringInput
	// The configuration information for health checks. If this parameter is not specified, the health check is not set by default.
	HealthCheckSettings DeployContainerGroupHealthCheckSettingsPtrInput
	// Whether to perform incremental deployment. The default value is false, which means full update.
	IncrementalDeployment pulumi.BoolPtrInput
	// instance number.
	InstanceNum pulumi.IntInput
	// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
	IstioCpuLimit pulumi.StringPtrInput
	// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in Kubernetes.
	IstioCpuRequest pulumi.StringPtrInput
	// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemLimit pulumi.StringPtrInput
	// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
	IstioMemRequest pulumi.StringPtrInput
	// jvm options.
	JvmOpts pulumi.StringPtrInput
	// MaxSurge parameter in Kubernetes rolling update strategy.
	MaxSurge pulumi.StringPtrInput
	// MaxUnavailable parameter in Kubernetes rolling update strategy.
	MaxUnavailable pulumi.StringPtrInput
	// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
	MemLimit pulumi.StringPtrInput
	// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value is 640 MiB.
	MemRequest pulumi.StringPtrInput
	// (Priority use) New image name, such as /tsf/nginx.
	RepoName pulumi.StringPtrInput
	// repo type, tcr or leave it blank.
	RepoType pulumi.StringPtrInput
	// old image name, eg: /tsf/server.
	Reponame pulumi.StringPtrInput
	// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
	SchedulingStrategy DeployContainerGroupSchedulingStrategyPtrInput
	// image server.
	Server pulumi.StringPtrInput
	// Network settings for container deployment groups.
	ServiceSetting DeployContainerGroupServiceSettingPtrInput
	// image version name, v1.
	TagName pulumi.StringInput
	// update Interval, is required when rolling update.
	UpdateIvl pulumi.IntPtrInput
	// Update method: 0 for fast update, 1 for rolling update.
	UpdateType pulumi.IntPtrInput
	// Whether to clear the volume information. Default is false.
	VolumeClean pulumi.BoolPtrInput
	// Volume information, as a list.
	VolumeInfoLists DeployContainerGroupVolumeInfoListArrayInput
	// Volume mount point information, list type.
	VolumeMountInfoLists DeployContainerGroupVolumeMountInfoListArrayInput
	// warmup setting.
	WarmupSetting DeployContainerGroupWarmupSettingPtrInput
}

func (DeployContainerGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deployContainerGroupArgs)(nil)).Elem()
}

type DeployContainerGroupInput interface {
	pulumi.Input

	ToDeployContainerGroupOutput() DeployContainerGroupOutput
	ToDeployContainerGroupOutputWithContext(ctx context.Context) DeployContainerGroupOutput
}

func (*DeployContainerGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployContainerGroup)(nil)).Elem()
}

func (i *DeployContainerGroup) ToDeployContainerGroupOutput() DeployContainerGroupOutput {
	return i.ToDeployContainerGroupOutputWithContext(context.Background())
}

func (i *DeployContainerGroup) ToDeployContainerGroupOutputWithContext(ctx context.Context) DeployContainerGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployContainerGroupOutput)
}

// DeployContainerGroupArrayInput is an input type that accepts DeployContainerGroupArray and DeployContainerGroupArrayOutput values.
// You can construct a concrete instance of `DeployContainerGroupArrayInput` via:
//
//	DeployContainerGroupArray{ DeployContainerGroupArgs{...} }
type DeployContainerGroupArrayInput interface {
	pulumi.Input

	ToDeployContainerGroupArrayOutput() DeployContainerGroupArrayOutput
	ToDeployContainerGroupArrayOutputWithContext(context.Context) DeployContainerGroupArrayOutput
}

type DeployContainerGroupArray []DeployContainerGroupInput

func (DeployContainerGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployContainerGroup)(nil)).Elem()
}

func (i DeployContainerGroupArray) ToDeployContainerGroupArrayOutput() DeployContainerGroupArrayOutput {
	return i.ToDeployContainerGroupArrayOutputWithContext(context.Background())
}

func (i DeployContainerGroupArray) ToDeployContainerGroupArrayOutputWithContext(ctx context.Context) DeployContainerGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployContainerGroupArrayOutput)
}

// DeployContainerGroupMapInput is an input type that accepts DeployContainerGroupMap and DeployContainerGroupMapOutput values.
// You can construct a concrete instance of `DeployContainerGroupMapInput` via:
//
//	DeployContainerGroupMap{ "key": DeployContainerGroupArgs{...} }
type DeployContainerGroupMapInput interface {
	pulumi.Input

	ToDeployContainerGroupMapOutput() DeployContainerGroupMapOutput
	ToDeployContainerGroupMapOutputWithContext(context.Context) DeployContainerGroupMapOutput
}

type DeployContainerGroupMap map[string]DeployContainerGroupInput

func (DeployContainerGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployContainerGroup)(nil)).Elem()
}

func (i DeployContainerGroupMap) ToDeployContainerGroupMapOutput() DeployContainerGroupMapOutput {
	return i.ToDeployContainerGroupMapOutputWithContext(context.Background())
}

func (i DeployContainerGroupMap) ToDeployContainerGroupMapOutputWithContext(ctx context.Context) DeployContainerGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeployContainerGroupMapOutput)
}

type DeployContainerGroupOutput struct{ *pulumi.OutputState }

func (DeployContainerGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeployContainerGroup)(nil)).Elem()
}

func (o DeployContainerGroupOutput) ToDeployContainerGroupOutput() DeployContainerGroupOutput {
	return o
}

func (o DeployContainerGroupOutput) ToDeployContainerGroupOutputWithContext(ctx context.Context) DeployContainerGroupOutput {
	return o
}

// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
func (o DeployContainerGroupOutput) AgentCpuLimit() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.AgentCpuLimit }).(pulumi.StringOutput)
}

// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
func (o DeployContainerGroupOutput) AgentCpuRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.AgentCpuRequest }).(pulumi.StringOutput)
}

// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
func (o DeployContainerGroupOutput) AgentMemLimit() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.AgentMemLimit }).(pulumi.StringOutput)
}

// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
func (o DeployContainerGroupOutput) AgentMemRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.AgentMemRequest }).(pulumi.StringOutput)
}

// javaagent info: SERVICE_AGENT/OT_AGENT.
func (o DeployContainerGroupOutput) AgentProfileLists() DeployContainerGroupAgentProfileListArrayOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupAgentProfileListArrayOutput {
		return v.AgentProfileLists
	}).(DeployContainerGroupAgentProfileListArrayOutput)
}

// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
func (o DeployContainerGroupOutput) CpuLimit() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.CpuLimit }).(pulumi.StringOutput)
}

// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is 0.25.
func (o DeployContainerGroupOutput) CpuRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.CpuRequest }).(pulumi.StringOutput)
}

// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by default.
func (o DeployContainerGroupOutput) DeployAgent() pulumi.BoolOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.BoolOutput { return v.DeployAgent }).(pulumi.BoolOutput)
}

// Not start right away.
func (o DeployContainerGroupOutput) DoNotStart() pulumi.BoolOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.BoolOutput { return v.DoNotStart }).(pulumi.BoolOutput)
}

// The environment variables that the application runs in the deployment group. If this parameter is not specified, no additional environment variables are set by default.
func (o DeployContainerGroupOutput) Envs() DeployContainerGroupEnvArrayOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupEnvArrayOutput { return v.Envs }).(DeployContainerGroupEnvArrayOutput)
}

// group Id.
func (o DeployContainerGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The configuration information for health checks. If this parameter is not specified, the health check is not set by default.
func (o DeployContainerGroupOutput) HealthCheckSettings() DeployContainerGroupHealthCheckSettingsPtrOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupHealthCheckSettingsPtrOutput {
		return v.HealthCheckSettings
	}).(DeployContainerGroupHealthCheckSettingsPtrOutput)
}

// Whether to perform incremental deployment. The default value is false, which means full update.
func (o DeployContainerGroupOutput) IncrementalDeployment() pulumi.BoolOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.BoolOutput { return v.IncrementalDeployment }).(pulumi.BoolOutput)
}

// instance number.
func (o DeployContainerGroupOutput) InstanceNum() pulumi.IntOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.IntOutput { return v.InstanceNum }).(pulumi.IntOutput)
}

// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field in Kubernetes.
func (o DeployContainerGroupOutput) IstioCpuLimit() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.IstioCpuLimit }).(pulumi.StringOutput)
}

// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in Kubernetes.
func (o DeployContainerGroupOutput) IstioCpuRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.IstioCpuRequest }).(pulumi.StringOutput)
}

// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
func (o DeployContainerGroupOutput) IstioMemLimit() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.IstioMemLimit }).(pulumi.StringOutput)
}

// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
func (o DeployContainerGroupOutput) IstioMemRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.IstioMemRequest }).(pulumi.StringOutput)
}

// jvm options.
func (o DeployContainerGroupOutput) JvmOpts() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.JvmOpts }).(pulumi.StringOutput)
}

// MaxSurge parameter in Kubernetes rolling update strategy.
func (o DeployContainerGroupOutput) MaxSurge() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.MaxSurge }).(pulumi.StringOutput)
}

// MaxUnavailable parameter in Kubernetes rolling update strategy.
func (o DeployContainerGroupOutput) MaxUnavailable() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.MaxUnavailable }).(pulumi.StringOutput)
}

// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it defaults to twice the request.
func (o DeployContainerGroupOutput) MemLimit() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.MemLimit }).(pulumi.StringOutput)
}

// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value is 640 MiB.
func (o DeployContainerGroupOutput) MemRequest() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.MemRequest }).(pulumi.StringOutput)
}

// (Priority use) New image name, such as /tsf/nginx.
func (o DeployContainerGroupOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.RepoName }).(pulumi.StringOutput)
}

// repo type, tcr or leave it blank.
func (o DeployContainerGroupOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.RepoType }).(pulumi.StringOutput)
}

// old image name, eg: /tsf/server.
func (o DeployContainerGroupOutput) Reponame() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.Reponame }).(pulumi.StringOutput)
}

// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
func (o DeployContainerGroupOutput) SchedulingStrategy() DeployContainerGroupSchedulingStrategyOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupSchedulingStrategyOutput {
		return v.SchedulingStrategy
	}).(DeployContainerGroupSchedulingStrategyOutput)
}

// image server.
func (o DeployContainerGroupOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.Server }).(pulumi.StringOutput)
}

// Network settings for container deployment groups.
func (o DeployContainerGroupOutput) ServiceSetting() DeployContainerGroupServiceSettingOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupServiceSettingOutput { return v.ServiceSetting }).(DeployContainerGroupServiceSettingOutput)
}

// image version name, v1.
func (o DeployContainerGroupOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.StringOutput { return v.TagName }).(pulumi.StringOutput)
}

// update Interval, is required when rolling update.
func (o DeployContainerGroupOutput) UpdateIvl() pulumi.IntOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.IntOutput { return v.UpdateIvl }).(pulumi.IntOutput)
}

// Update method: 0 for fast update, 1 for rolling update.
func (o DeployContainerGroupOutput) UpdateType() pulumi.IntOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.IntOutput { return v.UpdateType }).(pulumi.IntOutput)
}

// Whether to clear the volume information. Default is false.
func (o DeployContainerGroupOutput) VolumeClean() pulumi.BoolOutput {
	return o.ApplyT(func(v *DeployContainerGroup) pulumi.BoolOutput { return v.VolumeClean }).(pulumi.BoolOutput)
}

// Volume information, as a list.
func (o DeployContainerGroupOutput) VolumeInfoLists() DeployContainerGroupVolumeInfoListArrayOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupVolumeInfoListArrayOutput { return v.VolumeInfoLists }).(DeployContainerGroupVolumeInfoListArrayOutput)
}

// Volume mount point information, list type.
func (o DeployContainerGroupOutput) VolumeMountInfoLists() DeployContainerGroupVolumeMountInfoListArrayOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupVolumeMountInfoListArrayOutput {
		return v.VolumeMountInfoLists
	}).(DeployContainerGroupVolumeMountInfoListArrayOutput)
}

// warmup setting.
func (o DeployContainerGroupOutput) WarmupSetting() DeployContainerGroupWarmupSettingOutput {
	return o.ApplyT(func(v *DeployContainerGroup) DeployContainerGroupWarmupSettingOutput { return v.WarmupSetting }).(DeployContainerGroupWarmupSettingOutput)
}

type DeployContainerGroupArrayOutput struct{ *pulumi.OutputState }

func (DeployContainerGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeployContainerGroup)(nil)).Elem()
}

func (o DeployContainerGroupArrayOutput) ToDeployContainerGroupArrayOutput() DeployContainerGroupArrayOutput {
	return o
}

func (o DeployContainerGroupArrayOutput) ToDeployContainerGroupArrayOutputWithContext(ctx context.Context) DeployContainerGroupArrayOutput {
	return o
}

func (o DeployContainerGroupArrayOutput) Index(i pulumi.IntInput) DeployContainerGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeployContainerGroup {
		return vs[0].([]*DeployContainerGroup)[vs[1].(int)]
	}).(DeployContainerGroupOutput)
}

type DeployContainerGroupMapOutput struct{ *pulumi.OutputState }

func (DeployContainerGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeployContainerGroup)(nil)).Elem()
}

func (o DeployContainerGroupMapOutput) ToDeployContainerGroupMapOutput() DeployContainerGroupMapOutput {
	return o
}

func (o DeployContainerGroupMapOutput) ToDeployContainerGroupMapOutputWithContext(ctx context.Context) DeployContainerGroupMapOutput {
	return o
}

func (o DeployContainerGroupMapOutput) MapIndex(k pulumi.StringInput) DeployContainerGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeployContainerGroup {
		return vs[0].(map[string]*DeployContainerGroup)[vs[1].(string)]
	}).(DeployContainerGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeployContainerGroupInput)(nil)).Elem(), &DeployContainerGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployContainerGroupArrayInput)(nil)).Elem(), DeployContainerGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeployContainerGroupMapInput)(nil)).Elem(), DeployContainerGroupMap{})
	pulumi.RegisterOutputType(DeployContainerGroupOutput{})
	pulumi.RegisterOutputType(DeployContainerGroupArrayOutput{})
	pulumi.RegisterOutputType(DeployContainerGroupMapOutput{})
}
