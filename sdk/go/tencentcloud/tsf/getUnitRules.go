// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tsf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of tsf unitRules
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Tsf"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tsf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tsf.GetUnitRules(ctx, &tsf.GetUnitRulesArgs{
//				GatewayInstanceId: "gw-ins-lvdypq5k",
//				Status:            pulumi.StringRef("disabled"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUnitRules(ctx *pulumi.Context, args *LookupUnitRulesArgs, opts ...pulumi.InvokeOption) (*LookupUnitRulesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupUnitRulesResult
	err := ctx.Invoke("tencentcloud:Tsf/getUnitRules:getUnitRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUnitRules.
type LookupUnitRulesArgs struct {
	// gateway instance id.
	GatewayInstanceId string `pulumi:"gatewayInstanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Enabled state, disabled: unpublished, enabled: published.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getUnitRules.
type LookupUnitRulesResult struct {
	// Gateway Entity ID.
	GatewayInstanceId string `pulumi:"gatewayInstanceId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Pagination list information.
	Results []GetUnitRulesResult `pulumi:"results"`
	// Use status: enabled/disabled.
	Status *string `pulumi:"status"`
}

func LookupUnitRulesOutput(ctx *pulumi.Context, args LookupUnitRulesOutputArgs, opts ...pulumi.InvokeOption) LookupUnitRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUnitRulesResult, error) {
			args := v.(LookupUnitRulesArgs)
			r, err := LookupUnitRules(ctx, &args, opts...)
			var s LookupUnitRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUnitRulesResultOutput)
}

// A collection of arguments for invoking getUnitRules.
type LookupUnitRulesOutputArgs struct {
	// gateway instance id.
	GatewayInstanceId pulumi.StringInput `pulumi:"gatewayInstanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Enabled state, disabled: unpublished, enabled: published.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LookupUnitRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUnitRulesArgs)(nil)).Elem()
}

// A collection of values returned by getUnitRules.
type LookupUnitRulesResultOutput struct{ *pulumi.OutputState }

func (LookupUnitRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUnitRulesResult)(nil)).Elem()
}

func (o LookupUnitRulesResultOutput) ToLookupUnitRulesResultOutput() LookupUnitRulesResultOutput {
	return o
}

func (o LookupUnitRulesResultOutput) ToLookupUnitRulesResultOutputWithContext(ctx context.Context) LookupUnitRulesResultOutput {
	return o
}

// Gateway Entity ID.
func (o LookupUnitRulesResultOutput) GatewayInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUnitRulesResult) string { return v.GatewayInstanceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUnitRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUnitRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUnitRulesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUnitRulesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// Pagination list information.
func (o LookupUnitRulesResultOutput) Results() GetUnitRulesResultArrayOutput {
	return o.ApplyT(func(v LookupUnitRulesResult) []GetUnitRulesResult { return v.Results }).(GetUnitRulesResultArrayOutput)
}

// Use status: enabled/disabled.
func (o LookupUnitRulesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUnitRulesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUnitRulesResultOutput{})
}
