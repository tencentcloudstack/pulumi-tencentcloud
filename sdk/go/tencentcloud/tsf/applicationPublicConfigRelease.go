// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tsf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tsf applicationPublicConfigRelease
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tsf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tsf.NewApplicationPublicConfigRelease(ctx, "applicationPublicConfigRelease", &Tsf.ApplicationPublicConfigReleaseArgs{
//				ConfigId:    pulumi.String("dcfg-p-123456"),
//				NamespaceId: pulumi.String("namespace-123456"),
//				ReleaseDesc: pulumi.String("product version"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// tsf application_public_config_release can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Tsf/applicationPublicConfigRelease:ApplicationPublicConfigRelease application_public_config_release application_public_config_attachment_id
//
// ```
type ApplicationPublicConfigRelease struct {
	pulumi.CustomResourceState

	// ConfigId.
	ConfigId pulumi.StringOutput `pulumi:"configId"`
	// namespace-id.
	NamespaceId pulumi.StringOutput `pulumi:"namespaceId"`
	// Release description.
	ReleaseDesc pulumi.StringPtrOutput `pulumi:"releaseDesc"`
}

// NewApplicationPublicConfigRelease registers a new resource with the given unique name, arguments, and options.
func NewApplicationPublicConfigRelease(ctx *pulumi.Context,
	name string, args *ApplicationPublicConfigReleaseArgs, opts ...pulumi.ResourceOption) (*ApplicationPublicConfigRelease, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.NamespaceId == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ApplicationPublicConfigRelease
	err := ctx.RegisterResource("tencentcloud:Tsf/applicationPublicConfigRelease:ApplicationPublicConfigRelease", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationPublicConfigRelease gets an existing ApplicationPublicConfigRelease resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationPublicConfigRelease(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationPublicConfigReleaseState, opts ...pulumi.ResourceOption) (*ApplicationPublicConfigRelease, error) {
	var resource ApplicationPublicConfigRelease
	err := ctx.ReadResource("tencentcloud:Tsf/applicationPublicConfigRelease:ApplicationPublicConfigRelease", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationPublicConfigRelease resources.
type applicationPublicConfigReleaseState struct {
	// ConfigId.
	ConfigId *string `pulumi:"configId"`
	// namespace-id.
	NamespaceId *string `pulumi:"namespaceId"`
	// Release description.
	ReleaseDesc *string `pulumi:"releaseDesc"`
}

type ApplicationPublicConfigReleaseState struct {
	// ConfigId.
	ConfigId pulumi.StringPtrInput
	// namespace-id.
	NamespaceId pulumi.StringPtrInput
	// Release description.
	ReleaseDesc pulumi.StringPtrInput
}

func (ApplicationPublicConfigReleaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationPublicConfigReleaseState)(nil)).Elem()
}

type applicationPublicConfigReleaseArgs struct {
	// ConfigId.
	ConfigId string `pulumi:"configId"`
	// namespace-id.
	NamespaceId string `pulumi:"namespaceId"`
	// Release description.
	ReleaseDesc *string `pulumi:"releaseDesc"`
}

// The set of arguments for constructing a ApplicationPublicConfigRelease resource.
type ApplicationPublicConfigReleaseArgs struct {
	// ConfigId.
	ConfigId pulumi.StringInput
	// namespace-id.
	NamespaceId pulumi.StringInput
	// Release description.
	ReleaseDesc pulumi.StringPtrInput
}

func (ApplicationPublicConfigReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationPublicConfigReleaseArgs)(nil)).Elem()
}

type ApplicationPublicConfigReleaseInput interface {
	pulumi.Input

	ToApplicationPublicConfigReleaseOutput() ApplicationPublicConfigReleaseOutput
	ToApplicationPublicConfigReleaseOutputWithContext(ctx context.Context) ApplicationPublicConfigReleaseOutput
}

func (*ApplicationPublicConfigRelease) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPublicConfigRelease)(nil)).Elem()
}

func (i *ApplicationPublicConfigRelease) ToApplicationPublicConfigReleaseOutput() ApplicationPublicConfigReleaseOutput {
	return i.ToApplicationPublicConfigReleaseOutputWithContext(context.Background())
}

func (i *ApplicationPublicConfigRelease) ToApplicationPublicConfigReleaseOutputWithContext(ctx context.Context) ApplicationPublicConfigReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPublicConfigReleaseOutput)
}

// ApplicationPublicConfigReleaseArrayInput is an input type that accepts ApplicationPublicConfigReleaseArray and ApplicationPublicConfigReleaseArrayOutput values.
// You can construct a concrete instance of `ApplicationPublicConfigReleaseArrayInput` via:
//
//	ApplicationPublicConfigReleaseArray{ ApplicationPublicConfigReleaseArgs{...} }
type ApplicationPublicConfigReleaseArrayInput interface {
	pulumi.Input

	ToApplicationPublicConfigReleaseArrayOutput() ApplicationPublicConfigReleaseArrayOutput
	ToApplicationPublicConfigReleaseArrayOutputWithContext(context.Context) ApplicationPublicConfigReleaseArrayOutput
}

type ApplicationPublicConfigReleaseArray []ApplicationPublicConfigReleaseInput

func (ApplicationPublicConfigReleaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationPublicConfigRelease)(nil)).Elem()
}

func (i ApplicationPublicConfigReleaseArray) ToApplicationPublicConfigReleaseArrayOutput() ApplicationPublicConfigReleaseArrayOutput {
	return i.ToApplicationPublicConfigReleaseArrayOutputWithContext(context.Background())
}

func (i ApplicationPublicConfigReleaseArray) ToApplicationPublicConfigReleaseArrayOutputWithContext(ctx context.Context) ApplicationPublicConfigReleaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPublicConfigReleaseArrayOutput)
}

// ApplicationPublicConfigReleaseMapInput is an input type that accepts ApplicationPublicConfigReleaseMap and ApplicationPublicConfigReleaseMapOutput values.
// You can construct a concrete instance of `ApplicationPublicConfigReleaseMapInput` via:
//
//	ApplicationPublicConfigReleaseMap{ "key": ApplicationPublicConfigReleaseArgs{...} }
type ApplicationPublicConfigReleaseMapInput interface {
	pulumi.Input

	ToApplicationPublicConfigReleaseMapOutput() ApplicationPublicConfigReleaseMapOutput
	ToApplicationPublicConfigReleaseMapOutputWithContext(context.Context) ApplicationPublicConfigReleaseMapOutput
}

type ApplicationPublicConfigReleaseMap map[string]ApplicationPublicConfigReleaseInput

func (ApplicationPublicConfigReleaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationPublicConfigRelease)(nil)).Elem()
}

func (i ApplicationPublicConfigReleaseMap) ToApplicationPublicConfigReleaseMapOutput() ApplicationPublicConfigReleaseMapOutput {
	return i.ToApplicationPublicConfigReleaseMapOutputWithContext(context.Background())
}

func (i ApplicationPublicConfigReleaseMap) ToApplicationPublicConfigReleaseMapOutputWithContext(ctx context.Context) ApplicationPublicConfigReleaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPublicConfigReleaseMapOutput)
}

type ApplicationPublicConfigReleaseOutput struct{ *pulumi.OutputState }

func (ApplicationPublicConfigReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationPublicConfigRelease)(nil)).Elem()
}

func (o ApplicationPublicConfigReleaseOutput) ToApplicationPublicConfigReleaseOutput() ApplicationPublicConfigReleaseOutput {
	return o
}

func (o ApplicationPublicConfigReleaseOutput) ToApplicationPublicConfigReleaseOutputWithContext(ctx context.Context) ApplicationPublicConfigReleaseOutput {
	return o
}

// ConfigId.
func (o ApplicationPublicConfigReleaseOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPublicConfigRelease) pulumi.StringOutput { return v.ConfigId }).(pulumi.StringOutput)
}

// namespace-id.
func (o ApplicationPublicConfigReleaseOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationPublicConfigRelease) pulumi.StringOutput { return v.NamespaceId }).(pulumi.StringOutput)
}

// Release description.
func (o ApplicationPublicConfigReleaseOutput) ReleaseDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationPublicConfigRelease) pulumi.StringPtrOutput { return v.ReleaseDesc }).(pulumi.StringPtrOutput)
}

type ApplicationPublicConfigReleaseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationPublicConfigReleaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationPublicConfigRelease)(nil)).Elem()
}

func (o ApplicationPublicConfigReleaseArrayOutput) ToApplicationPublicConfigReleaseArrayOutput() ApplicationPublicConfigReleaseArrayOutput {
	return o
}

func (o ApplicationPublicConfigReleaseArrayOutput) ToApplicationPublicConfigReleaseArrayOutputWithContext(ctx context.Context) ApplicationPublicConfigReleaseArrayOutput {
	return o
}

func (o ApplicationPublicConfigReleaseArrayOutput) Index(i pulumi.IntInput) ApplicationPublicConfigReleaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationPublicConfigRelease {
		return vs[0].([]*ApplicationPublicConfigRelease)[vs[1].(int)]
	}).(ApplicationPublicConfigReleaseOutput)
}

type ApplicationPublicConfigReleaseMapOutput struct{ *pulumi.OutputState }

func (ApplicationPublicConfigReleaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationPublicConfigRelease)(nil)).Elem()
}

func (o ApplicationPublicConfigReleaseMapOutput) ToApplicationPublicConfigReleaseMapOutput() ApplicationPublicConfigReleaseMapOutput {
	return o
}

func (o ApplicationPublicConfigReleaseMapOutput) ToApplicationPublicConfigReleaseMapOutputWithContext(ctx context.Context) ApplicationPublicConfigReleaseMapOutput {
	return o
}

func (o ApplicationPublicConfigReleaseMapOutput) MapIndex(k pulumi.StringInput) ApplicationPublicConfigReleaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationPublicConfigRelease {
		return vs[0].(map[string]*ApplicationPublicConfigRelease)[vs[1].(string)]
	}).(ApplicationPublicConfigReleaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPublicConfigReleaseInput)(nil)).Elem(), &ApplicationPublicConfigRelease{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPublicConfigReleaseArrayInput)(nil)).Elem(), ApplicationPublicConfigReleaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationPublicConfigReleaseMapInput)(nil)).Elem(), ApplicationPublicConfigReleaseMap{})
	pulumi.RegisterOutputType(ApplicationPublicConfigReleaseOutput{})
	pulumi.RegisterOutputType(ApplicationPublicConfigReleaseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationPublicConfigReleaseMapOutput{})
}
