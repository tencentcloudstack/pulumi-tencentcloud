// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tsf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tsf applicationConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tsf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tsf.NewApplicationConfig(ctx, "applicationConfig", &Tsf.ApplicationConfigArgs{
//				ApplicationId:     pulumi.String("application-ym9mxmza"),
//				ConfigName:        pulumi.String("test-2"),
//				ConfigValue:       pulumi.String("name: \"name\""),
//				ConfigVersion:     pulumi.String("1.0"),
//				ConfigVersionDesc: pulumi.String("test2"),
//				EncodeWithBase64:  pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ApplicationConfig struct {
	pulumi.CustomResourceState

	// Application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// configuration item name.
	ConfigName pulumi.StringOutput `pulumi:"configName"`
	// configuration item value type.
	ConfigType pulumi.StringPtrOutput `pulumi:"configType"`
	// configuration item value.
	ConfigValue pulumi.StringOutput `pulumi:"configValue"`
	// configuration item version.
	ConfigVersion pulumi.StringOutput `pulumi:"configVersion"`
	// configuration item version description.
	ConfigVersionDesc pulumi.StringPtrOutput `pulumi:"configVersionDesc"`
	// Base64 encoded configuration items.
	EncodeWithBase64 pulumi.BoolPtrOutput `pulumi:"encodeWithBase64"`
	// Program id list.
	ProgramIdLists pulumi.StringArrayOutput `pulumi:"programIdLists"`
}

// NewApplicationConfig registers a new resource with the given unique name, arguments, and options.
func NewApplicationConfig(ctx *pulumi.Context,
	name string, args *ApplicationConfigArgs, opts ...pulumi.ResourceOption) (*ApplicationConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ConfigName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigName'")
	}
	if args.ConfigValue == nil {
		return nil, errors.New("invalid value for required argument 'ConfigValue'")
	}
	if args.ConfigVersion == nil {
		return nil, errors.New("invalid value for required argument 'ConfigVersion'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ApplicationConfig
	err := ctx.RegisterResource("tencentcloud:Tsf/applicationConfig:ApplicationConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationConfig gets an existing ApplicationConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationConfigState, opts ...pulumi.ResourceOption) (*ApplicationConfig, error) {
	var resource ApplicationConfig
	err := ctx.ReadResource("tencentcloud:Tsf/applicationConfig:ApplicationConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationConfig resources.
type applicationConfigState struct {
	// Application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// configuration item name.
	ConfigName *string `pulumi:"configName"`
	// configuration item value type.
	ConfigType *string `pulumi:"configType"`
	// configuration item value.
	ConfigValue *string `pulumi:"configValue"`
	// configuration item version.
	ConfigVersion *string `pulumi:"configVersion"`
	// configuration item version description.
	ConfigVersionDesc *string `pulumi:"configVersionDesc"`
	// Base64 encoded configuration items.
	EncodeWithBase64 *bool `pulumi:"encodeWithBase64"`
	// Program id list.
	ProgramIdLists []string `pulumi:"programIdLists"`
}

type ApplicationConfigState struct {
	// Application ID.
	ApplicationId pulumi.StringPtrInput
	// configuration item name.
	ConfigName pulumi.StringPtrInput
	// configuration item value type.
	ConfigType pulumi.StringPtrInput
	// configuration item value.
	ConfigValue pulumi.StringPtrInput
	// configuration item version.
	ConfigVersion pulumi.StringPtrInput
	// configuration item version description.
	ConfigVersionDesc pulumi.StringPtrInput
	// Base64 encoded configuration items.
	EncodeWithBase64 pulumi.BoolPtrInput
	// Program id list.
	ProgramIdLists pulumi.StringArrayInput
}

func (ApplicationConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationConfigState)(nil)).Elem()
}

type applicationConfigArgs struct {
	// Application ID.
	ApplicationId string `pulumi:"applicationId"`
	// configuration item name.
	ConfigName string `pulumi:"configName"`
	// configuration item value type.
	ConfigType *string `pulumi:"configType"`
	// configuration item value.
	ConfigValue string `pulumi:"configValue"`
	// configuration item version.
	ConfigVersion string `pulumi:"configVersion"`
	// configuration item version description.
	ConfigVersionDesc *string `pulumi:"configVersionDesc"`
	// Base64 encoded configuration items.
	EncodeWithBase64 *bool `pulumi:"encodeWithBase64"`
	// Program id list.
	ProgramIdLists []string `pulumi:"programIdLists"`
}

// The set of arguments for constructing a ApplicationConfig resource.
type ApplicationConfigArgs struct {
	// Application ID.
	ApplicationId pulumi.StringInput
	// configuration item name.
	ConfigName pulumi.StringInput
	// configuration item value type.
	ConfigType pulumi.StringPtrInput
	// configuration item value.
	ConfigValue pulumi.StringInput
	// configuration item version.
	ConfigVersion pulumi.StringInput
	// configuration item version description.
	ConfigVersionDesc pulumi.StringPtrInput
	// Base64 encoded configuration items.
	EncodeWithBase64 pulumi.BoolPtrInput
	// Program id list.
	ProgramIdLists pulumi.StringArrayInput
}

func (ApplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationConfigArgs)(nil)).Elem()
}

type ApplicationConfigInput interface {
	pulumi.Input

	ToApplicationConfigOutput() ApplicationConfigOutput
	ToApplicationConfigOutputWithContext(ctx context.Context) ApplicationConfigOutput
}

func (*ApplicationConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfig)(nil)).Elem()
}

func (i *ApplicationConfig) ToApplicationConfigOutput() ApplicationConfigOutput {
	return i.ToApplicationConfigOutputWithContext(context.Background())
}

func (i *ApplicationConfig) ToApplicationConfigOutputWithContext(ctx context.Context) ApplicationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigOutput)
}

// ApplicationConfigArrayInput is an input type that accepts ApplicationConfigArray and ApplicationConfigArrayOutput values.
// You can construct a concrete instance of `ApplicationConfigArrayInput` via:
//
//	ApplicationConfigArray{ ApplicationConfigArgs{...} }
type ApplicationConfigArrayInput interface {
	pulumi.Input

	ToApplicationConfigArrayOutput() ApplicationConfigArrayOutput
	ToApplicationConfigArrayOutputWithContext(context.Context) ApplicationConfigArrayOutput
}

type ApplicationConfigArray []ApplicationConfigInput

func (ApplicationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationConfig)(nil)).Elem()
}

func (i ApplicationConfigArray) ToApplicationConfigArrayOutput() ApplicationConfigArrayOutput {
	return i.ToApplicationConfigArrayOutputWithContext(context.Background())
}

func (i ApplicationConfigArray) ToApplicationConfigArrayOutputWithContext(ctx context.Context) ApplicationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigArrayOutput)
}

// ApplicationConfigMapInput is an input type that accepts ApplicationConfigMap and ApplicationConfigMapOutput values.
// You can construct a concrete instance of `ApplicationConfigMapInput` via:
//
//	ApplicationConfigMap{ "key": ApplicationConfigArgs{...} }
type ApplicationConfigMapInput interface {
	pulumi.Input

	ToApplicationConfigMapOutput() ApplicationConfigMapOutput
	ToApplicationConfigMapOutputWithContext(context.Context) ApplicationConfigMapOutput
}

type ApplicationConfigMap map[string]ApplicationConfigInput

func (ApplicationConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationConfig)(nil)).Elem()
}

func (i ApplicationConfigMap) ToApplicationConfigMapOutput() ApplicationConfigMapOutput {
	return i.ToApplicationConfigMapOutputWithContext(context.Background())
}

func (i ApplicationConfigMap) ToApplicationConfigMapOutputWithContext(ctx context.Context) ApplicationConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationConfigMapOutput)
}

type ApplicationConfigOutput struct{ *pulumi.OutputState }

func (ApplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationConfig)(nil)).Elem()
}

func (o ApplicationConfigOutput) ToApplicationConfigOutput() ApplicationConfigOutput {
	return o
}

func (o ApplicationConfigOutput) ToApplicationConfigOutputWithContext(ctx context.Context) ApplicationConfigOutput {
	return o
}

// Application ID.
func (o ApplicationConfigOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// configuration item name.
func (o ApplicationConfigOutput) ConfigName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.StringOutput { return v.ConfigName }).(pulumi.StringOutput)
}

// configuration item value type.
func (o ApplicationConfigOutput) ConfigType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.StringPtrOutput { return v.ConfigType }).(pulumi.StringPtrOutput)
}

// configuration item value.
func (o ApplicationConfigOutput) ConfigValue() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.StringOutput { return v.ConfigValue }).(pulumi.StringOutput)
}

// configuration item version.
func (o ApplicationConfigOutput) ConfigVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.StringOutput { return v.ConfigVersion }).(pulumi.StringOutput)
}

// configuration item version description.
func (o ApplicationConfigOutput) ConfigVersionDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.StringPtrOutput { return v.ConfigVersionDesc }).(pulumi.StringPtrOutput)
}

// Base64 encoded configuration items.
func (o ApplicationConfigOutput) EncodeWithBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.BoolPtrOutput { return v.EncodeWithBase64 }).(pulumi.BoolPtrOutput)
}

// Program id list.
func (o ApplicationConfigOutput) ProgramIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationConfig) pulumi.StringArrayOutput { return v.ProgramIdLists }).(pulumi.StringArrayOutput)
}

type ApplicationConfigArrayOutput struct{ *pulumi.OutputState }

func (ApplicationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationConfig)(nil)).Elem()
}

func (o ApplicationConfigArrayOutput) ToApplicationConfigArrayOutput() ApplicationConfigArrayOutput {
	return o
}

func (o ApplicationConfigArrayOutput) ToApplicationConfigArrayOutputWithContext(ctx context.Context) ApplicationConfigArrayOutput {
	return o
}

func (o ApplicationConfigArrayOutput) Index(i pulumi.IntInput) ApplicationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationConfig {
		return vs[0].([]*ApplicationConfig)[vs[1].(int)]
	}).(ApplicationConfigOutput)
}

type ApplicationConfigMapOutput struct{ *pulumi.OutputState }

func (ApplicationConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationConfig)(nil)).Elem()
}

func (o ApplicationConfigMapOutput) ToApplicationConfigMapOutput() ApplicationConfigMapOutput {
	return o
}

func (o ApplicationConfigMapOutput) ToApplicationConfigMapOutputWithContext(ctx context.Context) ApplicationConfigMapOutput {
	return o
}

func (o ApplicationConfigMapOutput) MapIndex(k pulumi.StringInput) ApplicationConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationConfig {
		return vs[0].(map[string]*ApplicationConfig)[vs[1].(string)]
	}).(ApplicationConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationConfigInput)(nil)).Elem(), &ApplicationConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationConfigArrayInput)(nil)).Elem(), ApplicationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationConfigMapInput)(nil)).Elem(), ApplicationConfigMap{})
	pulumi.RegisterOutputType(ApplicationConfigOutput{})
	pulumi.RegisterOutputType(ApplicationConfigArrayOutput{})
	pulumi.RegisterOutputType(ApplicationConfigMapOutput{})
}
