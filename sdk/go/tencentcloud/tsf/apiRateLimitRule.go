// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tsf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tsf apiRateLimitRule
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Tsf"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Tsf.NewApiRateLimitRule(ctx, "apiRateLimitRule", &Tsf.ApiRateLimitRuleArgs{
//				ApiId:        pulumi.String("api-xxxxxx"),
//				MaxQps:       pulumi.Int(10),
//				UsableStatus: pulumi.String("enable"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// tsf api_rate_limit_rule can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Tsf/apiRateLimitRule:ApiRateLimitRule api_rate_limit_rule api_rate_limit_rule_id
//
// ```
type ApiRateLimitRule struct {
	pulumi.CustomResourceState

	// Api Id.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// creation time.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// describe.
	Description pulumi.StringOutput `pulumi:"description"`
	// qps value.
	MaxQps pulumi.IntOutput `pulumi:"maxQps"`
	// Rule content.
	RuleContent pulumi.StringOutput `pulumi:"ruleContent"`
	// rule Id.
	RuleId pulumi.StringOutput `pulumi:"ruleId"`
	// Current limit name.
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// Tsf Rule ID.
	TsfRuleId pulumi.StringOutput `pulumi:"tsfRuleId"`
	// update time.
	UpdatedTime pulumi.StringOutput `pulumi:"updatedTime"`
	// Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
	UsableStatus pulumi.StringOutput `pulumi:"usableStatus"`
}

// NewApiRateLimitRule registers a new resource with the given unique name, arguments, and options.
func NewApiRateLimitRule(ctx *pulumi.Context,
	name string, args *ApiRateLimitRuleArgs, opts ...pulumi.ResourceOption) (*ApiRateLimitRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.MaxQps == nil {
		return nil, errors.New("invalid value for required argument 'MaxQps'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ApiRateLimitRule
	err := ctx.RegisterResource("tencentcloud:Tsf/apiRateLimitRule:ApiRateLimitRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiRateLimitRule gets an existing ApiRateLimitRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiRateLimitRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiRateLimitRuleState, opts ...pulumi.ResourceOption) (*ApiRateLimitRule, error) {
	var resource ApiRateLimitRule
	err := ctx.ReadResource("tencentcloud:Tsf/apiRateLimitRule:ApiRateLimitRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiRateLimitRule resources.
type apiRateLimitRuleState struct {
	// Api Id.
	ApiId *string `pulumi:"apiId"`
	// creation time.
	CreatedTime *string `pulumi:"createdTime"`
	// describe.
	Description *string `pulumi:"description"`
	// qps value.
	MaxQps *int `pulumi:"maxQps"`
	// Rule content.
	RuleContent *string `pulumi:"ruleContent"`
	// rule Id.
	RuleId *string `pulumi:"ruleId"`
	// Current limit name.
	RuleName *string `pulumi:"ruleName"`
	// Tsf Rule ID.
	TsfRuleId *string `pulumi:"tsfRuleId"`
	// update time.
	UpdatedTime *string `pulumi:"updatedTime"`
	// Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
	UsableStatus *string `pulumi:"usableStatus"`
}

type ApiRateLimitRuleState struct {
	// Api Id.
	ApiId pulumi.StringPtrInput
	// creation time.
	CreatedTime pulumi.StringPtrInput
	// describe.
	Description pulumi.StringPtrInput
	// qps value.
	MaxQps pulumi.IntPtrInput
	// Rule content.
	RuleContent pulumi.StringPtrInput
	// rule Id.
	RuleId pulumi.StringPtrInput
	// Current limit name.
	RuleName pulumi.StringPtrInput
	// Tsf Rule ID.
	TsfRuleId pulumi.StringPtrInput
	// update time.
	UpdatedTime pulumi.StringPtrInput
	// Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
	UsableStatus pulumi.StringPtrInput
}

func (ApiRateLimitRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiRateLimitRuleState)(nil)).Elem()
}

type apiRateLimitRuleArgs struct {
	// Api Id.
	ApiId string `pulumi:"apiId"`
	// qps value.
	MaxQps int `pulumi:"maxQps"`
	// Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
	UsableStatus *string `pulumi:"usableStatus"`
}

// The set of arguments for constructing a ApiRateLimitRule resource.
type ApiRateLimitRuleArgs struct {
	// Api Id.
	ApiId pulumi.StringInput
	// qps value.
	MaxQps pulumi.IntInput
	// Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
	UsableStatus pulumi.StringPtrInput
}

func (ApiRateLimitRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiRateLimitRuleArgs)(nil)).Elem()
}

type ApiRateLimitRuleInput interface {
	pulumi.Input

	ToApiRateLimitRuleOutput() ApiRateLimitRuleOutput
	ToApiRateLimitRuleOutputWithContext(ctx context.Context) ApiRateLimitRuleOutput
}

func (*ApiRateLimitRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiRateLimitRule)(nil)).Elem()
}

func (i *ApiRateLimitRule) ToApiRateLimitRuleOutput() ApiRateLimitRuleOutput {
	return i.ToApiRateLimitRuleOutputWithContext(context.Background())
}

func (i *ApiRateLimitRule) ToApiRateLimitRuleOutputWithContext(ctx context.Context) ApiRateLimitRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRateLimitRuleOutput)
}

// ApiRateLimitRuleArrayInput is an input type that accepts ApiRateLimitRuleArray and ApiRateLimitRuleArrayOutput values.
// You can construct a concrete instance of `ApiRateLimitRuleArrayInput` via:
//
//	ApiRateLimitRuleArray{ ApiRateLimitRuleArgs{...} }
type ApiRateLimitRuleArrayInput interface {
	pulumi.Input

	ToApiRateLimitRuleArrayOutput() ApiRateLimitRuleArrayOutput
	ToApiRateLimitRuleArrayOutputWithContext(context.Context) ApiRateLimitRuleArrayOutput
}

type ApiRateLimitRuleArray []ApiRateLimitRuleInput

func (ApiRateLimitRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiRateLimitRule)(nil)).Elem()
}

func (i ApiRateLimitRuleArray) ToApiRateLimitRuleArrayOutput() ApiRateLimitRuleArrayOutput {
	return i.ToApiRateLimitRuleArrayOutputWithContext(context.Background())
}

func (i ApiRateLimitRuleArray) ToApiRateLimitRuleArrayOutputWithContext(ctx context.Context) ApiRateLimitRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRateLimitRuleArrayOutput)
}

// ApiRateLimitRuleMapInput is an input type that accepts ApiRateLimitRuleMap and ApiRateLimitRuleMapOutput values.
// You can construct a concrete instance of `ApiRateLimitRuleMapInput` via:
//
//	ApiRateLimitRuleMap{ "key": ApiRateLimitRuleArgs{...} }
type ApiRateLimitRuleMapInput interface {
	pulumi.Input

	ToApiRateLimitRuleMapOutput() ApiRateLimitRuleMapOutput
	ToApiRateLimitRuleMapOutputWithContext(context.Context) ApiRateLimitRuleMapOutput
}

type ApiRateLimitRuleMap map[string]ApiRateLimitRuleInput

func (ApiRateLimitRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiRateLimitRule)(nil)).Elem()
}

func (i ApiRateLimitRuleMap) ToApiRateLimitRuleMapOutput() ApiRateLimitRuleMapOutput {
	return i.ToApiRateLimitRuleMapOutputWithContext(context.Background())
}

func (i ApiRateLimitRuleMap) ToApiRateLimitRuleMapOutputWithContext(ctx context.Context) ApiRateLimitRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiRateLimitRuleMapOutput)
}

type ApiRateLimitRuleOutput struct{ *pulumi.OutputState }

func (ApiRateLimitRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiRateLimitRule)(nil)).Elem()
}

func (o ApiRateLimitRuleOutput) ToApiRateLimitRuleOutput() ApiRateLimitRuleOutput {
	return o
}

func (o ApiRateLimitRuleOutput) ToApiRateLimitRuleOutputWithContext(ctx context.Context) ApiRateLimitRuleOutput {
	return o
}

// Api Id.
func (o ApiRateLimitRuleOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// creation time.
func (o ApiRateLimitRuleOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// describe.
func (o ApiRateLimitRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// qps value.
func (o ApiRateLimitRuleOutput) MaxQps() pulumi.IntOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.IntOutput { return v.MaxQps }).(pulumi.IntOutput)
}

// Rule content.
func (o ApiRateLimitRuleOutput) RuleContent() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.RuleContent }).(pulumi.StringOutput)
}

// rule Id.
func (o ApiRateLimitRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.RuleId }).(pulumi.StringOutput)
}

// Current limit name.
func (o ApiRateLimitRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// Tsf Rule ID.
func (o ApiRateLimitRuleOutput) TsfRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.TsfRuleId }).(pulumi.StringOutput)
}

// update time.
func (o ApiRateLimitRuleOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.UpdatedTime }).(pulumi.StringOutput)
}

// Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
func (o ApiRateLimitRuleOutput) UsableStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiRateLimitRule) pulumi.StringOutput { return v.UsableStatus }).(pulumi.StringOutput)
}

type ApiRateLimitRuleArrayOutput struct{ *pulumi.OutputState }

func (ApiRateLimitRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiRateLimitRule)(nil)).Elem()
}

func (o ApiRateLimitRuleArrayOutput) ToApiRateLimitRuleArrayOutput() ApiRateLimitRuleArrayOutput {
	return o
}

func (o ApiRateLimitRuleArrayOutput) ToApiRateLimitRuleArrayOutputWithContext(ctx context.Context) ApiRateLimitRuleArrayOutput {
	return o
}

func (o ApiRateLimitRuleArrayOutput) Index(i pulumi.IntInput) ApiRateLimitRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiRateLimitRule {
		return vs[0].([]*ApiRateLimitRule)[vs[1].(int)]
	}).(ApiRateLimitRuleOutput)
}

type ApiRateLimitRuleMapOutput struct{ *pulumi.OutputState }

func (ApiRateLimitRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiRateLimitRule)(nil)).Elem()
}

func (o ApiRateLimitRuleMapOutput) ToApiRateLimitRuleMapOutput() ApiRateLimitRuleMapOutput {
	return o
}

func (o ApiRateLimitRuleMapOutput) ToApiRateLimitRuleMapOutputWithContext(ctx context.Context) ApiRateLimitRuleMapOutput {
	return o
}

func (o ApiRateLimitRuleMapOutput) MapIndex(k pulumi.StringInput) ApiRateLimitRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiRateLimitRule {
		return vs[0].(map[string]*ApiRateLimitRule)[vs[1].(string)]
	}).(ApiRateLimitRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiRateLimitRuleInput)(nil)).Elem(), &ApiRateLimitRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiRateLimitRuleArrayInput)(nil)).Elem(), ApiRateLimitRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiRateLimitRuleMapInput)(nil)).Elem(), ApiRateLimitRuleMap{})
	pulumi.RegisterOutputType(ApiRateLimitRuleOutput{})
	pulumi.RegisterOutputType(ApiRateLimitRuleArrayOutput{})
	pulumi.RegisterOutputType(ApiRateLimitRuleMapOutput{})
}
