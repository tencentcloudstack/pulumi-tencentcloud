// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bi

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a bi userRole
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Bi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Bi.NewUserRole(ctx, "userRole", &Bi.UserRoleArgs{
//				AreaCode:    pulumi.String("+83"),
//				Email:       pulumi.String("1055000000@qq.com"),
//				PhoneNumber: pulumi.String("13470010000"),
//				RoleIdLists: pulumi.IntArray{
//					pulumi.Int(10629359),
//				},
//				UserId:   pulumi.String("100032767426"),
//				UserName: pulumi.String("keep-iac-test"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// bi user_role can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Bi/userRole:UserRole user_role user_id
//
// ```
type UserRole struct {
	pulumi.CustomResourceState

	// Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
	AreaCode pulumi.StringOutput `pulumi:"areaCode"`
	// E-mail(Note: This field may return null, indicating that no valid value can be obtained).
	Email pulumi.StringOutput `pulumi:"email"`
	// Phone number(Note: This field may return null, indicating that no valid value can be obtained).
	PhoneNumber pulumi.StringOutput `pulumi:"phoneNumber"`
	// Role id list.
	RoleIdLists pulumi.IntArrayOutput `pulumi:"roleIdLists"`
	// User id.
	UserId pulumi.StringOutput `pulumi:"userId"`
	// Username.
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewUserRole registers a new resource with the given unique name, arguments, and options.
func NewUserRole(ctx *pulumi.Context,
	name string, args *UserRoleArgs, opts ...pulumi.ResourceOption) (*UserRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AreaCode == nil {
		return nil, errors.New("invalid value for required argument 'AreaCode'")
	}
	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	if args.PhoneNumber == nil {
		return nil, errors.New("invalid value for required argument 'PhoneNumber'")
	}
	if args.RoleIdLists == nil {
		return nil, errors.New("invalid value for required argument 'RoleIdLists'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource UserRole
	err := ctx.RegisterResource("tencentcloud:Bi/userRole:UserRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserRole gets an existing UserRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserRoleState, opts ...pulumi.ResourceOption) (*UserRole, error) {
	var resource UserRole
	err := ctx.ReadResource("tencentcloud:Bi/userRole:UserRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserRole resources.
type userRoleState struct {
	// Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
	AreaCode *string `pulumi:"areaCode"`
	// E-mail(Note: This field may return null, indicating that no valid value can be obtained).
	Email *string `pulumi:"email"`
	// Phone number(Note: This field may return null, indicating that no valid value can be obtained).
	PhoneNumber *string `pulumi:"phoneNumber"`
	// Role id list.
	RoleIdLists []int `pulumi:"roleIdLists"`
	// User id.
	UserId *string `pulumi:"userId"`
	// Username.
	UserName *string `pulumi:"userName"`
}

type UserRoleState struct {
	// Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
	AreaCode pulumi.StringPtrInput
	// E-mail(Note: This field may return null, indicating that no valid value can be obtained).
	Email pulumi.StringPtrInput
	// Phone number(Note: This field may return null, indicating that no valid value can be obtained).
	PhoneNumber pulumi.StringPtrInput
	// Role id list.
	RoleIdLists pulumi.IntArrayInput
	// User id.
	UserId pulumi.StringPtrInput
	// Username.
	UserName pulumi.StringPtrInput
}

func (UserRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*userRoleState)(nil)).Elem()
}

type userRoleArgs struct {
	// Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
	AreaCode string `pulumi:"areaCode"`
	// E-mail(Note: This field may return null, indicating that no valid value can be obtained).
	Email string `pulumi:"email"`
	// Phone number(Note: This field may return null, indicating that no valid value can be obtained).
	PhoneNumber string `pulumi:"phoneNumber"`
	// Role id list.
	RoleIdLists []int `pulumi:"roleIdLists"`
	// User id.
	UserId string `pulumi:"userId"`
	// Username.
	UserName string `pulumi:"userName"`
}

// The set of arguments for constructing a UserRole resource.
type UserRoleArgs struct {
	// Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
	AreaCode pulumi.StringInput
	// E-mail(Note: This field may return null, indicating that no valid value can be obtained).
	Email pulumi.StringInput
	// Phone number(Note: This field may return null, indicating that no valid value can be obtained).
	PhoneNumber pulumi.StringInput
	// Role id list.
	RoleIdLists pulumi.IntArrayInput
	// User id.
	UserId pulumi.StringInput
	// Username.
	UserName pulumi.StringInput
}

func (UserRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userRoleArgs)(nil)).Elem()
}

type UserRoleInput interface {
	pulumi.Input

	ToUserRoleOutput() UserRoleOutput
	ToUserRoleOutputWithContext(ctx context.Context) UserRoleOutput
}

func (*UserRole) ElementType() reflect.Type {
	return reflect.TypeOf((**UserRole)(nil)).Elem()
}

func (i *UserRole) ToUserRoleOutput() UserRoleOutput {
	return i.ToUserRoleOutputWithContext(context.Background())
}

func (i *UserRole) ToUserRoleOutputWithContext(ctx context.Context) UserRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleOutput)
}

// UserRoleArrayInput is an input type that accepts UserRoleArray and UserRoleArrayOutput values.
// You can construct a concrete instance of `UserRoleArrayInput` via:
//
//	UserRoleArray{ UserRoleArgs{...} }
type UserRoleArrayInput interface {
	pulumi.Input

	ToUserRoleArrayOutput() UserRoleArrayOutput
	ToUserRoleArrayOutputWithContext(context.Context) UserRoleArrayOutput
}

type UserRoleArray []UserRoleInput

func (UserRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserRole)(nil)).Elem()
}

func (i UserRoleArray) ToUserRoleArrayOutput() UserRoleArrayOutput {
	return i.ToUserRoleArrayOutputWithContext(context.Background())
}

func (i UserRoleArray) ToUserRoleArrayOutputWithContext(ctx context.Context) UserRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleArrayOutput)
}

// UserRoleMapInput is an input type that accepts UserRoleMap and UserRoleMapOutput values.
// You can construct a concrete instance of `UserRoleMapInput` via:
//
//	UserRoleMap{ "key": UserRoleArgs{...} }
type UserRoleMapInput interface {
	pulumi.Input

	ToUserRoleMapOutput() UserRoleMapOutput
	ToUserRoleMapOutputWithContext(context.Context) UserRoleMapOutput
}

type UserRoleMap map[string]UserRoleInput

func (UserRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserRole)(nil)).Elem()
}

func (i UserRoleMap) ToUserRoleMapOutput() UserRoleMapOutput {
	return i.ToUserRoleMapOutputWithContext(context.Background())
}

func (i UserRoleMap) ToUserRoleMapOutputWithContext(ctx context.Context) UserRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleMapOutput)
}

type UserRoleOutput struct{ *pulumi.OutputState }

func (UserRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserRole)(nil)).Elem()
}

func (o UserRoleOutput) ToUserRoleOutput() UserRoleOutput {
	return o
}

func (o UserRoleOutput) ToUserRoleOutputWithContext(ctx context.Context) UserRoleOutput {
	return o
}

// Mobile area code(Note: This field may return null, indicating that no valid value can be obtained).
func (o UserRoleOutput) AreaCode() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRole) pulumi.StringOutput { return v.AreaCode }).(pulumi.StringOutput)
}

// E-mail(Note: This field may return null, indicating that no valid value can be obtained).
func (o UserRoleOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRole) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// Phone number(Note: This field may return null, indicating that no valid value can be obtained).
func (o UserRoleOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRole) pulumi.StringOutput { return v.PhoneNumber }).(pulumi.StringOutput)
}

// Role id list.
func (o UserRoleOutput) RoleIdLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *UserRole) pulumi.IntArrayOutput { return v.RoleIdLists }).(pulumi.IntArrayOutput)
}

// User id.
func (o UserRoleOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRole) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

// Username.
func (o UserRoleOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *UserRole) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

type UserRoleArrayOutput struct{ *pulumi.OutputState }

func (UserRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserRole)(nil)).Elem()
}

func (o UserRoleArrayOutput) ToUserRoleArrayOutput() UserRoleArrayOutput {
	return o
}

func (o UserRoleArrayOutput) ToUserRoleArrayOutputWithContext(ctx context.Context) UserRoleArrayOutput {
	return o
}

func (o UserRoleArrayOutput) Index(i pulumi.IntInput) UserRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserRole {
		return vs[0].([]*UserRole)[vs[1].(int)]
	}).(UserRoleOutput)
}

type UserRoleMapOutput struct{ *pulumi.OutputState }

func (UserRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserRole)(nil)).Elem()
}

func (o UserRoleMapOutput) ToUserRoleMapOutput() UserRoleMapOutput {
	return o
}

func (o UserRoleMapOutput) ToUserRoleMapOutputWithContext(ctx context.Context) UserRoleMapOutput {
	return o
}

func (o UserRoleMapOutput) MapIndex(k pulumi.StringInput) UserRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserRole {
		return vs[0].(map[string]*UserRole)[vs[1].(string)]
	}).(UserRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserRoleInput)(nil)).Elem(), &UserRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRoleArrayInput)(nil)).Elem(), UserRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRoleMapInput)(nil)).Elem(), UserRoleMap{})
	pulumi.RegisterOutputType(UserRoleOutput{})
	pulumi.RegisterOutputType(UserRoleArrayOutput{})
	pulumi.RegisterOutputType(UserRoleMapOutput{})
}
