// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dcdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a dcdb dbSyncModeConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dcdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dcdb.NewDbSyncModeConfig(ctx, "config", &Dcdb.DbSyncModeConfigArgs{
//				InstanceId: pulumi.String(fmt.Sprintf("%v%v", "%", "s")),
//				SyncMode:   pulumi.Int(2),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// dcdb db_sync_mode_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Dcdb/dbSyncModeConfig:DbSyncModeConfig db_sync_mode_config db_sync_mode_config_id
//
// ```
type DbSyncModeConfig struct {
	pulumi.CustomResourceState

	// ID of the instance for which to modify the sync mode. The ID is in the format of `tdsql-ow728lmc`.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Sync mode. Valid values: `0` (async), `1` (strong sync), `2` (downgradable strong sync).
	SyncMode pulumi.IntOutput `pulumi:"syncMode"`
}

// NewDbSyncModeConfig registers a new resource with the given unique name, arguments, and options.
func NewDbSyncModeConfig(ctx *pulumi.Context,
	name string, args *DbSyncModeConfigArgs, opts ...pulumi.ResourceOption) (*DbSyncModeConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.SyncMode == nil {
		return nil, errors.New("invalid value for required argument 'SyncMode'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DbSyncModeConfig
	err := ctx.RegisterResource("tencentcloud:Dcdb/dbSyncModeConfig:DbSyncModeConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbSyncModeConfig gets an existing DbSyncModeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbSyncModeConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbSyncModeConfigState, opts ...pulumi.ResourceOption) (*DbSyncModeConfig, error) {
	var resource DbSyncModeConfig
	err := ctx.ReadResource("tencentcloud:Dcdb/dbSyncModeConfig:DbSyncModeConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbSyncModeConfig resources.
type dbSyncModeConfigState struct {
	// ID of the instance for which to modify the sync mode. The ID is in the format of `tdsql-ow728lmc`.
	InstanceId *string `pulumi:"instanceId"`
	// Sync mode. Valid values: `0` (async), `1` (strong sync), `2` (downgradable strong sync).
	SyncMode *int `pulumi:"syncMode"`
}

type DbSyncModeConfigState struct {
	// ID of the instance for which to modify the sync mode. The ID is in the format of `tdsql-ow728lmc`.
	InstanceId pulumi.StringPtrInput
	// Sync mode. Valid values: `0` (async), `1` (strong sync), `2` (downgradable strong sync).
	SyncMode pulumi.IntPtrInput
}

func (DbSyncModeConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSyncModeConfigState)(nil)).Elem()
}

type dbSyncModeConfigArgs struct {
	// ID of the instance for which to modify the sync mode. The ID is in the format of `tdsql-ow728lmc`.
	InstanceId string `pulumi:"instanceId"`
	// Sync mode. Valid values: `0` (async), `1` (strong sync), `2` (downgradable strong sync).
	SyncMode int `pulumi:"syncMode"`
}

// The set of arguments for constructing a DbSyncModeConfig resource.
type DbSyncModeConfigArgs struct {
	// ID of the instance for which to modify the sync mode. The ID is in the format of `tdsql-ow728lmc`.
	InstanceId pulumi.StringInput
	// Sync mode. Valid values: `0` (async), `1` (strong sync), `2` (downgradable strong sync).
	SyncMode pulumi.IntInput
}

func (DbSyncModeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbSyncModeConfigArgs)(nil)).Elem()
}

type DbSyncModeConfigInput interface {
	pulumi.Input

	ToDbSyncModeConfigOutput() DbSyncModeConfigOutput
	ToDbSyncModeConfigOutputWithContext(ctx context.Context) DbSyncModeConfigOutput
}

func (*DbSyncModeConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSyncModeConfig)(nil)).Elem()
}

func (i *DbSyncModeConfig) ToDbSyncModeConfigOutput() DbSyncModeConfigOutput {
	return i.ToDbSyncModeConfigOutputWithContext(context.Background())
}

func (i *DbSyncModeConfig) ToDbSyncModeConfigOutputWithContext(ctx context.Context) DbSyncModeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSyncModeConfigOutput)
}

// DbSyncModeConfigArrayInput is an input type that accepts DbSyncModeConfigArray and DbSyncModeConfigArrayOutput values.
// You can construct a concrete instance of `DbSyncModeConfigArrayInput` via:
//
//	DbSyncModeConfigArray{ DbSyncModeConfigArgs{...} }
type DbSyncModeConfigArrayInput interface {
	pulumi.Input

	ToDbSyncModeConfigArrayOutput() DbSyncModeConfigArrayOutput
	ToDbSyncModeConfigArrayOutputWithContext(context.Context) DbSyncModeConfigArrayOutput
}

type DbSyncModeConfigArray []DbSyncModeConfigInput

func (DbSyncModeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbSyncModeConfig)(nil)).Elem()
}

func (i DbSyncModeConfigArray) ToDbSyncModeConfigArrayOutput() DbSyncModeConfigArrayOutput {
	return i.ToDbSyncModeConfigArrayOutputWithContext(context.Background())
}

func (i DbSyncModeConfigArray) ToDbSyncModeConfigArrayOutputWithContext(ctx context.Context) DbSyncModeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSyncModeConfigArrayOutput)
}

// DbSyncModeConfigMapInput is an input type that accepts DbSyncModeConfigMap and DbSyncModeConfigMapOutput values.
// You can construct a concrete instance of `DbSyncModeConfigMapInput` via:
//
//	DbSyncModeConfigMap{ "key": DbSyncModeConfigArgs{...} }
type DbSyncModeConfigMapInput interface {
	pulumi.Input

	ToDbSyncModeConfigMapOutput() DbSyncModeConfigMapOutput
	ToDbSyncModeConfigMapOutputWithContext(context.Context) DbSyncModeConfigMapOutput
}

type DbSyncModeConfigMap map[string]DbSyncModeConfigInput

func (DbSyncModeConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbSyncModeConfig)(nil)).Elem()
}

func (i DbSyncModeConfigMap) ToDbSyncModeConfigMapOutput() DbSyncModeConfigMapOutput {
	return i.ToDbSyncModeConfigMapOutputWithContext(context.Background())
}

func (i DbSyncModeConfigMap) ToDbSyncModeConfigMapOutputWithContext(ctx context.Context) DbSyncModeConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbSyncModeConfigMapOutput)
}

type DbSyncModeConfigOutput struct{ *pulumi.OutputState }

func (DbSyncModeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbSyncModeConfig)(nil)).Elem()
}

func (o DbSyncModeConfigOutput) ToDbSyncModeConfigOutput() DbSyncModeConfigOutput {
	return o
}

func (o DbSyncModeConfigOutput) ToDbSyncModeConfigOutputWithContext(ctx context.Context) DbSyncModeConfigOutput {
	return o
}

// ID of the instance for which to modify the sync mode. The ID is in the format of `tdsql-ow728lmc`.
func (o DbSyncModeConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbSyncModeConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Sync mode. Valid values: `0` (async), `1` (strong sync), `2` (downgradable strong sync).
func (o DbSyncModeConfigOutput) SyncMode() pulumi.IntOutput {
	return o.ApplyT(func(v *DbSyncModeConfig) pulumi.IntOutput { return v.SyncMode }).(pulumi.IntOutput)
}

type DbSyncModeConfigArrayOutput struct{ *pulumi.OutputState }

func (DbSyncModeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbSyncModeConfig)(nil)).Elem()
}

func (o DbSyncModeConfigArrayOutput) ToDbSyncModeConfigArrayOutput() DbSyncModeConfigArrayOutput {
	return o
}

func (o DbSyncModeConfigArrayOutput) ToDbSyncModeConfigArrayOutputWithContext(ctx context.Context) DbSyncModeConfigArrayOutput {
	return o
}

func (o DbSyncModeConfigArrayOutput) Index(i pulumi.IntInput) DbSyncModeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DbSyncModeConfig {
		return vs[0].([]*DbSyncModeConfig)[vs[1].(int)]
	}).(DbSyncModeConfigOutput)
}

type DbSyncModeConfigMapOutput struct{ *pulumi.OutputState }

func (DbSyncModeConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbSyncModeConfig)(nil)).Elem()
}

func (o DbSyncModeConfigMapOutput) ToDbSyncModeConfigMapOutput() DbSyncModeConfigMapOutput {
	return o
}

func (o DbSyncModeConfigMapOutput) ToDbSyncModeConfigMapOutputWithContext(ctx context.Context) DbSyncModeConfigMapOutput {
	return o
}

func (o DbSyncModeConfigMapOutput) MapIndex(k pulumi.StringInput) DbSyncModeConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DbSyncModeConfig {
		return vs[0].(map[string]*DbSyncModeConfig)[vs[1].(string)]
	}).(DbSyncModeConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbSyncModeConfigInput)(nil)).Elem(), &DbSyncModeConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbSyncModeConfigArrayInput)(nil)).Elem(), DbSyncModeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbSyncModeConfigMapInput)(nil)).Elem(), DbSyncModeConfigMap{})
	pulumi.RegisterOutputType(DbSyncModeConfigOutput{})
	pulumi.RegisterOutputType(DbSyncModeConfigArrayOutput{})
	pulumi.RegisterOutputType(DbSyncModeConfigMapOutput{})
}
