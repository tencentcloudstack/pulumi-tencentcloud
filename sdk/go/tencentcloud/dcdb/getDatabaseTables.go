// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dcdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dcdb databaseTables
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dcdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dcdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dcdb.GetDatabaseTables(ctx, &dcdb.GetDatabaseTablesArgs{
//				Cols: []map[string]interface{}{
//					map[string]interface{}{
//						"col": "",
//						"gt": []map[string]interface{}{
//							nil,
//							nil,
//						},
//						"lt": []map[string]interface{}{
//							nil,
//							nil,
//						},
//						"nil": []map[string]interface{}{
//							nil,
//							nil,
//						},
//						"type": "",
//					},
//				},
//				DbName: "",
//				Gt: []map[string]interface{}{
//					nil,
//					nil,
//					nil,
//				},
//				InstanceId: "dcdbt-ow7t8lmc",
//				Lt: []map[string]interface{}{
//					nil,
//					nil,
//					nil,
//				},
//				Nil: []map[string]interface{}{
//					nil,
//					nil,
//					nil,
//				},
//				Table: "",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDatabaseTables(ctx *pulumi.Context, args *GetDatabaseTablesArgs, opts ...pulumi.InvokeOption) (*GetDatabaseTablesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDatabaseTablesResult
	err := ctx.Invoke("tencentcloud:Dcdb/getDatabaseTables:getDatabaseTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseTables.
type GetDatabaseTablesArgs struct {
	// Database name, obtained through the DescribeDatabases api.
	DbName string `pulumi:"dbName"`
	// The ID of instance.
	InstanceId string `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Table name, obtained through the DescribeDatabaseObjects api.
	Table string `pulumi:"table"`
}

// A collection of values returned by getDatabaseTables.
type GetDatabaseTablesResult struct {
	// Column information.
	Cols   []GetDatabaseTablesCol `pulumi:"cols"`
	DbName string                 `pulumi:"dbName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Table            string  `pulumi:"table"`
}

func GetDatabaseTablesOutput(ctx *pulumi.Context, args GetDatabaseTablesOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseTablesResult, error) {
			args := v.(GetDatabaseTablesArgs)
			r, err := GetDatabaseTables(ctx, &args, opts...)
			var s GetDatabaseTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseTablesResultOutput)
}

// A collection of arguments for invoking getDatabaseTables.
type GetDatabaseTablesOutputArgs struct {
	// Database name, obtained through the DescribeDatabases api.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// The ID of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Table name, obtained through the DescribeDatabaseObjects api.
	Table pulumi.StringInput `pulumi:"table"`
}

func (GetDatabaseTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseTablesArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseTables.
type GetDatabaseTablesResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseTablesResult)(nil)).Elem()
}

func (o GetDatabaseTablesResultOutput) ToGetDatabaseTablesResultOutput() GetDatabaseTablesResultOutput {
	return o
}

func (o GetDatabaseTablesResultOutput) ToGetDatabaseTablesResultOutputWithContext(ctx context.Context) GetDatabaseTablesResultOutput {
	return o
}

// Column information.
func (o GetDatabaseTablesResultOutput) Cols() GetDatabaseTablesColArrayOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) []GetDatabaseTablesCol { return v.Cols }).(GetDatabaseTablesColArrayOutput)
}

func (o GetDatabaseTablesResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.DbName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabaseTablesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDatabaseTablesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseTablesResultOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.Table }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseTablesResultOutput{})
}
