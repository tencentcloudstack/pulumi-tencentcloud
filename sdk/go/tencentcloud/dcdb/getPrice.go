// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dcdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of dcdb price
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Dcdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Dcdb"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Dcdb.GetPrice(ctx, &dcdb.GetPriceArgs{
//				InstanceCount:  1,
//				Zone:           _var.Default_az,
//				Period:         1,
//				ShardNodeCount: 2,
//				ShardMemory:    2,
//				ShardStorage:   10,
//				ShardCount:     2,
//				Paymode:        pulumi.StringRef("postpaid"),
//				AmountUnit:     pulumi.StringRef("pent"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPrice(ctx *pulumi.Context, args *GetPriceArgs, opts ...pulumi.InvokeOption) (*GetPriceResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPriceResult
	err := ctx.Invoke("tencentcloud:Dcdb/getPrice:getPrice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrice.
type GetPriceArgs struct {
	// Price unit. Valid values: `pent` (cent), `microPent` (microcent).
	AmountUnit *string `pulumi:"amountUnit"`
	// The count of instances wants to buy.
	InstanceCount int `pulumi:"instanceCount"`
	// Billing type. Valid values: `postpaid` (pay-as-you-go), `prepaid` (monthly subscription).
	Paymode *string `pulumi:"paymode"`
	// Purchase period in months.
	Period int `pulumi:"period"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Number of instance shards.
	ShardCount int `pulumi:"shardCount"`
	// Shard memory size in GB.
	ShardMemory int `pulumi:"shardMemory"`
	// Number of instance shard nodes.
	ShardNodeCount int `pulumi:"shardNodeCount"`
	// Shard storage capacity in GB.
	ShardStorage int `pulumi:"shardStorage"`
	// AZ ID of the purchased instance.
	Zone string `pulumi:"zone"`
}

// A collection of values returned by getPrice.
type GetPriceResult struct {
	AmountUnit *string `pulumi:"amountUnit"`
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	InstanceCount int    `pulumi:"instanceCount"`
	// Original price. Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. Currency: CNY (Chinese site), USD (international site).
	OriginalPrice int     `pulumi:"originalPrice"`
	Paymode       *string `pulumi:"paymode"`
	Period        int     `pulumi:"period"`
	// The actual price may be different from the original price due to discounts. Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. Currency: CNY (Chinese site), USD (international site).
	Price            int     `pulumi:"price"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	ShardCount       int     `pulumi:"shardCount"`
	ShardMemory      int     `pulumi:"shardMemory"`
	ShardNodeCount   int     `pulumi:"shardNodeCount"`
	ShardStorage     int     `pulumi:"shardStorage"`
	Zone             string  `pulumi:"zone"`
}

func GetPriceOutput(ctx *pulumi.Context, args GetPriceOutputArgs, opts ...pulumi.InvokeOption) GetPriceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPriceResult, error) {
			args := v.(GetPriceArgs)
			r, err := GetPrice(ctx, &args, opts...)
			var s GetPriceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPriceResultOutput)
}

// A collection of arguments for invoking getPrice.
type GetPriceOutputArgs struct {
	// Price unit. Valid values: `pent` (cent), `microPent` (microcent).
	AmountUnit pulumi.StringPtrInput `pulumi:"amountUnit"`
	// The count of instances wants to buy.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// Billing type. Valid values: `postpaid` (pay-as-you-go), `prepaid` (monthly subscription).
	Paymode pulumi.StringPtrInput `pulumi:"paymode"`
	// Purchase period in months.
	Period pulumi.IntInput `pulumi:"period"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Number of instance shards.
	ShardCount pulumi.IntInput `pulumi:"shardCount"`
	// Shard memory size in GB.
	ShardMemory pulumi.IntInput `pulumi:"shardMemory"`
	// Number of instance shard nodes.
	ShardNodeCount pulumi.IntInput `pulumi:"shardNodeCount"`
	// Shard storage capacity in GB.
	ShardStorage pulumi.IntInput `pulumi:"shardStorage"`
	// AZ ID of the purchased instance.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetPriceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPriceArgs)(nil)).Elem()
}

// A collection of values returned by getPrice.
type GetPriceResultOutput struct{ *pulumi.OutputState }

func (GetPriceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPriceResult)(nil)).Elem()
}

func (o GetPriceResultOutput) ToGetPriceResultOutput() GetPriceResultOutput {
	return o
}

func (o GetPriceResultOutput) ToGetPriceResultOutputWithContext(ctx context.Context) GetPriceResultOutput {
	return o
}

func (o GetPriceResultOutput) AmountUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPriceResult) *string { return v.AmountUnit }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPriceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPriceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPriceResultOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Original price. Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. Currency: CNY (Chinese site), USD (international site).
func (o GetPriceResultOutput) OriginalPrice() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.OriginalPrice }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) Paymode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPriceResult) *string { return v.Paymode }).(pulumi.StringPtrOutput)
}

func (o GetPriceResultOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.Period }).(pulumi.IntOutput)
}

// The actual price may be different from the original price due to discounts. Unit: Cent (default). If the request parameter contains `AmountUnit`, see `AmountUnit` description. Currency: CNY (Chinese site), USD (international site).
func (o GetPriceResultOutput) Price() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.Price }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPriceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetPriceResultOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.ShardCount }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) ShardMemory() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.ShardMemory }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) ShardNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.ShardNodeCount }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) ShardStorage() pulumi.IntOutput {
	return o.ApplyT(func(v GetPriceResult) int { return v.ShardStorage }).(pulumi.IntOutput)
}

func (o GetPriceResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetPriceResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPriceResultOutput{})
}
