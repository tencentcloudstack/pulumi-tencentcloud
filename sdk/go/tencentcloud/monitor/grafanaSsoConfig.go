// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a monitor grafanaSsoConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Monitor.NewGrafanaSsoConfig(ctx, "grafanaSsoConfig", &Monitor.GrafanaSsoConfigArgs{
//				EnableSso:  pulumi.Bool(false),
//				InstanceId: pulumi.String("grafana-dp2hnnfa"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// monitor grafana_sso_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Monitor/grafanaSsoConfig:GrafanaSsoConfig grafana_sso_config instance_id
//
// ```
type GrafanaSsoConfig struct {
	pulumi.CustomResourceState

	// Whether to enable SSO: `true` for enabling; `false` for disabling.
	EnableSso pulumi.BoolOutput `pulumi:"enableSso"`
	// Grafana instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewGrafanaSsoConfig registers a new resource with the given unique name, arguments, and options.
func NewGrafanaSsoConfig(ctx *pulumi.Context,
	name string, args *GrafanaSsoConfigArgs, opts ...pulumi.ResourceOption) (*GrafanaSsoConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableSso == nil {
		return nil, errors.New("invalid value for required argument 'EnableSso'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource GrafanaSsoConfig
	err := ctx.RegisterResource("tencentcloud:Monitor/grafanaSsoConfig:GrafanaSsoConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGrafanaSsoConfig gets an existing GrafanaSsoConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGrafanaSsoConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GrafanaSsoConfigState, opts ...pulumi.ResourceOption) (*GrafanaSsoConfig, error) {
	var resource GrafanaSsoConfig
	err := ctx.ReadResource("tencentcloud:Monitor/grafanaSsoConfig:GrafanaSsoConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GrafanaSsoConfig resources.
type grafanaSsoConfigState struct {
	// Whether to enable SSO: `true` for enabling; `false` for disabling.
	EnableSso *bool `pulumi:"enableSso"`
	// Grafana instance ID.
	InstanceId *string `pulumi:"instanceId"`
}

type GrafanaSsoConfigState struct {
	// Whether to enable SSO: `true` for enabling; `false` for disabling.
	EnableSso pulumi.BoolPtrInput
	// Grafana instance ID.
	InstanceId pulumi.StringPtrInput
}

func (GrafanaSsoConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaSsoConfigState)(nil)).Elem()
}

type grafanaSsoConfigArgs struct {
	// Whether to enable SSO: `true` for enabling; `false` for disabling.
	EnableSso bool `pulumi:"enableSso"`
	// Grafana instance ID.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a GrafanaSsoConfig resource.
type GrafanaSsoConfigArgs struct {
	// Whether to enable SSO: `true` for enabling; `false` for disabling.
	EnableSso pulumi.BoolInput
	// Grafana instance ID.
	InstanceId pulumi.StringInput
}

func (GrafanaSsoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaSsoConfigArgs)(nil)).Elem()
}

type GrafanaSsoConfigInput interface {
	pulumi.Input

	ToGrafanaSsoConfigOutput() GrafanaSsoConfigOutput
	ToGrafanaSsoConfigOutputWithContext(ctx context.Context) GrafanaSsoConfigOutput
}

func (*GrafanaSsoConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaSsoConfig)(nil)).Elem()
}

func (i *GrafanaSsoConfig) ToGrafanaSsoConfigOutput() GrafanaSsoConfigOutput {
	return i.ToGrafanaSsoConfigOutputWithContext(context.Background())
}

func (i *GrafanaSsoConfig) ToGrafanaSsoConfigOutputWithContext(ctx context.Context) GrafanaSsoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoConfigOutput)
}

// GrafanaSsoConfigArrayInput is an input type that accepts GrafanaSsoConfigArray and GrafanaSsoConfigArrayOutput values.
// You can construct a concrete instance of `GrafanaSsoConfigArrayInput` via:
//
//	GrafanaSsoConfigArray{ GrafanaSsoConfigArgs{...} }
type GrafanaSsoConfigArrayInput interface {
	pulumi.Input

	ToGrafanaSsoConfigArrayOutput() GrafanaSsoConfigArrayOutput
	ToGrafanaSsoConfigArrayOutputWithContext(context.Context) GrafanaSsoConfigArrayOutput
}

type GrafanaSsoConfigArray []GrafanaSsoConfigInput

func (GrafanaSsoConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaSsoConfig)(nil)).Elem()
}

func (i GrafanaSsoConfigArray) ToGrafanaSsoConfigArrayOutput() GrafanaSsoConfigArrayOutput {
	return i.ToGrafanaSsoConfigArrayOutputWithContext(context.Background())
}

func (i GrafanaSsoConfigArray) ToGrafanaSsoConfigArrayOutputWithContext(ctx context.Context) GrafanaSsoConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoConfigArrayOutput)
}

// GrafanaSsoConfigMapInput is an input type that accepts GrafanaSsoConfigMap and GrafanaSsoConfigMapOutput values.
// You can construct a concrete instance of `GrafanaSsoConfigMapInput` via:
//
//	GrafanaSsoConfigMap{ "key": GrafanaSsoConfigArgs{...} }
type GrafanaSsoConfigMapInput interface {
	pulumi.Input

	ToGrafanaSsoConfigMapOutput() GrafanaSsoConfigMapOutput
	ToGrafanaSsoConfigMapOutputWithContext(context.Context) GrafanaSsoConfigMapOutput
}

type GrafanaSsoConfigMap map[string]GrafanaSsoConfigInput

func (GrafanaSsoConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaSsoConfig)(nil)).Elem()
}

func (i GrafanaSsoConfigMap) ToGrafanaSsoConfigMapOutput() GrafanaSsoConfigMapOutput {
	return i.ToGrafanaSsoConfigMapOutputWithContext(context.Background())
}

func (i GrafanaSsoConfigMap) ToGrafanaSsoConfigMapOutputWithContext(ctx context.Context) GrafanaSsoConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoConfigMapOutput)
}

type GrafanaSsoConfigOutput struct{ *pulumi.OutputState }

func (GrafanaSsoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaSsoConfig)(nil)).Elem()
}

func (o GrafanaSsoConfigOutput) ToGrafanaSsoConfigOutput() GrafanaSsoConfigOutput {
	return o
}

func (o GrafanaSsoConfigOutput) ToGrafanaSsoConfigOutputWithContext(ctx context.Context) GrafanaSsoConfigOutput {
	return o
}

// Whether to enable SSO: `true` for enabling; `false` for disabling.
func (o GrafanaSsoConfigOutput) EnableSso() pulumi.BoolOutput {
	return o.ApplyT(func(v *GrafanaSsoConfig) pulumi.BoolOutput { return v.EnableSso }).(pulumi.BoolOutput)
}

// Grafana instance ID.
func (o GrafanaSsoConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *GrafanaSsoConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type GrafanaSsoConfigArrayOutput struct{ *pulumi.OutputState }

func (GrafanaSsoConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaSsoConfig)(nil)).Elem()
}

func (o GrafanaSsoConfigArrayOutput) ToGrafanaSsoConfigArrayOutput() GrafanaSsoConfigArrayOutput {
	return o
}

func (o GrafanaSsoConfigArrayOutput) ToGrafanaSsoConfigArrayOutputWithContext(ctx context.Context) GrafanaSsoConfigArrayOutput {
	return o
}

func (o GrafanaSsoConfigArrayOutput) Index(i pulumi.IntInput) GrafanaSsoConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GrafanaSsoConfig {
		return vs[0].([]*GrafanaSsoConfig)[vs[1].(int)]
	}).(GrafanaSsoConfigOutput)
}

type GrafanaSsoConfigMapOutput struct{ *pulumi.OutputState }

func (GrafanaSsoConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaSsoConfig)(nil)).Elem()
}

func (o GrafanaSsoConfigMapOutput) ToGrafanaSsoConfigMapOutput() GrafanaSsoConfigMapOutput {
	return o
}

func (o GrafanaSsoConfigMapOutput) ToGrafanaSsoConfigMapOutputWithContext(ctx context.Context) GrafanaSsoConfigMapOutput {
	return o
}

func (o GrafanaSsoConfigMapOutput) MapIndex(k pulumi.StringInput) GrafanaSsoConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GrafanaSsoConfig {
		return vs[0].(map[string]*GrafanaSsoConfig)[vs[1].(string)]
	}).(GrafanaSsoConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoConfigInput)(nil)).Elem(), &GrafanaSsoConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoConfigArrayInput)(nil)).Elem(), GrafanaSsoConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoConfigMapInput)(nil)).Elem(), GrafanaSsoConfigMap{})
	pulumi.RegisterOutputType(GrafanaSsoConfigOutput{})
	pulumi.RegisterOutputType(GrafanaSsoConfigArrayOutput{})
	pulumi.RegisterOutputType(GrafanaSsoConfigMapOutput{})
}
