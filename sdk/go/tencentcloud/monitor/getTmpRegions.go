// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of monitor tmpRegions
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Monitor.GetTmpRegions(ctx, &monitor.GetTmpRegionsArgs{
//				PayMode: pulumi.IntRef(1),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTmpRegions(ctx *pulumi.Context, args *GetTmpRegionsArgs, opts ...pulumi.InvokeOption) (*GetTmpRegionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetTmpRegionsResult
	err := ctx.Invoke("tencentcloud:Monitor/getTmpRegions:getTmpRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTmpRegions.
type GetTmpRegionsArgs struct {
	// Pay mode. `1`-Prepaid, `2`-Postpaid, `3`-All regions (default is all regions if not filled in).
	PayMode *int `pulumi:"payMode"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getTmpRegions.
type GetTmpRegionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	PayMode *int   `pulumi:"payMode"`
	// Region set.
	RegionSets       []GetTmpRegionsRegionSet `pulumi:"regionSets"`
	ResultOutputFile *string                  `pulumi:"resultOutputFile"`
}

func GetTmpRegionsOutput(ctx *pulumi.Context, args GetTmpRegionsOutputArgs, opts ...pulumi.InvokeOption) GetTmpRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTmpRegionsResult, error) {
			args := v.(GetTmpRegionsArgs)
			r, err := GetTmpRegions(ctx, &args, opts...)
			var s GetTmpRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTmpRegionsResultOutput)
}

// A collection of arguments for invoking getTmpRegions.
type GetTmpRegionsOutputArgs struct {
	// Pay mode. `1`-Prepaid, `2`-Postpaid, `3`-All regions (default is all regions if not filled in).
	PayMode pulumi.IntPtrInput `pulumi:"payMode"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetTmpRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTmpRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getTmpRegions.
type GetTmpRegionsResultOutput struct{ *pulumi.OutputState }

func (GetTmpRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTmpRegionsResult)(nil)).Elem()
}

func (o GetTmpRegionsResultOutput) ToGetTmpRegionsResultOutput() GetTmpRegionsResultOutput {
	return o
}

func (o GetTmpRegionsResultOutput) ToGetTmpRegionsResultOutputWithContext(ctx context.Context) GetTmpRegionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTmpRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTmpRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTmpRegionsResultOutput) PayMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTmpRegionsResult) *int { return v.PayMode }).(pulumi.IntPtrOutput)
}

// Region set.
func (o GetTmpRegionsResultOutput) RegionSets() GetTmpRegionsRegionSetArrayOutput {
	return o.ApplyT(func(v GetTmpRegionsResult) []GetTmpRegionsRegionSet { return v.RegionSets }).(GetTmpRegionsRegionSetArrayOutput)
}

func (o GetTmpRegionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTmpRegionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTmpRegionsResultOutput{})
}
