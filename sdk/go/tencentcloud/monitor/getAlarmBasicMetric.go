// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of monitor basicMetric
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Monitor.GetAlarmBasicMetric(ctx, &monitor.GetAlarmBasicMetricArgs{
//				Dimensions: []string{
//					"uuid",
//				},
//				MetricName: pulumi.StringRef("WanOuttraffic"),
//				Namespace:  "qce/cvm",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAlarmBasicMetric(ctx *pulumi.Context, args *GetAlarmBasicMetricArgs, opts ...pulumi.InvokeOption) (*GetAlarmBasicMetricResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAlarmBasicMetricResult
	err := ctx.Invoke("tencentcloud:Monitor/getAlarmBasicMetric:getAlarmBasicMetric", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlarmBasicMetric.
type GetAlarmBasicMetricArgs struct {
	// Optional parameters, filtered by dimension.
	Dimensions []string `pulumi:"dimensions"`
	// Indicator names are different for each cloud product. To obtain indicator names, please go to the monitoring indicator documents of each product, such as the indicator names of cloud servers, which can be found in Cloud Server Monitoring Indicators.
	MetricName *string `pulumi:"metricName"`
	// The business namespace is different for each cloud product. To obtain the business namespace, please go to the product monitoring indicator documents, such as the namespace of the cloud server, which can be found in [Cloud Server Monitoring Indicators](https://cloud.tencent.com/document/product/248/6843).
	Namespace string `pulumi:"namespace"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getAlarmBasicMetric.
type GetAlarmBasicMetricResult struct {
	// Dimension name array.
	Dimensions []string `pulumi:"dimensions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Indicator Name.
	MetricName *string `pulumi:"metricName"`
	// List of indicator descriptions obtained from query.
	MetricSets []GetAlarmBasicMetricMetricSet `pulumi:"metricSets"`
	// Namespaces, each cloud product will have a namespace.
	Namespace        string  `pulumi:"namespace"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetAlarmBasicMetricOutput(ctx *pulumi.Context, args GetAlarmBasicMetricOutputArgs, opts ...pulumi.InvokeOption) GetAlarmBasicMetricResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAlarmBasicMetricResult, error) {
			args := v.(GetAlarmBasicMetricArgs)
			r, err := GetAlarmBasicMetric(ctx, &args, opts...)
			var s GetAlarmBasicMetricResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAlarmBasicMetricResultOutput)
}

// A collection of arguments for invoking getAlarmBasicMetric.
type GetAlarmBasicMetricOutputArgs struct {
	// Optional parameters, filtered by dimension.
	Dimensions pulumi.StringArrayInput `pulumi:"dimensions"`
	// Indicator names are different for each cloud product. To obtain indicator names, please go to the monitoring indicator documents of each product, such as the indicator names of cloud servers, which can be found in Cloud Server Monitoring Indicators.
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// The business namespace is different for each cloud product. To obtain the business namespace, please go to the product monitoring indicator documents, such as the namespace of the cloud server, which can be found in [Cloud Server Monitoring Indicators](https://cloud.tencent.com/document/product/248/6843).
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetAlarmBasicMetricOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmBasicMetricArgs)(nil)).Elem()
}

// A collection of values returned by getAlarmBasicMetric.
type GetAlarmBasicMetricResultOutput struct{ *pulumi.OutputState }

func (GetAlarmBasicMetricResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmBasicMetricResult)(nil)).Elem()
}

func (o GetAlarmBasicMetricResultOutput) ToGetAlarmBasicMetricResultOutput() GetAlarmBasicMetricResultOutput {
	return o
}

func (o GetAlarmBasicMetricResultOutput) ToGetAlarmBasicMetricResultOutputWithContext(ctx context.Context) GetAlarmBasicMetricResultOutput {
	return o
}

// Dimension name array.
func (o GetAlarmBasicMetricResultOutput) Dimensions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicMetricResult) []string { return v.Dimensions }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAlarmBasicMetricResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmBasicMetricResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicator Name.
func (o GetAlarmBasicMetricResultOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmBasicMetricResult) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// List of indicator descriptions obtained from query.
func (o GetAlarmBasicMetricResultOutput) MetricSets() GetAlarmBasicMetricMetricSetArrayOutput {
	return o.ApplyT(func(v GetAlarmBasicMetricResult) []GetAlarmBasicMetricMetricSet { return v.MetricSets }).(GetAlarmBasicMetricMetricSetArrayOutput)
}

// Namespaces, each cloud product will have a namespace.
func (o GetAlarmBasicMetricResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmBasicMetricResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetAlarmBasicMetricResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlarmBasicMetricResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlarmBasicMetricResultOutput{})
}
