// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query monitor data. for complex queries, use (https://github.com/tencentyun/tencentcloud-exporter)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Instances"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Instances"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			instances, err := Instances.GetInstance(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Monitor.GetData(ctx, &monitor.GetDataArgs{
//				Namespace:  "QCE/CVM",
//				MetricName: "CPUUsage",
//				Dimensions: []monitor.GetDataDimension{
//					monitor.GetDataDimension{
//						Name:  "InstanceId",
//						Value: instances.InstanceLists[0].InstanceId,
//					},
//				},
//				Period:    pulumi.IntRef(300),
//				StartTime: "2020-04-28T18:45:00+08:00",
//				EndTime:   "2020-04-28T19:00:00+08:00",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = Monitor.GetData(ctx, &monitor.GetDataArgs{
//				Namespace:  "QCE/COS",
//				MetricName: "InternetTraffic",
//				Dimensions: []monitor.GetDataDimension{
//					monitor.GetDataDimension{
//						Name:  "appid",
//						Value: "1258798060",
//					},
//					monitor.GetDataDimension{
//						Name:  "bucket",
//						Value: "test-1258798060",
//					},
//				},
//				Period:    pulumi.IntRef(300),
//				StartTime: "2020-04-28T18:30:00+08:00",
//				EndTime:   "2020-04-28T19:00:00+08:00",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetData(ctx *pulumi.Context, args *GetDataArgs, opts ...pulumi.InvokeOption) (*GetDataResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDataResult
	err := ctx.Invoke("tencentcloud:Monitor/getData:getData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getData.
type GetDataArgs struct {
	// Dimensional composition of instance objects.
	Dimensions []GetDataDimension `pulumi:"dimensions"`
	// End time for this query, eg:`2018-09-22T20:00:00+08:00`.
	EndTime string `pulumi:"endTime"`
	// Metric name, please refer to the documentation of monitor interface of each product.
	MetricName string `pulumi:"metricName"`
	// Namespace of each cloud product in monitor system, refer to `data.tencentcloud_monitor_product_namespace`.
	Namespace string `pulumi:"namespace"`
	// Statistical period.
	Period *int `pulumi:"period"`
	// Used to store results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Start time for this query, eg:`2018-09-22T19:51:23+08:00`.
	StartTime string `pulumi:"startTime"`
}

// A collection of values returned by getData.
type GetDataResult struct {
	Dimensions []GetDataDimension `pulumi:"dimensions"`
	EndTime    string             `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list data point. Each element contains the following attributes:
	Lists            []GetDataList `pulumi:"lists"`
	MetricName       string        `pulumi:"metricName"`
	Namespace        string        `pulumi:"namespace"`
	Period           *int          `pulumi:"period"`
	ResultOutputFile *string       `pulumi:"resultOutputFile"`
	StartTime        string        `pulumi:"startTime"`
}

func GetDataOutput(ctx *pulumi.Context, args GetDataOutputArgs, opts ...pulumi.InvokeOption) GetDataResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDataResult, error) {
			args := v.(GetDataArgs)
			r, err := GetData(ctx, &args, opts...)
			var s GetDataResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDataResultOutput)
}

// A collection of arguments for invoking getData.
type GetDataOutputArgs struct {
	// Dimensional composition of instance objects.
	Dimensions GetDataDimensionArrayInput `pulumi:"dimensions"`
	// End time for this query, eg:`2018-09-22T20:00:00+08:00`.
	EndTime pulumi.StringInput `pulumi:"endTime"`
	// Metric name, please refer to the documentation of monitor interface of each product.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Namespace of each cloud product in monitor system, refer to `data.tencentcloud_monitor_product_namespace`.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// Statistical period.
	Period pulumi.IntPtrInput `pulumi:"period"`
	// Used to store results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Start time for this query, eg:`2018-09-22T19:51:23+08:00`.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataArgs)(nil)).Elem()
}

// A collection of values returned by getData.
type GetDataResultOutput struct{ *pulumi.OutputState }

func (GetDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataResult)(nil)).Elem()
}

func (o GetDataResultOutput) ToGetDataResultOutput() GetDataResultOutput {
	return o
}

func (o GetDataResultOutput) ToGetDataResultOutputWithContext(ctx context.Context) GetDataResultOutput {
	return o
}

func (o GetDataResultOutput) Dimensions() GetDataDimensionArrayOutput {
	return o.ApplyT(func(v GetDataResult) []GetDataDimension { return v.Dimensions }).(GetDataDimensionArrayOutput)
}

func (o GetDataResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list data point. Each element contains the following attributes:
func (o GetDataResultOutput) Lists() GetDataListArrayOutput {
	return o.ApplyT(func(v GetDataResult) []GetDataList { return v.Lists }).(GetDataListArrayOutput)
}

func (o GetDataResultOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataResult) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o GetDataResultOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataResult) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetDataResultOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDataResult) *int { return v.Period }).(pulumi.IntPtrOutput)
}

func (o GetDataResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDataResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDataResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataResultOutput{})
}
