// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Use this data source to query detailed information of monitor tmp instances
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Monitor.GetTmpInstances(ctx, &monitor.GetTmpInstancesArgs{
//				InstanceIds: []string{
//					"prom-xxxxxx",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetTmpInstances(ctx *pulumi.Context, args *GetTmpInstancesArgs, opts ...pulumi.InvokeOption) (*GetTmpInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTmpInstancesResult
	err := ctx.Invoke("tencentcloud:Monitor/getTmpInstances:getTmpInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTmpInstances.
type GetTmpInstancesArgs struct {
	// Filter according to instance charge type.
	// - 2: Prepaid;
	// - 3: Postpaid by hour.
	InstanceChargeType *int `pulumi:"instanceChargeType"`
	// Query according to one or more instance IDs. The instance ID is like: prom-xxxx. The maximum number of instances requested is 100.
	InstanceIds []string `pulumi:"instanceIds"`
	// Filter according to instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Filter according to instance status.
	// - 1: Creating;
	// - 2: In operation;
	// - 3: Abnormal;
	// - 4: Reconstruction;
	// - 5: Destruction;
	// - 6: Stopped taking;
	// - 8: Suspension of service due to arrears;
	// - 9: Service has been suspended due to arrears.
	InstanceStatuses []int `pulumi:"instanceStatuses"`
	// Filter according to ipv4 address.
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// Filter according to tag Key-Value pair. The tag-key is replaced with a specific label key.
	TagFilters []GetTmpInstancesTagFilter `pulumi:"tagFilters"`
	// Filter according to availability area. The availability area is shaped like: ap-Guangzhou-1.
	Zones []string `pulumi:"zones"`
}

// A collection of values returned by getTmpInstances.
type GetTmpInstancesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Instance charge type.
	// - 2: Prepaid;
	// - 3: Postpaid by hour.
	InstanceChargeType *int     `pulumi:"instanceChargeType"`
	InstanceIds        []string `pulumi:"instanceIds"`
	// Instance name.
	InstanceName *string `pulumi:"instanceName"`
	// Instance details list.
	InstanceSets []GetTmpInstancesInstanceSet `pulumi:"instanceSets"`
	// Filter according to instance status.
	// - 1: Creating;
	// - 2: In operation;
	// - 3: Abnormal;
	// - 4: Reconstruction;
	// - 5: Destruction;
	// - 6: Stopped taking;
	// - 8: Suspension of service due to arrears;
	// - 9: Service has been suspended due to arrears.
	InstanceStatuses []int `pulumi:"instanceStatuses"`
	// IPV4 address.
	Ipv4Addresses    []string                   `pulumi:"ipv4Addresses"`
	ResultOutputFile *string                    `pulumi:"resultOutputFile"`
	TagFilters       []GetTmpInstancesTagFilter `pulumi:"tagFilters"`
	Zones            []string                   `pulumi:"zones"`
}

func GetTmpInstancesOutput(ctx *pulumi.Context, args GetTmpInstancesOutputArgs, opts ...pulumi.InvokeOption) GetTmpInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTmpInstancesResult, error) {
			args := v.(GetTmpInstancesArgs)
			r, err := GetTmpInstances(ctx, &args, opts...)
			var s GetTmpInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTmpInstancesResultOutput)
}

// A collection of arguments for invoking getTmpInstances.
type GetTmpInstancesOutputArgs struct {
	// Filter according to instance charge type.
	// - 2: Prepaid;
	// - 3: Postpaid by hour.
	InstanceChargeType pulumi.IntPtrInput `pulumi:"instanceChargeType"`
	// Query according to one or more instance IDs. The instance ID is like: prom-xxxx. The maximum number of instances requested is 100.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// Filter according to instance name.
	InstanceName pulumi.StringPtrInput `pulumi:"instanceName"`
	// Filter according to instance status.
	// - 1: Creating;
	// - 2: In operation;
	// - 3: Abnormal;
	// - 4: Reconstruction;
	// - 5: Destruction;
	// - 6: Stopped taking;
	// - 8: Suspension of service due to arrears;
	// - 9: Service has been suspended due to arrears.
	InstanceStatuses pulumi.IntArrayInput `pulumi:"instanceStatuses"`
	// Filter according to ipv4 address.
	Ipv4Addresses pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	// Filter according to tag Key-Value pair. The tag-key is replaced with a specific label key.
	TagFilters GetTmpInstancesTagFilterArrayInput `pulumi:"tagFilters"`
	// Filter according to availability area. The availability area is shaped like: ap-Guangzhou-1.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetTmpInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTmpInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getTmpInstances.
type GetTmpInstancesResultOutput struct{ *pulumi.OutputState }

func (GetTmpInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTmpInstancesResult)(nil)).Elem()
}

func (o GetTmpInstancesResultOutput) ToGetTmpInstancesResultOutput() GetTmpInstancesResultOutput {
	return o
}

func (o GetTmpInstancesResultOutput) ToGetTmpInstancesResultOutputWithContext(ctx context.Context) GetTmpInstancesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTmpInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Instance charge type.
// - 2: Prepaid;
// - 3: Postpaid by hour.
func (o GetTmpInstancesResultOutput) InstanceChargeType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) *int { return v.InstanceChargeType }).(pulumi.IntPtrOutput)
}

func (o GetTmpInstancesResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// Instance name.
func (o GetTmpInstancesResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

// Instance details list.
func (o GetTmpInstancesResultOutput) InstanceSets() GetTmpInstancesInstanceSetArrayOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) []GetTmpInstancesInstanceSet { return v.InstanceSets }).(GetTmpInstancesInstanceSetArrayOutput)
}

// Filter according to instance status.
// - 1: Creating;
// - 2: In operation;
// - 3: Abnormal;
// - 4: Reconstruction;
// - 5: Destruction;
// - 6: Stopped taking;
// - 8: Suspension of service due to arrears;
// - 9: Service has been suspended due to arrears.
func (o GetTmpInstancesResultOutput) InstanceStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) []int { return v.InstanceStatuses }).(pulumi.IntArrayOutput)
}

// IPV4 address.
func (o GetTmpInstancesResultOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

func (o GetTmpInstancesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetTmpInstancesResultOutput) TagFilters() GetTmpInstancesTagFilterArrayOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) []GetTmpInstancesTagFilter { return v.TagFilters }).(GetTmpInstancesTagFilterArrayOutput)
}

func (o GetTmpInstancesResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTmpInstancesResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTmpInstancesResultOutput{})
}
