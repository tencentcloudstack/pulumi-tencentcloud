// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a monitor grafanaSsoCamConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Monitor"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Monitor.NewGrafanaSsoCamConfig(ctx, "grafanaSsoCamConfig", &Monitor.GrafanaSsoCamConfigArgs{
//				EnableSsoCamCheck: pulumi.Bool(false),
//				InstanceId:        pulumi.String("grafana-dp2hnnfa"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// monitor grafana_sso_cam_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Monitor/grafanaSsoCamConfig:GrafanaSsoCamConfig grafana_sso_cam_config instance_id
//
// ```
type GrafanaSsoCamConfig struct {
	pulumi.CustomResourceState

	// Whether to enable the CAM authorization: `true` for enabling; `false` for disabling.
	EnableSsoCamCheck pulumi.BoolOutput `pulumi:"enableSsoCamCheck"`
	// Grafana instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewGrafanaSsoCamConfig registers a new resource with the given unique name, arguments, and options.
func NewGrafanaSsoCamConfig(ctx *pulumi.Context,
	name string, args *GrafanaSsoCamConfigArgs, opts ...pulumi.ResourceOption) (*GrafanaSsoCamConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableSsoCamCheck == nil {
		return nil, errors.New("invalid value for required argument 'EnableSsoCamCheck'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource GrafanaSsoCamConfig
	err := ctx.RegisterResource("tencentcloud:Monitor/grafanaSsoCamConfig:GrafanaSsoCamConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGrafanaSsoCamConfig gets an existing GrafanaSsoCamConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGrafanaSsoCamConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GrafanaSsoCamConfigState, opts ...pulumi.ResourceOption) (*GrafanaSsoCamConfig, error) {
	var resource GrafanaSsoCamConfig
	err := ctx.ReadResource("tencentcloud:Monitor/grafanaSsoCamConfig:GrafanaSsoCamConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GrafanaSsoCamConfig resources.
type grafanaSsoCamConfigState struct {
	// Whether to enable the CAM authorization: `true` for enabling; `false` for disabling.
	EnableSsoCamCheck *bool `pulumi:"enableSsoCamCheck"`
	// Grafana instance ID.
	InstanceId *string `pulumi:"instanceId"`
}

type GrafanaSsoCamConfigState struct {
	// Whether to enable the CAM authorization: `true` for enabling; `false` for disabling.
	EnableSsoCamCheck pulumi.BoolPtrInput
	// Grafana instance ID.
	InstanceId pulumi.StringPtrInput
}

func (GrafanaSsoCamConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaSsoCamConfigState)(nil)).Elem()
}

type grafanaSsoCamConfigArgs struct {
	// Whether to enable the CAM authorization: `true` for enabling; `false` for disabling.
	EnableSsoCamCheck bool `pulumi:"enableSsoCamCheck"`
	// Grafana instance ID.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a GrafanaSsoCamConfig resource.
type GrafanaSsoCamConfigArgs struct {
	// Whether to enable the CAM authorization: `true` for enabling; `false` for disabling.
	EnableSsoCamCheck pulumi.BoolInput
	// Grafana instance ID.
	InstanceId pulumi.StringInput
}

func (GrafanaSsoCamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaSsoCamConfigArgs)(nil)).Elem()
}

type GrafanaSsoCamConfigInput interface {
	pulumi.Input

	ToGrafanaSsoCamConfigOutput() GrafanaSsoCamConfigOutput
	ToGrafanaSsoCamConfigOutputWithContext(ctx context.Context) GrafanaSsoCamConfigOutput
}

func (*GrafanaSsoCamConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaSsoCamConfig)(nil)).Elem()
}

func (i *GrafanaSsoCamConfig) ToGrafanaSsoCamConfigOutput() GrafanaSsoCamConfigOutput {
	return i.ToGrafanaSsoCamConfigOutputWithContext(context.Background())
}

func (i *GrafanaSsoCamConfig) ToGrafanaSsoCamConfigOutputWithContext(ctx context.Context) GrafanaSsoCamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoCamConfigOutput)
}

// GrafanaSsoCamConfigArrayInput is an input type that accepts GrafanaSsoCamConfigArray and GrafanaSsoCamConfigArrayOutput values.
// You can construct a concrete instance of `GrafanaSsoCamConfigArrayInput` via:
//
//	GrafanaSsoCamConfigArray{ GrafanaSsoCamConfigArgs{...} }
type GrafanaSsoCamConfigArrayInput interface {
	pulumi.Input

	ToGrafanaSsoCamConfigArrayOutput() GrafanaSsoCamConfigArrayOutput
	ToGrafanaSsoCamConfigArrayOutputWithContext(context.Context) GrafanaSsoCamConfigArrayOutput
}

type GrafanaSsoCamConfigArray []GrafanaSsoCamConfigInput

func (GrafanaSsoCamConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaSsoCamConfig)(nil)).Elem()
}

func (i GrafanaSsoCamConfigArray) ToGrafanaSsoCamConfigArrayOutput() GrafanaSsoCamConfigArrayOutput {
	return i.ToGrafanaSsoCamConfigArrayOutputWithContext(context.Background())
}

func (i GrafanaSsoCamConfigArray) ToGrafanaSsoCamConfigArrayOutputWithContext(ctx context.Context) GrafanaSsoCamConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoCamConfigArrayOutput)
}

// GrafanaSsoCamConfigMapInput is an input type that accepts GrafanaSsoCamConfigMap and GrafanaSsoCamConfigMapOutput values.
// You can construct a concrete instance of `GrafanaSsoCamConfigMapInput` via:
//
//	GrafanaSsoCamConfigMap{ "key": GrafanaSsoCamConfigArgs{...} }
type GrafanaSsoCamConfigMapInput interface {
	pulumi.Input

	ToGrafanaSsoCamConfigMapOutput() GrafanaSsoCamConfigMapOutput
	ToGrafanaSsoCamConfigMapOutputWithContext(context.Context) GrafanaSsoCamConfigMapOutput
}

type GrafanaSsoCamConfigMap map[string]GrafanaSsoCamConfigInput

func (GrafanaSsoCamConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaSsoCamConfig)(nil)).Elem()
}

func (i GrafanaSsoCamConfigMap) ToGrafanaSsoCamConfigMapOutput() GrafanaSsoCamConfigMapOutput {
	return i.ToGrafanaSsoCamConfigMapOutputWithContext(context.Background())
}

func (i GrafanaSsoCamConfigMap) ToGrafanaSsoCamConfigMapOutputWithContext(ctx context.Context) GrafanaSsoCamConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoCamConfigMapOutput)
}

type GrafanaSsoCamConfigOutput struct{ *pulumi.OutputState }

func (GrafanaSsoCamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaSsoCamConfig)(nil)).Elem()
}

func (o GrafanaSsoCamConfigOutput) ToGrafanaSsoCamConfigOutput() GrafanaSsoCamConfigOutput {
	return o
}

func (o GrafanaSsoCamConfigOutput) ToGrafanaSsoCamConfigOutputWithContext(ctx context.Context) GrafanaSsoCamConfigOutput {
	return o
}

// Whether to enable the CAM authorization: `true` for enabling; `false` for disabling.
func (o GrafanaSsoCamConfigOutput) EnableSsoCamCheck() pulumi.BoolOutput {
	return o.ApplyT(func(v *GrafanaSsoCamConfig) pulumi.BoolOutput { return v.EnableSsoCamCheck }).(pulumi.BoolOutput)
}

// Grafana instance ID.
func (o GrafanaSsoCamConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *GrafanaSsoCamConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type GrafanaSsoCamConfigArrayOutput struct{ *pulumi.OutputState }

func (GrafanaSsoCamConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaSsoCamConfig)(nil)).Elem()
}

func (o GrafanaSsoCamConfigArrayOutput) ToGrafanaSsoCamConfigArrayOutput() GrafanaSsoCamConfigArrayOutput {
	return o
}

func (o GrafanaSsoCamConfigArrayOutput) ToGrafanaSsoCamConfigArrayOutputWithContext(ctx context.Context) GrafanaSsoCamConfigArrayOutput {
	return o
}

func (o GrafanaSsoCamConfigArrayOutput) Index(i pulumi.IntInput) GrafanaSsoCamConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GrafanaSsoCamConfig {
		return vs[0].([]*GrafanaSsoCamConfig)[vs[1].(int)]
	}).(GrafanaSsoCamConfigOutput)
}

type GrafanaSsoCamConfigMapOutput struct{ *pulumi.OutputState }

func (GrafanaSsoCamConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaSsoCamConfig)(nil)).Elem()
}

func (o GrafanaSsoCamConfigMapOutput) ToGrafanaSsoCamConfigMapOutput() GrafanaSsoCamConfigMapOutput {
	return o
}

func (o GrafanaSsoCamConfigMapOutput) ToGrafanaSsoCamConfigMapOutputWithContext(ctx context.Context) GrafanaSsoCamConfigMapOutput {
	return o
}

func (o GrafanaSsoCamConfigMapOutput) MapIndex(k pulumi.StringInput) GrafanaSsoCamConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GrafanaSsoCamConfig {
		return vs[0].(map[string]*GrafanaSsoCamConfig)[vs[1].(string)]
	}).(GrafanaSsoCamConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoCamConfigInput)(nil)).Elem(), &GrafanaSsoCamConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoCamConfigArrayInput)(nil)).Elem(), GrafanaSsoCamConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoCamConfigMapInput)(nil)).Elem(), GrafanaSsoCamConfigMap{})
	pulumi.RegisterOutputType(GrafanaSsoCamConfigOutput{})
	pulumi.RegisterOutputType(GrafanaSsoCamConfigArrayOutput{})
	pulumi.RegisterOutputType(GrafanaSsoCamConfigMapOutput{})
}
