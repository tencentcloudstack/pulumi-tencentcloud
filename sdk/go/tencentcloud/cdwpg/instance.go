// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdwpg

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a cdwpg instance
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Cdwpg"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Cdwpg"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Cdwpg.NewInstance(ctx, "instance", &Cdwpg.InstanceArgs{
//				AdminPassword: pulumi.String("xxxxxx"),
//				ChargeProperties: &cdwpg.InstanceChargePropertiesArgs{
//					ChargeType: pulumi.String("POSTPAID_BY_HOUR"),
//					RenewFlag:  pulumi.Int(0),
//					TimeSpan:   pulumi.Int(1),
//					TimeUnit:   pulumi.String("h"),
//				},
//				InstanceName: pulumi.String("test_cdwpg"),
//				Resources: cdwpg.InstanceResourceArray{
//					&cdwpg.InstanceResourceArgs{
//						Count: pulumi.Int(2),
//						DiskSpec: &cdwpg.InstanceResourceDiskSpecArgs{
//							DiskCount: pulumi.Int(1),
//							DiskSize:  pulumi.Int(200),
//							DiskType:  pulumi.String("CLOUD_HSSD"),
//						},
//						SpecName: pulumi.String("S_4_16_H_CN"),
//						Type:     pulumi.String("cn"),
//					},
//					&cdwpg.InstanceResourceArgs{
//						Count: pulumi.Int(2),
//						DiskSpec: &cdwpg.InstanceResourceDiskSpecArgs{
//							DiskCount: pulumi.Int(10),
//							DiskSize:  pulumi.Int(20),
//							DiskType:  pulumi.String("CLOUD_HSSD"),
//						},
//						SpecName: pulumi.String("S_4_16_H_CN"),
//						Type:     pulumi.String("dn"),
//					},
//				},
//				Tags: pulumi.AnyMap{
//					"tagKey": pulumi.Any("tagValue"),
//				},
//				UserSubnetId: pulumi.String("subnet-xxxxxx"),
//				UserVpcId:    pulumi.String("vpc-xxxxxx"),
//				Zone:         pulumi.String("ap-guangzhou-6"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// cdwpg instance can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Cdwpg/instance:Instance instance instance_id
//
// ```
type Instance struct {
	pulumi.CustomResourceState

	// cluster password.
	AdminPassword pulumi.StringOutput `pulumi:"adminPassword"`
	// instance billing mode.
	ChargeProperties InstanceChargePropertiesOutput `pulumi:"chargeProperties"`
	// instance name.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// resource information.
	Resources InstanceResourceArrayOutput `pulumi:"resources"`
	// Tag description list.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// subnet.
	UserSubnetId pulumi.StringOutput `pulumi:"userSubnetId"`
	// private network.
	UserVpcId pulumi.StringOutput `pulumi:"userVpcId"`
	// Availability Zone.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminPassword == nil {
		return nil, errors.New("invalid value for required argument 'AdminPassword'")
	}
	if args.ChargeProperties == nil {
		return nil, errors.New("invalid value for required argument 'ChargeProperties'")
	}
	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	if args.UserSubnetId == nil {
		return nil, errors.New("invalid value for required argument 'UserSubnetId'")
	}
	if args.UserVpcId == nil {
		return nil, errors.New("invalid value for required argument 'UserVpcId'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("tencentcloud:Cdwpg/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("tencentcloud:Cdwpg/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// cluster password.
	AdminPassword *string `pulumi:"adminPassword"`
	// instance billing mode.
	ChargeProperties *InstanceChargeProperties `pulumi:"chargeProperties"`
	// instance name.
	InstanceName *string `pulumi:"instanceName"`
	// resource information.
	Resources []InstanceResource `pulumi:"resources"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
	// subnet.
	UserSubnetId *string `pulumi:"userSubnetId"`
	// private network.
	UserVpcId *string `pulumi:"userVpcId"`
	// Availability Zone.
	Zone *string `pulumi:"zone"`
}

type InstanceState struct {
	// cluster password.
	AdminPassword pulumi.StringPtrInput
	// instance billing mode.
	ChargeProperties InstanceChargePropertiesPtrInput
	// instance name.
	InstanceName pulumi.StringPtrInput
	// resource information.
	Resources InstanceResourceArrayInput
	// Tag description list.
	Tags pulumi.MapInput
	// subnet.
	UserSubnetId pulumi.StringPtrInput
	// private network.
	UserVpcId pulumi.StringPtrInput
	// Availability Zone.
	Zone pulumi.StringPtrInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// cluster password.
	AdminPassword string `pulumi:"adminPassword"`
	// instance billing mode.
	ChargeProperties InstanceChargeProperties `pulumi:"chargeProperties"`
	// instance name.
	InstanceName string `pulumi:"instanceName"`
	// resource information.
	Resources []InstanceResource `pulumi:"resources"`
	// Tag description list.
	Tags map[string]interface{} `pulumi:"tags"`
	// subnet.
	UserSubnetId string `pulumi:"userSubnetId"`
	// private network.
	UserVpcId string `pulumi:"userVpcId"`
	// Availability Zone.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// cluster password.
	AdminPassword pulumi.StringInput
	// instance billing mode.
	ChargeProperties InstanceChargePropertiesInput
	// instance name.
	InstanceName pulumi.StringInput
	// resource information.
	Resources InstanceResourceArrayInput
	// Tag description list.
	Tags pulumi.MapInput
	// subnet.
	UserSubnetId pulumi.StringInput
	// private network.
	UserVpcId pulumi.StringInput
	// Availability Zone.
	Zone pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// cluster password.
func (o InstanceOutput) AdminPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.AdminPassword }).(pulumi.StringOutput)
}

// instance billing mode.
func (o InstanceOutput) ChargeProperties() InstanceChargePropertiesOutput {
	return o.ApplyT(func(v *Instance) InstanceChargePropertiesOutput { return v.ChargeProperties }).(InstanceChargePropertiesOutput)
}

// instance name.
func (o InstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// resource information.
func (o InstanceOutput) Resources() InstanceResourceArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceResourceArrayOutput { return v.Resources }).(InstanceResourceArrayOutput)
}

// Tag description list.
func (o InstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Instance) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// subnet.
func (o InstanceOutput) UserSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UserSubnetId }).(pulumi.StringOutput)
}

// private network.
func (o InstanceOutput) UserVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.UserVpcId }).(pulumi.StringOutput)
}

// Availability Zone.
func (o InstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
