// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package audits

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInstanceAuditList struct {
	// Indicate whether audit start logging or not.
	AuditSwitch bool `pulumi:"auditSwitch"`
	// Cos bucket name where audit save logs.
	CosBucket string `pulumi:"cosBucket"`
	// ID of the audit.
	Id string `pulumi:"id"`
	// Prefix of the log file of the audit.
	LogFilePrefix string `pulumi:"logFilePrefix"`
	// Name of the audits.
	Name string `pulumi:"name"`
}

// GetInstanceAuditListInput is an input type that accepts GetInstanceAuditListArgs and GetInstanceAuditListOutput values.
// You can construct a concrete instance of `GetInstanceAuditListInput` via:
//
//	GetInstanceAuditListArgs{...}
type GetInstanceAuditListInput interface {
	pulumi.Input

	ToGetInstanceAuditListOutput() GetInstanceAuditListOutput
	ToGetInstanceAuditListOutputWithContext(context.Context) GetInstanceAuditListOutput
}

type GetInstanceAuditListArgs struct {
	// Indicate whether audit start logging or not.
	AuditSwitch pulumi.BoolInput `pulumi:"auditSwitch"`
	// Cos bucket name where audit save logs.
	CosBucket pulumi.StringInput `pulumi:"cosBucket"`
	// ID of the audit.
	Id pulumi.StringInput `pulumi:"id"`
	// Prefix of the log file of the audit.
	LogFilePrefix pulumi.StringInput `pulumi:"logFilePrefix"`
	// Name of the audits.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetInstanceAuditListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAuditList)(nil)).Elem()
}

func (i GetInstanceAuditListArgs) ToGetInstanceAuditListOutput() GetInstanceAuditListOutput {
	return i.ToGetInstanceAuditListOutputWithContext(context.Background())
}

func (i GetInstanceAuditListArgs) ToGetInstanceAuditListOutputWithContext(ctx context.Context) GetInstanceAuditListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAuditListOutput)
}

// GetInstanceAuditListArrayInput is an input type that accepts GetInstanceAuditListArray and GetInstanceAuditListArrayOutput values.
// You can construct a concrete instance of `GetInstanceAuditListArrayInput` via:
//
//	GetInstanceAuditListArray{ GetInstanceAuditListArgs{...} }
type GetInstanceAuditListArrayInput interface {
	pulumi.Input

	ToGetInstanceAuditListArrayOutput() GetInstanceAuditListArrayOutput
	ToGetInstanceAuditListArrayOutputWithContext(context.Context) GetInstanceAuditListArrayOutput
}

type GetInstanceAuditListArray []GetInstanceAuditListInput

func (GetInstanceAuditListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAuditList)(nil)).Elem()
}

func (i GetInstanceAuditListArray) ToGetInstanceAuditListArrayOutput() GetInstanceAuditListArrayOutput {
	return i.ToGetInstanceAuditListArrayOutputWithContext(context.Background())
}

func (i GetInstanceAuditListArray) ToGetInstanceAuditListArrayOutputWithContext(ctx context.Context) GetInstanceAuditListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceAuditListArrayOutput)
}

type GetInstanceAuditListOutput struct{ *pulumi.OutputState }

func (GetInstanceAuditListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceAuditList)(nil)).Elem()
}

func (o GetInstanceAuditListOutput) ToGetInstanceAuditListOutput() GetInstanceAuditListOutput {
	return o
}

func (o GetInstanceAuditListOutput) ToGetInstanceAuditListOutputWithContext(ctx context.Context) GetInstanceAuditListOutput {
	return o
}

// Indicate whether audit start logging or not.
func (o GetInstanceAuditListOutput) AuditSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceAuditList) bool { return v.AuditSwitch }).(pulumi.BoolOutput)
}

// Cos bucket name where audit save logs.
func (o GetInstanceAuditListOutput) CosBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAuditList) string { return v.CosBucket }).(pulumi.StringOutput)
}

// ID of the audit.
func (o GetInstanceAuditListOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAuditList) string { return v.Id }).(pulumi.StringOutput)
}

// Prefix of the log file of the audit.
func (o GetInstanceAuditListOutput) LogFilePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAuditList) string { return v.LogFilePrefix }).(pulumi.StringOutput)
}

// Name of the audits.
func (o GetInstanceAuditListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceAuditList) string { return v.Name }).(pulumi.StringOutput)
}

type GetInstanceAuditListArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceAuditListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceAuditList)(nil)).Elem()
}

func (o GetInstanceAuditListArrayOutput) ToGetInstanceAuditListArrayOutput() GetInstanceAuditListArrayOutput {
	return o
}

func (o GetInstanceAuditListArrayOutput) ToGetInstanceAuditListArrayOutputWithContext(ctx context.Context) GetInstanceAuditListArrayOutput {
	return o
}

func (o GetInstanceAuditListArrayOutput) Index(i pulumi.IntInput) GetInstanceAuditListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceAuditList {
		return vs[0].([]GetInstanceAuditList)[vs[1].(int)]
	}).(GetInstanceAuditListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAuditListInput)(nil)).Elem(), GetInstanceAuditListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceAuditListArrayInput)(nil)).Elem(), GetInstanceAuditListArray{})
	pulumi.RegisterOutputType(GetInstanceAuditListOutput{})
	pulumi.RegisterOutputType(GetInstanceAuditListArrayOutput{})
}
