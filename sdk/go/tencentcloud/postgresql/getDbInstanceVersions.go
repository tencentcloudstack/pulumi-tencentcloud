// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of postgresql dbInstanceVersions
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Postgresql"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Postgresql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Postgresql.GetDbInstanceVersions(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDbInstanceVersions(ctx *pulumi.Context, args *GetDbInstanceVersionsArgs, opts ...pulumi.InvokeOption) (*GetDbInstanceVersionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetDbInstanceVersionsResult
	err := ctx.Invoke("tencentcloud:Postgresql/getDbInstanceVersions:getDbInstanceVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbInstanceVersions.
type GetDbInstanceVersionsArgs struct {
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDbInstanceVersions.
type GetDbInstanceVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	// List of database versions.
	VersionSets []GetDbInstanceVersionsVersionSet `pulumi:"versionSets"`
}

func GetDbInstanceVersionsOutput(ctx *pulumi.Context, args GetDbInstanceVersionsOutputArgs, opts ...pulumi.InvokeOption) GetDbInstanceVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDbInstanceVersionsResult, error) {
			args := v.(GetDbInstanceVersionsArgs)
			r, err := GetDbInstanceVersions(ctx, &args, opts...)
			var s GetDbInstanceVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDbInstanceVersionsResultOutput)
}

// A collection of arguments for invoking getDbInstanceVersions.
type GetDbInstanceVersionsOutputArgs struct {
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetDbInstanceVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstanceVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getDbInstanceVersions.
type GetDbInstanceVersionsResultOutput struct{ *pulumi.OutputState }

func (GetDbInstanceVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbInstanceVersionsResult)(nil)).Elem()
}

func (o GetDbInstanceVersionsResultOutput) ToGetDbInstanceVersionsResultOutput() GetDbInstanceVersionsResultOutput {
	return o
}

func (o GetDbInstanceVersionsResultOutput) ToGetDbInstanceVersionsResultOutputWithContext(ctx context.Context) GetDbInstanceVersionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDbInstanceVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbInstanceVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDbInstanceVersionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbInstanceVersionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

// List of database versions.
func (o GetDbInstanceVersionsResultOutput) VersionSets() GetDbInstanceVersionsVersionSetArrayOutput {
	return o.ApplyT(func(v GetDbInstanceVersionsResult) []GetDbInstanceVersionsVersionSet { return v.VersionSets }).(GetDbInstanceVersionsVersionSetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDbInstanceVersionsResultOutput{})
}
