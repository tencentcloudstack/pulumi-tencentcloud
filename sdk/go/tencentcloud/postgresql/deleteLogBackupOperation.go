// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a postgresql deleteLogBackupOperation
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Postgresql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Postgresql.NewDeleteLogBackupOperation(ctx, "deleteLogBackupOperation", &Postgresql.DeleteLogBackupOperationArgs{
//				DbInstanceId: pulumi.String("local.pg_id"),
//				LogBackupId:  pulumi.String("local.pg_log_backup_id"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DeleteLogBackupOperation struct {
	pulumi.CustomResourceState

	// Instance ID.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// Log backup ID.
	LogBackupId pulumi.StringOutput `pulumi:"logBackupId"`
}

// NewDeleteLogBackupOperation registers a new resource with the given unique name, arguments, and options.
func NewDeleteLogBackupOperation(ctx *pulumi.Context,
	name string, args *DeleteLogBackupOperationArgs, opts ...pulumi.ResourceOption) (*DeleteLogBackupOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	if args.LogBackupId == nil {
		return nil, errors.New("invalid value for required argument 'LogBackupId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DeleteLogBackupOperation
	err := ctx.RegisterResource("tencentcloud:Postgresql/deleteLogBackupOperation:DeleteLogBackupOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeleteLogBackupOperation gets an existing DeleteLogBackupOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeleteLogBackupOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeleteLogBackupOperationState, opts ...pulumi.ResourceOption) (*DeleteLogBackupOperation, error) {
	var resource DeleteLogBackupOperation
	err := ctx.ReadResource("tencentcloud:Postgresql/deleteLogBackupOperation:DeleteLogBackupOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeleteLogBackupOperation resources.
type deleteLogBackupOperationState struct {
	// Instance ID.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// Log backup ID.
	LogBackupId *string `pulumi:"logBackupId"`
}

type DeleteLogBackupOperationState struct {
	// Instance ID.
	DbInstanceId pulumi.StringPtrInput
	// Log backup ID.
	LogBackupId pulumi.StringPtrInput
}

func (DeleteLogBackupOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*deleteLogBackupOperationState)(nil)).Elem()
}

type deleteLogBackupOperationArgs struct {
	// Instance ID.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// Log backup ID.
	LogBackupId string `pulumi:"logBackupId"`
}

// The set of arguments for constructing a DeleteLogBackupOperation resource.
type DeleteLogBackupOperationArgs struct {
	// Instance ID.
	DbInstanceId pulumi.StringInput
	// Log backup ID.
	LogBackupId pulumi.StringInput
}

func (DeleteLogBackupOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deleteLogBackupOperationArgs)(nil)).Elem()
}

type DeleteLogBackupOperationInput interface {
	pulumi.Input

	ToDeleteLogBackupOperationOutput() DeleteLogBackupOperationOutput
	ToDeleteLogBackupOperationOutputWithContext(ctx context.Context) DeleteLogBackupOperationOutput
}

func (*DeleteLogBackupOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteLogBackupOperation)(nil)).Elem()
}

func (i *DeleteLogBackupOperation) ToDeleteLogBackupOperationOutput() DeleteLogBackupOperationOutput {
	return i.ToDeleteLogBackupOperationOutputWithContext(context.Background())
}

func (i *DeleteLogBackupOperation) ToDeleteLogBackupOperationOutputWithContext(ctx context.Context) DeleteLogBackupOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteLogBackupOperationOutput)
}

// DeleteLogBackupOperationArrayInput is an input type that accepts DeleteLogBackupOperationArray and DeleteLogBackupOperationArrayOutput values.
// You can construct a concrete instance of `DeleteLogBackupOperationArrayInput` via:
//
//	DeleteLogBackupOperationArray{ DeleteLogBackupOperationArgs{...} }
type DeleteLogBackupOperationArrayInput interface {
	pulumi.Input

	ToDeleteLogBackupOperationArrayOutput() DeleteLogBackupOperationArrayOutput
	ToDeleteLogBackupOperationArrayOutputWithContext(context.Context) DeleteLogBackupOperationArrayOutput
}

type DeleteLogBackupOperationArray []DeleteLogBackupOperationInput

func (DeleteLogBackupOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeleteLogBackupOperation)(nil)).Elem()
}

func (i DeleteLogBackupOperationArray) ToDeleteLogBackupOperationArrayOutput() DeleteLogBackupOperationArrayOutput {
	return i.ToDeleteLogBackupOperationArrayOutputWithContext(context.Background())
}

func (i DeleteLogBackupOperationArray) ToDeleteLogBackupOperationArrayOutputWithContext(ctx context.Context) DeleteLogBackupOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteLogBackupOperationArrayOutput)
}

// DeleteLogBackupOperationMapInput is an input type that accepts DeleteLogBackupOperationMap and DeleteLogBackupOperationMapOutput values.
// You can construct a concrete instance of `DeleteLogBackupOperationMapInput` via:
//
//	DeleteLogBackupOperationMap{ "key": DeleteLogBackupOperationArgs{...} }
type DeleteLogBackupOperationMapInput interface {
	pulumi.Input

	ToDeleteLogBackupOperationMapOutput() DeleteLogBackupOperationMapOutput
	ToDeleteLogBackupOperationMapOutputWithContext(context.Context) DeleteLogBackupOperationMapOutput
}

type DeleteLogBackupOperationMap map[string]DeleteLogBackupOperationInput

func (DeleteLogBackupOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeleteLogBackupOperation)(nil)).Elem()
}

func (i DeleteLogBackupOperationMap) ToDeleteLogBackupOperationMapOutput() DeleteLogBackupOperationMapOutput {
	return i.ToDeleteLogBackupOperationMapOutputWithContext(context.Background())
}

func (i DeleteLogBackupOperationMap) ToDeleteLogBackupOperationMapOutputWithContext(ctx context.Context) DeleteLogBackupOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeleteLogBackupOperationMapOutput)
}

type DeleteLogBackupOperationOutput struct{ *pulumi.OutputState }

func (DeleteLogBackupOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeleteLogBackupOperation)(nil)).Elem()
}

func (o DeleteLogBackupOperationOutput) ToDeleteLogBackupOperationOutput() DeleteLogBackupOperationOutput {
	return o
}

func (o DeleteLogBackupOperationOutput) ToDeleteLogBackupOperationOutputWithContext(ctx context.Context) DeleteLogBackupOperationOutput {
	return o
}

// Instance ID.
func (o DeleteLogBackupOperationOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeleteLogBackupOperation) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// Log backup ID.
func (o DeleteLogBackupOperationOutput) LogBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeleteLogBackupOperation) pulumi.StringOutput { return v.LogBackupId }).(pulumi.StringOutput)
}

type DeleteLogBackupOperationArrayOutput struct{ *pulumi.OutputState }

func (DeleteLogBackupOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeleteLogBackupOperation)(nil)).Elem()
}

func (o DeleteLogBackupOperationArrayOutput) ToDeleteLogBackupOperationArrayOutput() DeleteLogBackupOperationArrayOutput {
	return o
}

func (o DeleteLogBackupOperationArrayOutput) ToDeleteLogBackupOperationArrayOutputWithContext(ctx context.Context) DeleteLogBackupOperationArrayOutput {
	return o
}

func (o DeleteLogBackupOperationArrayOutput) Index(i pulumi.IntInput) DeleteLogBackupOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeleteLogBackupOperation {
		return vs[0].([]*DeleteLogBackupOperation)[vs[1].(int)]
	}).(DeleteLogBackupOperationOutput)
}

type DeleteLogBackupOperationMapOutput struct{ *pulumi.OutputState }

func (DeleteLogBackupOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeleteLogBackupOperation)(nil)).Elem()
}

func (o DeleteLogBackupOperationMapOutput) ToDeleteLogBackupOperationMapOutput() DeleteLogBackupOperationMapOutput {
	return o
}

func (o DeleteLogBackupOperationMapOutput) ToDeleteLogBackupOperationMapOutputWithContext(ctx context.Context) DeleteLogBackupOperationMapOutput {
	return o
}

func (o DeleteLogBackupOperationMapOutput) MapIndex(k pulumi.StringInput) DeleteLogBackupOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeleteLogBackupOperation {
		return vs[0].(map[string]*DeleteLogBackupOperation)[vs[1].(string)]
	}).(DeleteLogBackupOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeleteLogBackupOperationInput)(nil)).Elem(), &DeleteLogBackupOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeleteLogBackupOperationArrayInput)(nil)).Elem(), DeleteLogBackupOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeleteLogBackupOperationMapInput)(nil)).Elem(), DeleteLogBackupOperationMap{})
	pulumi.RegisterOutputType(DeleteLogBackupOperationOutput{})
	pulumi.RegisterOutputType(DeleteLogBackupOperationArrayOutput{})
	pulumi.RegisterOutputType(DeleteLogBackupOperationMapOutput{})
}
