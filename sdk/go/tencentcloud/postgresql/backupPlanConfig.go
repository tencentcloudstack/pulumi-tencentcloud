// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a postgres backupPlanConfig
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Postgresql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Postgresql.NewBackupPlanConfig(ctx, "backupPlanConfig", &Postgresql.BackupPlanConfigArgs{
//				DbInstanceId:              pulumi.Any(local.Pgsql_id),
//				MinBackupStartTime:        pulumi.String("01:00:00"),
//				MaxBackupStartTime:        pulumi.String("02:00:00"),
//				BaseBackupRetentionPeriod: pulumi.Int(7),
//				BackupPeriods: pulumi.StringArray{
//					pulumi.String("monday"),
//					pulumi.String("wednesday"),
//					pulumi.String("friday"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// postgres backup_plan_config can be imported using the id, e.g.
//
// ```sh
//
//	$ pulumi import tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig backup_plan_config backup_plan_config_id
//
// ```
type BackupPlanConfig struct {
	pulumi.CustomResourceState

	// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
	BackupPeriods pulumi.StringArrayOutput `pulumi:"backupPeriods"`
	// Backup retention period in days. Value range:3-7.
	BaseBackupRetentionPeriod pulumi.IntPtrOutput `pulumi:"baseBackupRetentionPeriod"`
	// instance id.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// The latest time to start a backup.
	MaxBackupStartTime pulumi.StringPtrOutput `pulumi:"maxBackupStartTime"`
	// The earliest time to start a backup.
	MinBackupStartTime pulumi.StringPtrOutput `pulumi:"minBackupStartTime"`
}

// NewBackupPlanConfig registers a new resource with the given unique name, arguments, and options.
func NewBackupPlanConfig(ctx *pulumi.Context,
	name string, args *BackupPlanConfigArgs, opts ...pulumi.ResourceOption) (*BackupPlanConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BackupPlanConfig
	err := ctx.RegisterResource("tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupPlanConfig gets an existing BackupPlanConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPlanConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupPlanConfigState, opts ...pulumi.ResourceOption) (*BackupPlanConfig, error) {
	var resource BackupPlanConfig
	err := ctx.ReadResource("tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupPlanConfig resources.
type backupPlanConfigState struct {
	// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
	BackupPeriods []string `pulumi:"backupPeriods"`
	// Backup retention period in days. Value range:3-7.
	BaseBackupRetentionPeriod *int `pulumi:"baseBackupRetentionPeriod"`
	// instance id.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// The latest time to start a backup.
	MaxBackupStartTime *string `pulumi:"maxBackupStartTime"`
	// The earliest time to start a backup.
	MinBackupStartTime *string `pulumi:"minBackupStartTime"`
}

type BackupPlanConfigState struct {
	// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
	BackupPeriods pulumi.StringArrayInput
	// Backup retention period in days. Value range:3-7.
	BaseBackupRetentionPeriod pulumi.IntPtrInput
	// instance id.
	DbInstanceId pulumi.StringPtrInput
	// The latest time to start a backup.
	MaxBackupStartTime pulumi.StringPtrInput
	// The earliest time to start a backup.
	MinBackupStartTime pulumi.StringPtrInput
}

func (BackupPlanConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPlanConfigState)(nil)).Elem()
}

type backupPlanConfigArgs struct {
	// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
	BackupPeriods []string `pulumi:"backupPeriods"`
	// Backup retention period in days. Value range:3-7.
	BaseBackupRetentionPeriod *int `pulumi:"baseBackupRetentionPeriod"`
	// instance id.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// The latest time to start a backup.
	MaxBackupStartTime *string `pulumi:"maxBackupStartTime"`
	// The earliest time to start a backup.
	MinBackupStartTime *string `pulumi:"minBackupStartTime"`
}

// The set of arguments for constructing a BackupPlanConfig resource.
type BackupPlanConfigArgs struct {
	// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
	BackupPeriods pulumi.StringArrayInput
	// Backup retention period in days. Value range:3-7.
	BaseBackupRetentionPeriod pulumi.IntPtrInput
	// instance id.
	DbInstanceId pulumi.StringInput
	// The latest time to start a backup.
	MaxBackupStartTime pulumi.StringPtrInput
	// The earliest time to start a backup.
	MinBackupStartTime pulumi.StringPtrInput
}

func (BackupPlanConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupPlanConfigArgs)(nil)).Elem()
}

type BackupPlanConfigInput interface {
	pulumi.Input

	ToBackupPlanConfigOutput() BackupPlanConfigOutput
	ToBackupPlanConfigOutputWithContext(ctx context.Context) BackupPlanConfigOutput
}

func (*BackupPlanConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanConfig)(nil)).Elem()
}

func (i *BackupPlanConfig) ToBackupPlanConfigOutput() BackupPlanConfigOutput {
	return i.ToBackupPlanConfigOutputWithContext(context.Background())
}

func (i *BackupPlanConfig) ToBackupPlanConfigOutputWithContext(ctx context.Context) BackupPlanConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanConfigOutput)
}

// BackupPlanConfigArrayInput is an input type that accepts BackupPlanConfigArray and BackupPlanConfigArrayOutput values.
// You can construct a concrete instance of `BackupPlanConfigArrayInput` via:
//
//	BackupPlanConfigArray{ BackupPlanConfigArgs{...} }
type BackupPlanConfigArrayInput interface {
	pulumi.Input

	ToBackupPlanConfigArrayOutput() BackupPlanConfigArrayOutput
	ToBackupPlanConfigArrayOutputWithContext(context.Context) BackupPlanConfigArrayOutput
}

type BackupPlanConfigArray []BackupPlanConfigInput

func (BackupPlanConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPlanConfig)(nil)).Elem()
}

func (i BackupPlanConfigArray) ToBackupPlanConfigArrayOutput() BackupPlanConfigArrayOutput {
	return i.ToBackupPlanConfigArrayOutputWithContext(context.Background())
}

func (i BackupPlanConfigArray) ToBackupPlanConfigArrayOutputWithContext(ctx context.Context) BackupPlanConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanConfigArrayOutput)
}

// BackupPlanConfigMapInput is an input type that accepts BackupPlanConfigMap and BackupPlanConfigMapOutput values.
// You can construct a concrete instance of `BackupPlanConfigMapInput` via:
//
//	BackupPlanConfigMap{ "key": BackupPlanConfigArgs{...} }
type BackupPlanConfigMapInput interface {
	pulumi.Input

	ToBackupPlanConfigMapOutput() BackupPlanConfigMapOutput
	ToBackupPlanConfigMapOutputWithContext(context.Context) BackupPlanConfigMapOutput
}

type BackupPlanConfigMap map[string]BackupPlanConfigInput

func (BackupPlanConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPlanConfig)(nil)).Elem()
}

func (i BackupPlanConfigMap) ToBackupPlanConfigMapOutput() BackupPlanConfigMapOutput {
	return i.ToBackupPlanConfigMapOutputWithContext(context.Background())
}

func (i BackupPlanConfigMap) ToBackupPlanConfigMapOutputWithContext(ctx context.Context) BackupPlanConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanConfigMapOutput)
}

type BackupPlanConfigOutput struct{ *pulumi.OutputState }

func (BackupPlanConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanConfig)(nil)).Elem()
}

func (o BackupPlanConfigOutput) ToBackupPlanConfigOutput() BackupPlanConfigOutput {
	return o
}

func (o BackupPlanConfigOutput) ToBackupPlanConfigOutputWithContext(ctx context.Context) BackupPlanConfigOutput {
	return o
}

// Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the lowercase names of the days of the week.
func (o BackupPlanConfigOutput) BackupPeriods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupPlanConfig) pulumi.StringArrayOutput { return v.BackupPeriods }).(pulumi.StringArrayOutput)
}

// Backup retention period in days. Value range:3-7.
func (o BackupPlanConfigOutput) BaseBackupRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackupPlanConfig) pulumi.IntPtrOutput { return v.BaseBackupRetentionPeriod }).(pulumi.IntPtrOutput)
}

// instance id.
func (o BackupPlanConfigOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupPlanConfig) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// The latest time to start a backup.
func (o BackupPlanConfigOutput) MaxBackupStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlanConfig) pulumi.StringPtrOutput { return v.MaxBackupStartTime }).(pulumi.StringPtrOutput)
}

// The earliest time to start a backup.
func (o BackupPlanConfigOutput) MinBackupStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlanConfig) pulumi.StringPtrOutput { return v.MinBackupStartTime }).(pulumi.StringPtrOutput)
}

type BackupPlanConfigArrayOutput struct{ *pulumi.OutputState }

func (BackupPlanConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BackupPlanConfig)(nil)).Elem()
}

func (o BackupPlanConfigArrayOutput) ToBackupPlanConfigArrayOutput() BackupPlanConfigArrayOutput {
	return o
}

func (o BackupPlanConfigArrayOutput) ToBackupPlanConfigArrayOutputWithContext(ctx context.Context) BackupPlanConfigArrayOutput {
	return o
}

func (o BackupPlanConfigArrayOutput) Index(i pulumi.IntInput) BackupPlanConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BackupPlanConfig {
		return vs[0].([]*BackupPlanConfig)[vs[1].(int)]
	}).(BackupPlanConfigOutput)
}

type BackupPlanConfigMapOutput struct{ *pulumi.OutputState }

func (BackupPlanConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BackupPlanConfig)(nil)).Elem()
}

func (o BackupPlanConfigMapOutput) ToBackupPlanConfigMapOutput() BackupPlanConfigMapOutput {
	return o
}

func (o BackupPlanConfigMapOutput) ToBackupPlanConfigMapOutputWithContext(ctx context.Context) BackupPlanConfigMapOutput {
	return o
}

func (o BackupPlanConfigMapOutput) MapIndex(k pulumi.StringInput) BackupPlanConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BackupPlanConfig {
		return vs[0].(map[string]*BackupPlanConfig)[vs[1].(string)]
	}).(BackupPlanConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanConfigInput)(nil)).Elem(), &BackupPlanConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanConfigArrayInput)(nil)).Elem(), BackupPlanConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPlanConfigMapInput)(nil)).Elem(), BackupPlanConfigMap{})
	pulumi.RegisterOutputType(BackupPlanConfigOutput{})
	pulumi.RegisterOutputType(BackupPlanConfigArrayOutput{})
	pulumi.RegisterOutputType(BackupPlanConfigMapOutput{})
}
