// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
)

// Provides a resource to create postgresql account privileges
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Postgresql"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Subnet"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			availabilityZone := "ap-guangzhou-3"
//			if param := cfg.Get("availabilityZone"); param != "" {
//				availabilityZone = param
//			}
//			// create vpc
//			vpc, err := Vpc.NewInstance(ctx, "vpc", &Vpc.InstanceArgs{
//				CidrBlock: pulumi.String("10.0.0.0/16"),
//			})
//			if err != nil {
//				return err
//			}
//			// create vpc subnet
//			subnet, err := Subnet.NewInstance(ctx, "subnet", &Subnet.InstanceArgs{
//				AvailabilityZone: pulumi.String(availabilityZone),
//				VpcId:            vpc.ID(),
//				CidrBlock:        pulumi.String("10.0.20.0/28"),
//				IsMulticast:      pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			// create postgresql
//			exampleInstance, err := Postgresql.NewInstance(ctx, "exampleInstance", &Postgresql.InstanceArgs{
//				AvailabilityZone: pulumi.String(availabilityZone),
//				ChargeType:       pulumi.String("POSTPAID_BY_HOUR"),
//				VpcId:            vpc.ID(),
//				SubnetId:         subnet.ID(),
//				DbMajorVersion:   pulumi.String("10"),
//				EngineVersion:    pulumi.String("10.23"),
//				RootUser:         pulumi.String("root123"),
//				RootPassword:     pulumi.String("Root123$"),
//				Charset:          pulumi.String("UTF8"),
//				ProjectId:        pulumi.Int(0),
//				Cpu:              pulumi.Int(1),
//				Memory:           pulumi.Int(2),
//				Storage:          pulumi.Int(10),
//				Tags: pulumi.Map{
//					"test": pulumi.Any("tf"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// create account
//			exampleAccount, err := Postgresql.NewAccount(ctx, "exampleAccount", &Postgresql.AccountArgs{
//				DbInstanceId: exampleInstance.ID(),
//				UserName:     pulumi.String("tf_example"),
//				Password:     pulumi.String("Password@123"),
//				Type:         pulumi.String("normal"),
//				Remark:       pulumi.String("remark"),
//				LockStatus:   pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			// create account privileges
//			_, err = Postgresql.NewAccountPrivilegesOperation(ctx, "exampleAccountPrivilegesOperation", &Postgresql.AccountPrivilegesOperationArgs{
//				DbInstanceId: exampleInstance.ID(),
//				UserName:     exampleAccount.UserName,
//				ModifyPrivilegeSets: postgresql.AccountPrivilegesOperationModifyPrivilegeSetArray{
//					&postgresql.AccountPrivilegesOperationModifyPrivilegeSetArgs{
//						DatabasePrivilege: &postgresql.AccountPrivilegesOperationModifyPrivilegeSetDatabasePrivilegeArgs{
//							Object: &postgresql.AccountPrivilegesOperationModifyPrivilegeSetDatabasePrivilegeObjectArgs{
//								ObjectName: pulumi.String("postgres"),
//								ObjectType: pulumi.String("database"),
//							},
//							PrivilegeSets: pulumi.StringArray{
//								pulumi.String("CONNECT"),
//								pulumi.String("TEMPORARY"),
//								pulumi.String("CREATE"),
//							},
//						},
//						ModifyType: pulumi.String("grantObject"),
//						IsCascade:  pulumi.Bool(false),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type AccountPrivilegesOperation struct {
	pulumi.CustomResourceState

	// Instance ID in the format of postgres-4wdeb0zv.
	DbInstanceId pulumi.StringOutput `pulumi:"dbInstanceId"`
	// Privileges to modify. Batch modification supported, up to 50 entries at a time.
	ModifyPrivilegeSets AccountPrivilegesOperationModifyPrivilegeSetArrayOutput `pulumi:"modifyPrivilegeSets"`
	// Instance username.
	UserName pulumi.StringOutput `pulumi:"userName"`
}

// NewAccountPrivilegesOperation registers a new resource with the given unique name, arguments, and options.
func NewAccountPrivilegesOperation(ctx *pulumi.Context,
	name string, args *AccountPrivilegesOperationArgs, opts ...pulumi.ResourceOption) (*AccountPrivilegesOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DbInstanceId'")
	}
	if args.ModifyPrivilegeSets == nil {
		return nil, errors.New("invalid value for required argument 'ModifyPrivilegeSets'")
	}
	if args.UserName == nil {
		return nil, errors.New("invalid value for required argument 'UserName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountPrivilegesOperation
	err := ctx.RegisterResource("tencentcloud:Postgresql/accountPrivilegesOperation:AccountPrivilegesOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountPrivilegesOperation gets an existing AccountPrivilegesOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountPrivilegesOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountPrivilegesOperationState, opts ...pulumi.ResourceOption) (*AccountPrivilegesOperation, error) {
	var resource AccountPrivilegesOperation
	err := ctx.ReadResource("tencentcloud:Postgresql/accountPrivilegesOperation:AccountPrivilegesOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountPrivilegesOperation resources.
type accountPrivilegesOperationState struct {
	// Instance ID in the format of postgres-4wdeb0zv.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// Privileges to modify. Batch modification supported, up to 50 entries at a time.
	ModifyPrivilegeSets []AccountPrivilegesOperationModifyPrivilegeSet `pulumi:"modifyPrivilegeSets"`
	// Instance username.
	UserName *string `pulumi:"userName"`
}

type AccountPrivilegesOperationState struct {
	// Instance ID in the format of postgres-4wdeb0zv.
	DbInstanceId pulumi.StringPtrInput
	// Privileges to modify. Batch modification supported, up to 50 entries at a time.
	ModifyPrivilegeSets AccountPrivilegesOperationModifyPrivilegeSetArrayInput
	// Instance username.
	UserName pulumi.StringPtrInput
}

func (AccountPrivilegesOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPrivilegesOperationState)(nil)).Elem()
}

type accountPrivilegesOperationArgs struct {
	// Instance ID in the format of postgres-4wdeb0zv.
	DbInstanceId string `pulumi:"dbInstanceId"`
	// Privileges to modify. Batch modification supported, up to 50 entries at a time.
	ModifyPrivilegeSets []AccountPrivilegesOperationModifyPrivilegeSet `pulumi:"modifyPrivilegeSets"`
	// Instance username.
	UserName string `pulumi:"userName"`
}

// The set of arguments for constructing a AccountPrivilegesOperation resource.
type AccountPrivilegesOperationArgs struct {
	// Instance ID in the format of postgres-4wdeb0zv.
	DbInstanceId pulumi.StringInput
	// Privileges to modify. Batch modification supported, up to 50 entries at a time.
	ModifyPrivilegeSets AccountPrivilegesOperationModifyPrivilegeSetArrayInput
	// Instance username.
	UserName pulumi.StringInput
}

func (AccountPrivilegesOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPrivilegesOperationArgs)(nil)).Elem()
}

type AccountPrivilegesOperationInput interface {
	pulumi.Input

	ToAccountPrivilegesOperationOutput() AccountPrivilegesOperationOutput
	ToAccountPrivilegesOperationOutputWithContext(ctx context.Context) AccountPrivilegesOperationOutput
}

func (*AccountPrivilegesOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPrivilegesOperation)(nil)).Elem()
}

func (i *AccountPrivilegesOperation) ToAccountPrivilegesOperationOutput() AccountPrivilegesOperationOutput {
	return i.ToAccountPrivilegesOperationOutputWithContext(context.Background())
}

func (i *AccountPrivilegesOperation) ToAccountPrivilegesOperationOutputWithContext(ctx context.Context) AccountPrivilegesOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegesOperationOutput)
}

// AccountPrivilegesOperationArrayInput is an input type that accepts AccountPrivilegesOperationArray and AccountPrivilegesOperationArrayOutput values.
// You can construct a concrete instance of `AccountPrivilegesOperationArrayInput` via:
//
//	AccountPrivilegesOperationArray{ AccountPrivilegesOperationArgs{...} }
type AccountPrivilegesOperationArrayInput interface {
	pulumi.Input

	ToAccountPrivilegesOperationArrayOutput() AccountPrivilegesOperationArrayOutput
	ToAccountPrivilegesOperationArrayOutputWithContext(context.Context) AccountPrivilegesOperationArrayOutput
}

type AccountPrivilegesOperationArray []AccountPrivilegesOperationInput

func (AccountPrivilegesOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountPrivilegesOperation)(nil)).Elem()
}

func (i AccountPrivilegesOperationArray) ToAccountPrivilegesOperationArrayOutput() AccountPrivilegesOperationArrayOutput {
	return i.ToAccountPrivilegesOperationArrayOutputWithContext(context.Background())
}

func (i AccountPrivilegesOperationArray) ToAccountPrivilegesOperationArrayOutputWithContext(ctx context.Context) AccountPrivilegesOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegesOperationArrayOutput)
}

// AccountPrivilegesOperationMapInput is an input type that accepts AccountPrivilegesOperationMap and AccountPrivilegesOperationMapOutput values.
// You can construct a concrete instance of `AccountPrivilegesOperationMapInput` via:
//
//	AccountPrivilegesOperationMap{ "key": AccountPrivilegesOperationArgs{...} }
type AccountPrivilegesOperationMapInput interface {
	pulumi.Input

	ToAccountPrivilegesOperationMapOutput() AccountPrivilegesOperationMapOutput
	ToAccountPrivilegesOperationMapOutputWithContext(context.Context) AccountPrivilegesOperationMapOutput
}

type AccountPrivilegesOperationMap map[string]AccountPrivilegesOperationInput

func (AccountPrivilegesOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountPrivilegesOperation)(nil)).Elem()
}

func (i AccountPrivilegesOperationMap) ToAccountPrivilegesOperationMapOutput() AccountPrivilegesOperationMapOutput {
	return i.ToAccountPrivilegesOperationMapOutputWithContext(context.Background())
}

func (i AccountPrivilegesOperationMap) ToAccountPrivilegesOperationMapOutputWithContext(ctx context.Context) AccountPrivilegesOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPrivilegesOperationMapOutput)
}

type AccountPrivilegesOperationOutput struct{ *pulumi.OutputState }

func (AccountPrivilegesOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPrivilegesOperation)(nil)).Elem()
}

func (o AccountPrivilegesOperationOutput) ToAccountPrivilegesOperationOutput() AccountPrivilegesOperationOutput {
	return o
}

func (o AccountPrivilegesOperationOutput) ToAccountPrivilegesOperationOutputWithContext(ctx context.Context) AccountPrivilegesOperationOutput {
	return o
}

// Instance ID in the format of postgres-4wdeb0zv.
func (o AccountPrivilegesOperationOutput) DbInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountPrivilegesOperation) pulumi.StringOutput { return v.DbInstanceId }).(pulumi.StringOutput)
}

// Privileges to modify. Batch modification supported, up to 50 entries at a time.
func (o AccountPrivilegesOperationOutput) ModifyPrivilegeSets() AccountPrivilegesOperationModifyPrivilegeSetArrayOutput {
	return o.ApplyT(func(v *AccountPrivilegesOperation) AccountPrivilegesOperationModifyPrivilegeSetArrayOutput {
		return v.ModifyPrivilegeSets
	}).(AccountPrivilegesOperationModifyPrivilegeSetArrayOutput)
}

// Instance username.
func (o AccountPrivilegesOperationOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountPrivilegesOperation) pulumi.StringOutput { return v.UserName }).(pulumi.StringOutput)
}

type AccountPrivilegesOperationArrayOutput struct{ *pulumi.OutputState }

func (AccountPrivilegesOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountPrivilegesOperation)(nil)).Elem()
}

func (o AccountPrivilegesOperationArrayOutput) ToAccountPrivilegesOperationArrayOutput() AccountPrivilegesOperationArrayOutput {
	return o
}

func (o AccountPrivilegesOperationArrayOutput) ToAccountPrivilegesOperationArrayOutputWithContext(ctx context.Context) AccountPrivilegesOperationArrayOutput {
	return o
}

func (o AccountPrivilegesOperationArrayOutput) Index(i pulumi.IntInput) AccountPrivilegesOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountPrivilegesOperation {
		return vs[0].([]*AccountPrivilegesOperation)[vs[1].(int)]
	}).(AccountPrivilegesOperationOutput)
}

type AccountPrivilegesOperationMapOutput struct{ *pulumi.OutputState }

func (AccountPrivilegesOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountPrivilegesOperation)(nil)).Elem()
}

func (o AccountPrivilegesOperationMapOutput) ToAccountPrivilegesOperationMapOutput() AccountPrivilegesOperationMapOutput {
	return o
}

func (o AccountPrivilegesOperationMapOutput) ToAccountPrivilegesOperationMapOutputWithContext(ctx context.Context) AccountPrivilegesOperationMapOutput {
	return o
}

func (o AccountPrivilegesOperationMapOutput) MapIndex(k pulumi.StringInput) AccountPrivilegesOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountPrivilegesOperation {
		return vs[0].(map[string]*AccountPrivilegesOperation)[vs[1].(string)]
	}).(AccountPrivilegesOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegesOperationInput)(nil)).Elem(), &AccountPrivilegesOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegesOperationArrayInput)(nil)).Elem(), AccountPrivilegesOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPrivilegesOperationMapInput)(nil)).Elem(), AccountPrivilegesOperationMap{})
	pulumi.RegisterOutputType(AccountPrivilegesOperationOutput{})
	pulumi.RegisterOutputType(AccountPrivilegesOperationArrayOutput{})
	pulumi.RegisterOutputType(AccountPrivilegesOperationMapOutput{})
}
