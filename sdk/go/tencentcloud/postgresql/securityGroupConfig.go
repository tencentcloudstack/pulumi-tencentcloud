// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a postgresql securityGroupConfig
//
// ## Example Usage
// ### Set security group for the sepcified postgres instance
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Postgresql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Postgresql.NewSecurityGroupConfig(ctx, "securityGroupConfig", &Postgresql.SecurityGroupConfigArgs{
//				SecurityGroupIdSets: pulumi.StringArray{
//					pulumi.Any(local.Sg_id),
//					pulumi.Any(local.Sg_id2),
//				},
//				DbInstanceId: pulumi.Any(local.Pgsql_id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Set security group for the specified readonly group
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Postgresql"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			group, err := Postgresql.NewReadonlyGroup(ctx, "group", &Postgresql.ReadonlyGroupArgs{
//				MasterDbInstanceId:       pulumi.Any(local.Pgsql_id),
//				ProjectId:                pulumi.Int(0),
//				SubnetId:                 pulumi.Any(local.Subnet_id),
//				VpcId:                    pulumi.Any(local.Vpc_id),
//				ReplayLagEliminate:       pulumi.Int(1),
//				ReplayLatencyEliminate:   pulumi.Int(1),
//				MaxReplayLag:             pulumi.Int(100),
//				MaxReplayLatency:         pulumi.Int(512),
//				MinDelayEliminateReserve: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Postgresql.NewSecurityGroupConfig(ctx, "securityGroupConfig", &Postgresql.SecurityGroupConfigArgs{
//				SecurityGroupIdSets: pulumi.StringArray{
//					pulumi.Any(local.Sg_id),
//					pulumi.Any(local.Sg_id2),
//				},
//				ReadOnlyGroupId: group.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SecurityGroupConfig struct {
	pulumi.CustomResourceState

	// Instance ID. Either this parameter or ReadOnlyGroupId must be passed in. If both parameters are passed in, ReadOnlyGroupId will be ignored.
	DbInstanceId pulumi.StringPtrOutput `pulumi:"dbInstanceId"`
	// RO group ID. Either this parameter or DBInstanceId must be passed in. To query the security groups associated with the RO groups, only pass in ReadOnlyGroupId.
	ReadOnlyGroupId pulumi.StringPtrOutput `pulumi:"readOnlyGroupId"`
	// Information of security groups in array.
	SecurityGroupIdSets pulumi.StringArrayOutput `pulumi:"securityGroupIdSets"`
}

// NewSecurityGroupConfig registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupConfig(ctx *pulumi.Context,
	name string, args *SecurityGroupConfigArgs, opts ...pulumi.ResourceOption) (*SecurityGroupConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupIdSets == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIdSets'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource SecurityGroupConfig
	err := ctx.RegisterResource("tencentcloud:Postgresql/securityGroupConfig:SecurityGroupConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupConfig gets an existing SecurityGroupConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupConfigState, opts ...pulumi.ResourceOption) (*SecurityGroupConfig, error) {
	var resource SecurityGroupConfig
	err := ctx.ReadResource("tencentcloud:Postgresql/securityGroupConfig:SecurityGroupConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupConfig resources.
type securityGroupConfigState struct {
	// Instance ID. Either this parameter or ReadOnlyGroupId must be passed in. If both parameters are passed in, ReadOnlyGroupId will be ignored.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// RO group ID. Either this parameter or DBInstanceId must be passed in. To query the security groups associated with the RO groups, only pass in ReadOnlyGroupId.
	ReadOnlyGroupId *string `pulumi:"readOnlyGroupId"`
	// Information of security groups in array.
	SecurityGroupIdSets []string `pulumi:"securityGroupIdSets"`
}

type SecurityGroupConfigState struct {
	// Instance ID. Either this parameter or ReadOnlyGroupId must be passed in. If both parameters are passed in, ReadOnlyGroupId will be ignored.
	DbInstanceId pulumi.StringPtrInput
	// RO group ID. Either this parameter or DBInstanceId must be passed in. To query the security groups associated with the RO groups, only pass in ReadOnlyGroupId.
	ReadOnlyGroupId pulumi.StringPtrInput
	// Information of security groups in array.
	SecurityGroupIdSets pulumi.StringArrayInput
}

func (SecurityGroupConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupConfigState)(nil)).Elem()
}

type securityGroupConfigArgs struct {
	// Instance ID. Either this parameter or ReadOnlyGroupId must be passed in. If both parameters are passed in, ReadOnlyGroupId will be ignored.
	DbInstanceId *string `pulumi:"dbInstanceId"`
	// RO group ID. Either this parameter or DBInstanceId must be passed in. To query the security groups associated with the RO groups, only pass in ReadOnlyGroupId.
	ReadOnlyGroupId *string `pulumi:"readOnlyGroupId"`
	// Information of security groups in array.
	SecurityGroupIdSets []string `pulumi:"securityGroupIdSets"`
}

// The set of arguments for constructing a SecurityGroupConfig resource.
type SecurityGroupConfigArgs struct {
	// Instance ID. Either this parameter or ReadOnlyGroupId must be passed in. If both parameters are passed in, ReadOnlyGroupId will be ignored.
	DbInstanceId pulumi.StringPtrInput
	// RO group ID. Either this parameter or DBInstanceId must be passed in. To query the security groups associated with the RO groups, only pass in ReadOnlyGroupId.
	ReadOnlyGroupId pulumi.StringPtrInput
	// Information of security groups in array.
	SecurityGroupIdSets pulumi.StringArrayInput
}

func (SecurityGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupConfigArgs)(nil)).Elem()
}

type SecurityGroupConfigInput interface {
	pulumi.Input

	ToSecurityGroupConfigOutput() SecurityGroupConfigOutput
	ToSecurityGroupConfigOutputWithContext(ctx context.Context) SecurityGroupConfigOutput
}

func (*SecurityGroupConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupConfig)(nil)).Elem()
}

func (i *SecurityGroupConfig) ToSecurityGroupConfigOutput() SecurityGroupConfigOutput {
	return i.ToSecurityGroupConfigOutputWithContext(context.Background())
}

func (i *SecurityGroupConfig) ToSecurityGroupConfigOutputWithContext(ctx context.Context) SecurityGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupConfigOutput)
}

// SecurityGroupConfigArrayInput is an input type that accepts SecurityGroupConfigArray and SecurityGroupConfigArrayOutput values.
// You can construct a concrete instance of `SecurityGroupConfigArrayInput` via:
//
//	SecurityGroupConfigArray{ SecurityGroupConfigArgs{...} }
type SecurityGroupConfigArrayInput interface {
	pulumi.Input

	ToSecurityGroupConfigArrayOutput() SecurityGroupConfigArrayOutput
	ToSecurityGroupConfigArrayOutputWithContext(context.Context) SecurityGroupConfigArrayOutput
}

type SecurityGroupConfigArray []SecurityGroupConfigInput

func (SecurityGroupConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupConfig)(nil)).Elem()
}

func (i SecurityGroupConfigArray) ToSecurityGroupConfigArrayOutput() SecurityGroupConfigArrayOutput {
	return i.ToSecurityGroupConfigArrayOutputWithContext(context.Background())
}

func (i SecurityGroupConfigArray) ToSecurityGroupConfigArrayOutputWithContext(ctx context.Context) SecurityGroupConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupConfigArrayOutput)
}

// SecurityGroupConfigMapInput is an input type that accepts SecurityGroupConfigMap and SecurityGroupConfigMapOutput values.
// You can construct a concrete instance of `SecurityGroupConfigMapInput` via:
//
//	SecurityGroupConfigMap{ "key": SecurityGroupConfigArgs{...} }
type SecurityGroupConfigMapInput interface {
	pulumi.Input

	ToSecurityGroupConfigMapOutput() SecurityGroupConfigMapOutput
	ToSecurityGroupConfigMapOutputWithContext(context.Context) SecurityGroupConfigMapOutput
}

type SecurityGroupConfigMap map[string]SecurityGroupConfigInput

func (SecurityGroupConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupConfig)(nil)).Elem()
}

func (i SecurityGroupConfigMap) ToSecurityGroupConfigMapOutput() SecurityGroupConfigMapOutput {
	return i.ToSecurityGroupConfigMapOutputWithContext(context.Background())
}

func (i SecurityGroupConfigMap) ToSecurityGroupConfigMapOutputWithContext(ctx context.Context) SecurityGroupConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupConfigMapOutput)
}

type SecurityGroupConfigOutput struct{ *pulumi.OutputState }

func (SecurityGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupConfig)(nil)).Elem()
}

func (o SecurityGroupConfigOutput) ToSecurityGroupConfigOutput() SecurityGroupConfigOutput {
	return o
}

func (o SecurityGroupConfigOutput) ToSecurityGroupConfigOutputWithContext(ctx context.Context) SecurityGroupConfigOutput {
	return o
}

// Instance ID. Either this parameter or ReadOnlyGroupId must be passed in. If both parameters are passed in, ReadOnlyGroupId will be ignored.
func (o SecurityGroupConfigOutput) DbInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupConfig) pulumi.StringPtrOutput { return v.DbInstanceId }).(pulumi.StringPtrOutput)
}

// RO group ID. Either this parameter or DBInstanceId must be passed in. To query the security groups associated with the RO groups, only pass in ReadOnlyGroupId.
func (o SecurityGroupConfigOutput) ReadOnlyGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupConfig) pulumi.StringPtrOutput { return v.ReadOnlyGroupId }).(pulumi.StringPtrOutput)
}

// Information of security groups in array.
func (o SecurityGroupConfigOutput) SecurityGroupIdSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityGroupConfig) pulumi.StringArrayOutput { return v.SecurityGroupIdSets }).(pulumi.StringArrayOutput)
}

type SecurityGroupConfigArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupConfig)(nil)).Elem()
}

func (o SecurityGroupConfigArrayOutput) ToSecurityGroupConfigArrayOutput() SecurityGroupConfigArrayOutput {
	return o
}

func (o SecurityGroupConfigArrayOutput) ToSecurityGroupConfigArrayOutputWithContext(ctx context.Context) SecurityGroupConfigArrayOutput {
	return o
}

func (o SecurityGroupConfigArrayOutput) Index(i pulumi.IntInput) SecurityGroupConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGroupConfig {
		return vs[0].([]*SecurityGroupConfig)[vs[1].(int)]
	}).(SecurityGroupConfigOutput)
}

type SecurityGroupConfigMapOutput struct{ *pulumi.OutputState }

func (SecurityGroupConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupConfig)(nil)).Elem()
}

func (o SecurityGroupConfigMapOutput) ToSecurityGroupConfigMapOutput() SecurityGroupConfigMapOutput {
	return o
}

func (o SecurityGroupConfigMapOutput) ToSecurityGroupConfigMapOutputWithContext(ctx context.Context) SecurityGroupConfigMapOutput {
	return o
}

func (o SecurityGroupConfigMapOutput) MapIndex(k pulumi.StringInput) SecurityGroupConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGroupConfig {
		return vs[0].(map[string]*SecurityGroupConfig)[vs[1].(string)]
	}).(SecurityGroupConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupConfigInput)(nil)).Elem(), &SecurityGroupConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupConfigArrayInput)(nil)).Elem(), SecurityGroupConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupConfigMapInput)(nil)).Elem(), SecurityGroupConfigMap{})
	pulumi.RegisterOutputType(SecurityGroupConfigOutput{})
	pulumi.RegisterOutputType(SecurityGroupConfigArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupConfigMapOutput{})
}
