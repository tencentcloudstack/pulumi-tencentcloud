// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to create a tke encryptionProtection
//
// ## Example Usage
// ### Enable tke encryption protection
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Kubernetes"
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kms"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kubernetes"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			exampleRegion := "ap-guangzhou"
//			if param := cfg.Get("exampleRegion"); param != "" {
//				exampleRegion = param
//			}
//			exampleClusterCidr := "10.32.0.0/16"
//			if param := cfg.Get("exampleClusterCidr"); param != "" {
//				exampleClusterCidr = param
//			}
//			availabilityZone := "ap-guangzhou-3"
//			if param := cfg.Get("availabilityZone"); param != "" {
//				availabilityZone = param
//			}
//			vpc, err := Vpc.GetSubnets(ctx, &vpc.GetSubnetsArgs{
//				IsDefault:        pulumi.BoolRef(true),
//				AvailabilityZone: pulumi.StringRef(availabilityZone),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			exampleCluster, err := Kubernetes.NewCluster(ctx, "exampleCluster", &Kubernetes.ClusterArgs{
//				VpcId:                pulumi.String(vpc.InstanceLists[0].VpcId),
//				ClusterCidr:          pulumi.String(exampleClusterCidr),
//				ClusterMaxPodNum:     pulumi.Int(32),
//				ClusterName:          pulumi.String("tf_example_cluster"),
//				ClusterDesc:          pulumi.String("a tf example cluster for the kms test"),
//				ClusterMaxServiceNum: pulumi.Int(32),
//				ClusterDeployType:    pulumi.String("MANAGED_CLUSTER"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleKey, err := Kms.NewKey(ctx, "exampleKey", &Kms.KeyArgs{
//				Alias:       pulumi.String("tf-example-kms-key"),
//				Description: pulumi.String("example of kms key instance"),
//				KeyUsage:    pulumi.String("ENCRYPT_DECRYPT"),
//				IsEnabled:   pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = Kubernetes.NewEncryptionProtection(ctx, "exampleEncryptionProtection", &Kubernetes.EncryptionProtectionArgs{
//				ClusterId: exampleCluster.ID(),
//				KmsConfiguration: &kubernetes.EncryptionProtectionKmsConfigurationArgs{
//					KeyId:     exampleKey.ID(),
//					KmsRegion: pulumi.String(exampleRegion),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type EncryptionProtection struct {
	pulumi.CustomResourceState

	// cluster id.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// kms encryption configuration.
	KmsConfiguration EncryptionProtectionKmsConfigurationOutput `pulumi:"kmsConfiguration"`
	// kms encryption status.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewEncryptionProtection registers a new resource with the given unique name, arguments, and options.
func NewEncryptionProtection(ctx *pulumi.Context,
	name string, args *EncryptionProtectionArgs, opts ...pulumi.ResourceOption) (*EncryptionProtection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.KmsConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'KmsConfiguration'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource EncryptionProtection
	err := ctx.RegisterResource("tencentcloud:Kubernetes/encryptionProtection:EncryptionProtection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEncryptionProtection gets an existing EncryptionProtection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEncryptionProtection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EncryptionProtectionState, opts ...pulumi.ResourceOption) (*EncryptionProtection, error) {
	var resource EncryptionProtection
	err := ctx.ReadResource("tencentcloud:Kubernetes/encryptionProtection:EncryptionProtection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EncryptionProtection resources.
type encryptionProtectionState struct {
	// cluster id.
	ClusterId *string `pulumi:"clusterId"`
	// kms encryption configuration.
	KmsConfiguration *EncryptionProtectionKmsConfiguration `pulumi:"kmsConfiguration"`
	// kms encryption status.
	Status *string `pulumi:"status"`
}

type EncryptionProtectionState struct {
	// cluster id.
	ClusterId pulumi.StringPtrInput
	// kms encryption configuration.
	KmsConfiguration EncryptionProtectionKmsConfigurationPtrInput
	// kms encryption status.
	Status pulumi.StringPtrInput
}

func (EncryptionProtectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionProtectionState)(nil)).Elem()
}

type encryptionProtectionArgs struct {
	// cluster id.
	ClusterId string `pulumi:"clusterId"`
	// kms encryption configuration.
	KmsConfiguration EncryptionProtectionKmsConfiguration `pulumi:"kmsConfiguration"`
}

// The set of arguments for constructing a EncryptionProtection resource.
type EncryptionProtectionArgs struct {
	// cluster id.
	ClusterId pulumi.StringInput
	// kms encryption configuration.
	KmsConfiguration EncryptionProtectionKmsConfigurationInput
}

func (EncryptionProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*encryptionProtectionArgs)(nil)).Elem()
}

type EncryptionProtectionInput interface {
	pulumi.Input

	ToEncryptionProtectionOutput() EncryptionProtectionOutput
	ToEncryptionProtectionOutputWithContext(ctx context.Context) EncryptionProtectionOutput
}

func (*EncryptionProtection) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProtection)(nil)).Elem()
}

func (i *EncryptionProtection) ToEncryptionProtectionOutput() EncryptionProtectionOutput {
	return i.ToEncryptionProtectionOutputWithContext(context.Background())
}

func (i *EncryptionProtection) ToEncryptionProtectionOutputWithContext(ctx context.Context) EncryptionProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionProtectionOutput)
}

// EncryptionProtectionArrayInput is an input type that accepts EncryptionProtectionArray and EncryptionProtectionArrayOutput values.
// You can construct a concrete instance of `EncryptionProtectionArrayInput` via:
//
//	EncryptionProtectionArray{ EncryptionProtectionArgs{...} }
type EncryptionProtectionArrayInput interface {
	pulumi.Input

	ToEncryptionProtectionArrayOutput() EncryptionProtectionArrayOutput
	ToEncryptionProtectionArrayOutputWithContext(context.Context) EncryptionProtectionArrayOutput
}

type EncryptionProtectionArray []EncryptionProtectionInput

func (EncryptionProtectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EncryptionProtection)(nil)).Elem()
}

func (i EncryptionProtectionArray) ToEncryptionProtectionArrayOutput() EncryptionProtectionArrayOutput {
	return i.ToEncryptionProtectionArrayOutputWithContext(context.Background())
}

func (i EncryptionProtectionArray) ToEncryptionProtectionArrayOutputWithContext(ctx context.Context) EncryptionProtectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionProtectionArrayOutput)
}

// EncryptionProtectionMapInput is an input type that accepts EncryptionProtectionMap and EncryptionProtectionMapOutput values.
// You can construct a concrete instance of `EncryptionProtectionMapInput` via:
//
//	EncryptionProtectionMap{ "key": EncryptionProtectionArgs{...} }
type EncryptionProtectionMapInput interface {
	pulumi.Input

	ToEncryptionProtectionMapOutput() EncryptionProtectionMapOutput
	ToEncryptionProtectionMapOutputWithContext(context.Context) EncryptionProtectionMapOutput
}

type EncryptionProtectionMap map[string]EncryptionProtectionInput

func (EncryptionProtectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EncryptionProtection)(nil)).Elem()
}

func (i EncryptionProtectionMap) ToEncryptionProtectionMapOutput() EncryptionProtectionMapOutput {
	return i.ToEncryptionProtectionMapOutputWithContext(context.Background())
}

func (i EncryptionProtectionMap) ToEncryptionProtectionMapOutputWithContext(ctx context.Context) EncryptionProtectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EncryptionProtectionMapOutput)
}

type EncryptionProtectionOutput struct{ *pulumi.OutputState }

func (EncryptionProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EncryptionProtection)(nil)).Elem()
}

func (o EncryptionProtectionOutput) ToEncryptionProtectionOutput() EncryptionProtectionOutput {
	return o
}

func (o EncryptionProtectionOutput) ToEncryptionProtectionOutputWithContext(ctx context.Context) EncryptionProtectionOutput {
	return o
}

// cluster id.
func (o EncryptionProtectionOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionProtection) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// kms encryption configuration.
func (o EncryptionProtectionOutput) KmsConfiguration() EncryptionProtectionKmsConfigurationOutput {
	return o.ApplyT(func(v *EncryptionProtection) EncryptionProtectionKmsConfigurationOutput { return v.KmsConfiguration }).(EncryptionProtectionKmsConfigurationOutput)
}

// kms encryption status.
func (o EncryptionProtectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EncryptionProtection) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type EncryptionProtectionArrayOutput struct{ *pulumi.OutputState }

func (EncryptionProtectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EncryptionProtection)(nil)).Elem()
}

func (o EncryptionProtectionArrayOutput) ToEncryptionProtectionArrayOutput() EncryptionProtectionArrayOutput {
	return o
}

func (o EncryptionProtectionArrayOutput) ToEncryptionProtectionArrayOutputWithContext(ctx context.Context) EncryptionProtectionArrayOutput {
	return o
}

func (o EncryptionProtectionArrayOutput) Index(i pulumi.IntInput) EncryptionProtectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EncryptionProtection {
		return vs[0].([]*EncryptionProtection)[vs[1].(int)]
	}).(EncryptionProtectionOutput)
}

type EncryptionProtectionMapOutput struct{ *pulumi.OutputState }

func (EncryptionProtectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EncryptionProtection)(nil)).Elem()
}

func (o EncryptionProtectionMapOutput) ToEncryptionProtectionMapOutput() EncryptionProtectionMapOutput {
	return o
}

func (o EncryptionProtectionMapOutput) ToEncryptionProtectionMapOutputWithContext(ctx context.Context) EncryptionProtectionMapOutput {
	return o
}

func (o EncryptionProtectionMapOutput) MapIndex(k pulumi.StringInput) EncryptionProtectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EncryptionProtection {
		return vs[0].(map[string]*EncryptionProtection)[vs[1].(string)]
	}).(EncryptionProtectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionProtectionInput)(nil)).Elem(), &EncryptionProtection{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionProtectionArrayInput)(nil)).Elem(), EncryptionProtectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EncryptionProtectionMapInput)(nil)).Elem(), EncryptionProtectionMap{})
	pulumi.RegisterOutputType(EncryptionProtectionOutput{})
	pulumi.RegisterOutputType(EncryptionProtectionArrayOutput{})
	pulumi.RegisterOutputType(EncryptionProtectionMapOutput{})
}
