// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetes

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of kubernetes clusterInstances
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-tencentcloud/sdk/go/tencentcloud/Kubernetes"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/tencentcloudstack/pulumi-tencentcloud/sdk/go/tencentcloud/Kubernetes"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Kubernetes.GetClusterInstances(ctx, &kubernetes.GetClusterInstancesArgs{
//				ClusterId: "cls-ely08ic4",
//				Filters: []kubernetes.GetClusterInstancesFilter{
//					kubernetes.GetClusterInstancesFilter{
//						Name: "nodepool-id",
//						Values: []string{
//							"np-p4e6whqu",
//						},
//					},
//				},
//				InstanceIds: []string{
//					"ins-kqmx8dm2",
//				},
//				InstanceRole: pulumi.StringRef("WORKER"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetClusterInstances(ctx *pulumi.Context, args *GetClusterInstancesArgs, opts ...pulumi.InvokeOption) (*GetClusterInstancesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetClusterInstancesResult
	err := ctx.Invoke("tencentcloud:Kubernetes/getClusterInstances:getClusterInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterInstances.
type GetClusterInstancesArgs struct {
	// ID of the cluster.
	ClusterId string `pulumi:"clusterId"`
	// List of filter conditions. The optional values of Name are `nodepool-id` and `nodepool-instance-type`. Name is `nodepool-id`, which means filtering machines based on node pool id, and Value is the specific node pool id. Name is `nodepool-instance-type`, which indicates how the node is added to the node pool. Value is MANUALLY_ADDED (manually added to the node pool), AUTOSCALING_ADDED (joined by scaling group expansion method), ALL (manually join the node pool and join the node pool through scaling group expansion).
	Filters []GetClusterInstancesFilter `pulumi:"filters"`
	// List of node instance IDs to be obtained. If it is empty, it means pulling all node instances in the cluster.
	InstanceIds []string `pulumi:"instanceIds"`
	// Node role, MASTER, WORKER, ETCD, MASTER_ETCD,ALL, default is WORKER.
	InstanceRole *string `pulumi:"instanceRole"`
	// Used to save results.
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getClusterInstances.
type GetClusterInstancesResult struct {
	ClusterId string                      `pulumi:"clusterId"`
	Filters   []GetClusterInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	InstanceIds []string `pulumi:"instanceIds"`
	// Node role, MASTER, WORKER, ETCD, MASTER_ETCD,ALL, default is WORKER.
	InstanceRole *string `pulumi:"instanceRole"`
	// List of instances in the cluster.
	InstanceSets     []GetClusterInstancesInstanceSet `pulumi:"instanceSets"`
	ResultOutputFile *string                          `pulumi:"resultOutputFile"`
}

func GetClusterInstancesOutput(ctx *pulumi.Context, args GetClusterInstancesOutputArgs, opts ...pulumi.InvokeOption) GetClusterInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClusterInstancesResult, error) {
			args := v.(GetClusterInstancesArgs)
			r, err := GetClusterInstances(ctx, &args, opts...)
			var s GetClusterInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClusterInstancesResultOutput)
}

// A collection of arguments for invoking getClusterInstances.
type GetClusterInstancesOutputArgs struct {
	// ID of the cluster.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// List of filter conditions. The optional values of Name are `nodepool-id` and `nodepool-instance-type`. Name is `nodepool-id`, which means filtering machines based on node pool id, and Value is the specific node pool id. Name is `nodepool-instance-type`, which indicates how the node is added to the node pool. Value is MANUALLY_ADDED (manually added to the node pool), AUTOSCALING_ADDED (joined by scaling group expansion method), ALL (manually join the node pool and join the node pool through scaling group expansion).
	Filters GetClusterInstancesFilterArrayInput `pulumi:"filters"`
	// List of node instance IDs to be obtained. If it is empty, it means pulling all node instances in the cluster.
	InstanceIds pulumi.StringArrayInput `pulumi:"instanceIds"`
	// Node role, MASTER, WORKER, ETCD, MASTER_ETCD,ALL, default is WORKER.
	InstanceRole pulumi.StringPtrInput `pulumi:"instanceRole"`
	// Used to save results.
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetClusterInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getClusterInstances.
type GetClusterInstancesResultOutput struct{ *pulumi.OutputState }

func (GetClusterInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterInstancesResult)(nil)).Elem()
}

func (o GetClusterInstancesResultOutput) ToGetClusterInstancesResultOutput() GetClusterInstancesResultOutput {
	return o
}

func (o GetClusterInstancesResultOutput) ToGetClusterInstancesResultOutputWithContext(ctx context.Context) GetClusterInstancesResultOutput {
	return o
}

func (o GetClusterInstancesResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterInstancesResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetClusterInstancesResultOutput) Filters() GetClusterInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetClusterInstancesResult) []GetClusterInstancesFilter { return v.Filters }).(GetClusterInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClusterInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClusterInstancesResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterInstancesResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// Node role, MASTER, WORKER, ETCD, MASTER_ETCD,ALL, default is WORKER.
func (o GetClusterInstancesResultOutput) InstanceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClusterInstancesResult) *string { return v.InstanceRole }).(pulumi.StringPtrOutput)
}

// List of instances in the cluster.
func (o GetClusterInstancesResultOutput) InstanceSets() GetClusterInstancesInstanceSetArrayOutput {
	return o.ApplyT(func(v GetClusterInstancesResult) []GetClusterInstancesInstanceSet { return v.InstanceSets }).(GetClusterInstancesInstanceSetArrayOutput)
}

func (o GetClusterInstancesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClusterInstancesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClusterInstancesResultOutput{})
}
